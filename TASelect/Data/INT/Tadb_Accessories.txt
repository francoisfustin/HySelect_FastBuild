new:CTable(CVACCESSOR_TAB) -> ROOT_TABLE
{
	"Control valve accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(CVADAPTER_TAB) -> ROOT_TABLE
{
	"Control valve adapters"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(ACTACCESSOR_TAB) -> ROOT_TABLE
{
	"Actuator accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(BCVACCESSOR_TAB) -> ROOT_TABLE
{
	"Balancing and control valve accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(ADAPTYPE_TAB) -> LIST_TAB
{
	"Adapter types"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(CONACCESSOR_TAB) -> ROOT_TABLE
{
	"Connection accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(THINSACCESSOR_TAB) -> ROOT_TABLE
{
	"Thermal insulation accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(VALVEACCESSOR_TAB) -> ROOT_TABLE
{
	"Valve accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(DPCACCESSOR_TAB) -> ROOT_TABLE
{
	"Dp controller accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(VSSLACCESSOR_TAB) -> ROOT_TABLE
{
	"Vessel accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(TECBOXACCESSOR_TAB) -> ROOT_TABLE
{
	"Tecbox accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(PLENOREFILLACC_TAB) -> ROOT_TABLE
{
	"Pleno Refill accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(REGVACCESSOR_TAB) -> ROOT_TABLE
{
	"Regulating valve accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(SVACCESSOR_TAB) -> ROOT_TABLE
{
	"Shut-off valve accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(SEPACCESSOR_TAB) -> ROOT_TABLE
{
	"Separator accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(FLOORHCTRLACC_TAB) -> ROOT_TABLE
{
	"Floor heating control accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(TAPCTRLACC_TAB) -> ROOT_TABLE
{
	"Tap water control accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(TRVACCESSOR_TAB) -> ROOT_TABLE
{
	"Thermostatic valve accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(MEASTOOLS_TAB) -> ROOT_TABLE
{
	"Measuring tools"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

new:CTable(MEASTOOLSTYPE_TAB) -> LIST_TAB
{
    "Measuring tools types"
    1                        // 0/1: 1 if this table is the true parent of the IDs in it.
}

// HYS-1938: TA-Smart Dp - 05 - Individual selection: right view
// Add mesuring tools accessories. 
new:CTable(MEASTOOLSACC_TAB) -> ROOT_TABLE
{
	"Measuring tools accessories"
	1						// 0/1: 1 if this table is the true parent of the IDs in it.
}

///////////////////////////////////////////////////////////////////
//
//		Table ACCTYPE_TAB : ordered enumeration of the types of
//							accessories
//
///////////////////////////////////////////////////////////////////

new:CDB_StringID(ACCTYP_CV)->ACCTYPE_TAB
{
	{
		"IDS_ACCTYP_CV"
	}
	1
	CVACCESSOR_TAB
}

new:CDB_StringID(ACCTYP_ACT)->ACCTYPE_TAB
{
	{
		"IDS_ACCTYP_ACT"
	}
	2
	ACTACCESSOR_TAB
}

///////////////////////////////////////////////////////////////////
//
//		Table ACCTYPE_TAB : ordered enumeration of the types of
//							accessories
//
///////////////////////////////////////////////////////////////////

// General valve accessories.
new:CDB_StringID(ACCTYP_VALVE)->ACCTYPE_TAB
{
	{
		"IDS_ACCTYP_VALVE"
	}
	2							// TODO: check about this numbering
	VALVEACCESSOR_TAB
}

///////////////////////////////////////////////////////////////////
//
//		Table ACCFAM_TAB : ordered enumeration of the families of
//							accessories
//
///////////////////////////////////////////////////////////////////

// Family of the female thread connection accessories.
new:CDB_StringID(ACCFAM_FTHREADCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_FEMALETHREADCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the female thread NPT connection accessories.
new:CDB_StringID(ACCFAM_FTHREADNPTCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_FEMALETHREADNPTCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the male thread connection accessories.
new:CDB_StringID(ACCFAM_MTHREADCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_MALETHREADCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the male thread NPT connection accessories.
new:CDB_StringID(ACCFAM_MTHREADNPTCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_MALETHREADNPTCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the welding connection accessories.
new:CDB_StringID(ACCFAM_WELDINGCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_WELDINGCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the soldering connection accessories.
new:CDB_StringID(ACCFAM_SOLDERCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SOLDERCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the soldering ANSI connection accessories.
new:CDB_StringID(ACCFAM_SOLDANSICON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SOLDERANSICONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the smooth end connection accessories.
new:CDB_StringID(ACCFAM_SMOTHENDCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SMOTHENDCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the double connection fitting accessories.
new:CDB_StringID(ACCFAM_DBLCONFITTING)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_DOUBLECONNECTIONFITTING"
	}
	++
	ACCTYP_VALVE
}

// Family of the screw connection accessories.
new:CDB_StringID(ACCFAM_SCREWCON)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SCREWCONNECTION"
	}
	++
	ACCTYP_VALVE
}

// Family of the transition nipple accessories.
new:CDB_StringID(ACCFAM_TRANSNIPPLE)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_TRANSITIONNIPPLE"
	}
	++
	ACCTYP_VALVE
}

// Family of the half coupling accessories.
new:CDB_StringID(ACCFAM_HALFCOUP)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_HALFCOUPLING"
	}
	++
	ACCTYP_VALVE
}

// Family of the compression fitting accessories.
new:CDB_StringID(ACCFAM_COMPFITTING)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_COMPRESSIONFITTING"
	}
	++
	ACCTYP_VALVE
}

// Family of the lenght adjustment fitting accessories.
new:CDB_StringID(ACCFAM_LENADJFITTING)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_LENGTHADJUSTMENTFITTING"
	}
	++
	ACCTYP_VALVE
}

// Family of the support sleeve accessories.
new:CDB_StringID(ACCFAM_SUPSLEEVE)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SUPPORTSLEEVE"
	}
	++
	ACCTYP_VALVE
}

// Family of the thermal insulation accessories.
new:CDB_StringID(ACCFAM_THINS)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_THINS"
	}
	++
	ACCTYP_VALVE
}

// Family of the miscellaneous accessories.
new:CDB_StringID(ACCFAM_MISC)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_MISC"
	}
	++
	ACCTYP_VALVE
}

// HYS-1108: Family of the stem heater accessories.
new:CDB_StringID(ACCFAM_STEMH)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_STEMH"
	}
	++
	ACCTYP_VALVE
}

// HYS-1894: Family of connection with mesh and check valve.
new:CDB_StringID(ACCFAM_CONMESHCHECK)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_CON_WITHMESHANDCHECK"
	}
	++
	ACCTYP_VALVE
}

////////////////////////////////////////////////////////////////
//
//		Table CVACCESSOR_TAB : Control valve accessories
//
////////////////////////////////////////////////////////////////
//
//	new:CDB_Product(ID)->CVACCESSOR_TAB
//	{
//		{
//			{
//				0						isDeleted
//				1						isAvailable
//				0						isHidden
//				1						isFix
//				0						Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
//				0						Free integer (bit 0: NotForIndSel, bit 1: NotForDirSel, bit 2: NotForHMCalc)
//				0						Sort integer (Allow to show a group of articles in the order defined with this variable).
//			}
//			Pmaxmin and Pmaxmax		in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
//			PNRangeID				Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
//			Tmax in �C
//			Tmin in �C
//		}
//		"Reference"				Reference to the product.
//		"Name"					Name of the product
//		TypeID					Identifier of the valve type 
//		FamilyID				Identifier of the family of the product
//		VersionID				Identifier of the version of the product
//		PriorityLevel			Level of priority for selection [1,10]
//		Comment					Product comment
//		ProdImgID				Product image ID
//		AccessGroupID			Identifier of the accessory group
//		PartOfaSet				Boolean indicating if the valve is part of a ActSet
//		Price					Price of the product
// 		ProductUseFlag			#eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
//		AccessorySeriesID		Identifier of the series of the accessory
//		isAttached				0/1: 1 if accessory cannot be ordered separately		
//   	AccTypeID				Identifier of Accessory type if #eBoth 
//		AccFamilyID				Identifier of Accessory family if #eBoth
//  }
// Inherited Fields
//	CDB_Thing::Deleted
//	CDB_Thing::Available
//	CDB_Thing::Hidden
//	CDB_Thing::Fixed
//	CDB_Thing::FreeInt1
//	CDB_Thing::FreeInt2
//	CDB_Thing::SortInt
//	CDB_HydroThing::Pmax
//	CDB_HydroThing::PNRange
//	CDB_HydroThing::Tmax
//	CDB_HydroThing::Tmin
//	CDB_Product::Reference
//	CDB_Product::Name
//  CDB_Product::TypeID
//	CDB_Product::FamilyID
//	CDB_Product::VersionID
//	CDB_Product::PriorityLevel
//	CDB_Product::Comment
//	CDB_Product::ProdImgID
//	CDB_Product::AccessGroupID
//	CDB_Product::PartOfaSet
//  CDB_Product::TableSetID
//	CDB_Product::Price
//	CDB_Product::ProductUseFlag
//	CDB_Product::AccessorySeriesID
//	CDB_Product::isAttached
//	CDB_Product::AccTypeID
//	CDB_Product::AccFamilyID
//
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
// Control valve accessories: Internal thread connect. parts
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV1_MZ_15) -> CVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68001-015"									// Reference to the TA Product
	"ACV 1 - 216/316 MZ 15"                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV1_MZ"                               // IDS of a more verbose description of the accessory	
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV1                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACV1_MZ_20) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68001-020"                                 // Reference to the TA Product
	"ACV 1 - 216/316 MZ 20"                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV1_MZ"                               // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV1                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth                                          
}

new:CDB_Product(ACV1_MZ_25) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68001-025"                                 // Reference to the TA Product
	"ACV 1 - 216/316 MZ 25"                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV1_MZ"                               // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV1                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Internal thread connect. parts of bronze
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV11_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68011-015"                                 // Reference to the TA Product
	"ACV 11"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV11"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV11                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV11_20) -> CVACCESSOR_TAB
{ Inherited(ACV11_15)
	{
		CDB_Product::Reference = "68011-020"
	}
}

new:CDB_Product(ACV11_25) -> CVACCESSOR_TAB
{ Inherited(ACV11_15)
	{
		CDB_Product::Reference = "68011-025"
	}
}

new:CDB_Product(ACV11_32) -> CVACCESSOR_TAB
{ Inherited(ACV11_15)
	{
		CDB_Product::Reference = "68011-032"
	}
}

new:CDB_Product(ACV11_40) -> CVACCESSOR_TAB
{ Inherited(ACV11_15)
	{
		CDB_Product::Reference = "68011-040"
	}
}

new:CDB_Product(ACV11_50) -> CVACCESSOR_TAB
{ Inherited(ACV11_15)
	{
		CDB_Product::Reference = "68011-050"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Plug made of CrNi steel 1.4305
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV12_15) -> CVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68012-015"                                 // Reference to the TA Product
	"ACV 12"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV12"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV12                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV12_20) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-020"
	}
}

new:CDB_Product(ACV12_25) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-025"
	}
}

new:CDB_Product(ACV12_32) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-032"
	}
}

new:CDB_Product(ACV12_40) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-040"
	}
}

new:CDB_Product(ACV12_50) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-050"
	}
}

new:CDB_Product(ACV12_65) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-065"
	}
}

new:CDB_Product(ACV12_80) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-080"
	}
}

new:CDB_Product(ACV12_100) -> CVACCESSOR_TAB
{ Inherited(ACV12_15)
	{
		CDB_Product::Reference = "68012-090"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Stem heater
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV13_15-50) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68013-015"                                 // Reference to the TA Product
	"ACV 13"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV13"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV13                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV13_65-100) -> CVACCESSOR_TAB
{ Inherited(ACV13_15-50)
	{
		CDB_Product::Reference = "68013-065"
	}
}

new:CDB_Product(ACV13_125-150) -> CVACCESSOR_TAB
{ Inherited(ACV13_15-50)
	{
		CDB_Product::Reference = "68013-091"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Epoxy resin special varnish
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV14_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68014-015"                                 // Reference to the TA Product
	"ACV 14"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV14"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV14                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV14_20) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-020"
	}
}

new:CDB_Product(ACV14_25) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-025"
	}
}

new:CDB_Product(ACV14_32) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-032"
	}
}

new:CDB_Product(ACV14_40) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-040"
	}
}

new:CDB_Product(ACV14_50) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-050"
	}
}

new:CDB_Product(ACV14_65) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-065"
	}
}

new:CDB_Product(ACV14_80) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-080"
	}
}

new:CDB_Product(ACV14_100) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-090"
	}
}

new:CDB_Product(ACV14_125) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-091"
	}
}

new:CDB_Product(ACV14_150) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-092"
	}
}

new:CDB_Product(ACV14_200) -> CVACCESSOR_TAB
{ Inherited(ACV14_15)
	{
		CDB_Product::Reference = "68014-093"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Sealing FKM
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV15_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68015-015"                                 // Reference to the TA Product
	"ACV 15"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV15"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV15                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV15_20) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-020"
	}
}

new:CDB_Product(ACV15_25) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-025"
	}
}

new:CDB_Product(ACV15_32) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-032"
	}
}

new:CDB_Product(ACV15_40) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-040"
	}
}

new:CDB_Product(ACV15_50) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-050"
	}
}

new:CDB_Product(ACV15_65) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-065"
	}
}

new:CDB_Product(ACV15_80) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-080"
	}
}

new:CDB_Product(ACV15_100) -> CVACCESSOR_TAB
{ Inherited(ACV15_15)
	{
		CDB_Product::Reference = "68015-090"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Technical silicon free version
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV16_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68016-015"                                 // Reference to the TA Product
	"ACV 16"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV16"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV16                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV16_20) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-020"
	}
}

new:CDB_Product(ACV16_25) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-025"
	}
}

new:CDB_Product(ACV16_32) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-032"
	}
}

new:CDB_Product(ACV16_40) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-040"
	}
}

new:CDB_Product(ACV16_50) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-050"
	}
}

new:CDB_Product(ACV16_65) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-065"
	}
}

new:CDB_Product(ACV16_80) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-080"
	}
}

new:CDB_Product(ACV16_100) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-090"
	}
}

new:CDB_Product(ACV16_125) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-091"
	}
}

new:CDB_Product(ACV16_150) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-092"
	}
}

new:CDB_Product(ACV16_200) -> CVACCESSOR_TAB
{ Inherited(ACV16_15)
	{
		CDB_Product::Reference = "68016-093"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Housing connecting flanges with groove
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV50_2W_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68050-215"                                 // Reference to the TA Product
	"ACV 50"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV50"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV50                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV50_2W_20) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-220"
	}
}

new:CDB_Product(ACV50_2W_25) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-225"
	}
}

new:CDB_Product(ACV50_2W_32) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-232"
	}
}

new:CDB_Product(ACV50_2W_40) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-240"
	}
}

new:CDB_Product(ACV50_2W_50) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-250"
	}
}

new:CDB_Product(ACV50_2W_65) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-265"
	}
}

new:CDB_Product(ACV50_2W_80) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-280"
	}
}

new:CDB_Product(ACV50_2W_100) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-290"
	}
}

new:CDB_Product(ACV50_2W_125) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-291"
	}
}

new:CDB_Product(ACV50_2W_150) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-292"
	}
}

new:CDB_Product(ACV50_2W_200) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-293"
	}
}

new:CDB_Product(ACV50_2W_250) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-294"
	}
}

new:CDB_Product(ACV50_2W_300) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-295"
	}
}

new:CDB_Product(ACV50_3W_15) -> CVACCESSOR_TAB
{ Inherited(ACV50_2W_15)
	{
		CDB_Product::Reference = "68050-315"
	}
}

new:CDB_Product(ACV50_3W_20) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-320"
	}
}

new:CDB_Product(ACV50_3W_25) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-325"
	}
}

new:CDB_Product(ACV50_3W_32) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-332"
	}
}

new:CDB_Product(ACV50_3W_40) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-340"
	}
}

new:CDB_Product(ACV50_3W_50) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-350"
	}
}

new:CDB_Product(ACV50_3W_65) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-365"
	}
}

new:CDB_Product(ACV50_3W_80) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-380"
	}
}

new:CDB_Product(ACV50_3W_100) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-390"
	}
}

new:CDB_Product(ACV50_3W_125) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-391"
	}
}

new:CDB_Product(ACV50_3W_150) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-392"
	}
}

new:CDB_Product(ACV50_3W_200) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-393"
	}
}

new:CDB_Product(ACV50_3W_250) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-394"
	}
}

new:CDB_Product(ACV50_3W_300) -> CVACCESSOR_TAB
{ Inherited(ACV50_3W_15)
	{
		CDB_Product::Reference = "68050-395"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Housing connecting flanges with socket
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV51_2W_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68051-215"                                 // Reference to the TA Product
	"ACV 51"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV51"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV51                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV51_2W_20) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-220"
	}
}

new:CDB_Product(ACV51_2W_25) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-225"
	}
}

new:CDB_Product(ACV51_2W_32) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-232"
	}
}

new:CDB_Product(ACV51_2W_40) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-240"
	}
}

new:CDB_Product(ACV51_2W_50) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-250"
	}
}

new:CDB_Product(ACV51_2W_65) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-265"
	}
}

new:CDB_Product(ACV51_2W_80) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-280"
	}
}

new:CDB_Product(ACV51_2W_100) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-290"
	}
}

new:CDB_Product(ACV51_2W_125) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-291"
	}
}

new:CDB_Product(ACV51_2W_150) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-292"
	}
}

new:CDB_Product(ACV51_2W_200) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-293"
	}
}

new:CDB_Product(ACV51_2W_250) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-294"
	}
}

new:CDB_Product(ACV51_2W_300) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-295"
	}
}

new:CDB_Product(ACV51_3W_15) -> CVACCESSOR_TAB
{ Inherited(ACV51_2W_15)
	{
		CDB_Product::Reference = "68051-315"
	}
}

new:CDB_Product(ACV51_3W_20) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-320"
	}
}

new:CDB_Product(ACV51_3W_25) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-325"
	}
}

new:CDB_Product(ACV51_3W_32) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-332"
	}
}

new:CDB_Product(ACV51_3W_40) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-340"
	}
}

new:CDB_Product(ACV51_3W_50) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-350"
	}
}

new:CDB_Product(ACV51_3W_65) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-365"
	}
}

new:CDB_Product(ACV51_3W_80) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-380"
	}
}

new:CDB_Product(ACV51_3W_100) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-390"
	}
}

new:CDB_Product(ACV51_3W_125) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-391"
	}
}

new:CDB_Product(ACV51_3W_150) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-392"
	}
}

new:CDB_Product(ACV51_3W_200) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-393"
	}
}

new:CDB_Product(ACV51_3W_250) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-394"
	}
}

new:CDB_Product(ACV51_3W_300) -> CVACCESSOR_TAB
{ Inherited(ACV51_3W_15)
	{
		CDB_Product::Reference = "68051-395"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Housing connecting flanges with spigot
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV52_2W_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68052-215"                                 // Reference to the TA Product
	"ACV 52"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV52"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV52                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV52_2W_20) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-220"
	}
}

new:CDB_Product(ACV52_2W_25) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-225"
	}
}

new:CDB_Product(ACV52_2W_32) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-232"
	}
}

new:CDB_Product(ACV52_2W_40) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-240"
	}
}

new:CDB_Product(ACV52_2W_50) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-250"
	}
}

new:CDB_Product(ACV52_2W_65) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-265"
	}
}

new:CDB_Product(ACV52_2W_80) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-280"
	}
}

new:CDB_Product(ACV52_2W_100) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-290"
	}
}

new:CDB_Product(ACV52_2W_125) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-291"
	}
}

new:CDB_Product(ACV52_2W_150) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-292"
	}
}

new:CDB_Product(ACV52_2W_200) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-293"
	}
}

new:CDB_Product(ACV52_2W_250) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-294"
	}
}

new:CDB_Product(ACV52_2W_300) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-295"
	}
}

new:CDB_Product(ACV52_3W_15) -> CVACCESSOR_TAB
{ Inherited(ACV52_2W_15)
	{
		CDB_Product::Reference = "68052-315"
	}
}

new:CDB_Product(ACV52_3W_20) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-320"
	}
}

new:CDB_Product(ACV52_3W_25) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-325"
	}
}

new:CDB_Product(ACV52_3W_32) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-332"
	}
}

new:CDB_Product(ACV52_3W_40) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-340"
	}
}

new:CDB_Product(ACV52_3W_50) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-350"
	}
}

new:CDB_Product(ACV52_3W_65) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-365"
	}
}

new:CDB_Product(ACV52_3W_80) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-380"
	}
}

new:CDB_Product(ACV52_3W_100) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-390"
	}
}

new:CDB_Product(ACV52_3W_125) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-391"
	}
}

new:CDB_Product(ACV52_3W_150) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-392"
	}
}

new:CDB_Product(ACV52_3W_200) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-393"
	}
}

new:CDB_Product(ACV52_3W_250) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-394"
	}
}

new:CDB_Product(ACV52_3W_300) -> CVACCESSOR_TAB
{ Inherited(ACV52_3W_15)
	{
		CDB_Product::Reference = "68052-395"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Screwed seat made of 1.4122 unhardened
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV53_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68053-215"                                 // Reference to the TA Product
	"ACV 53"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV53"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV53                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV53_20) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-220"
	}
}

new:CDB_Product(ACV53_25) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-225"
	}
}

new:CDB_Product(ACV53_32) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-232"
	}
}

new:CDB_Product(ACV53_40) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-240"
	}
}

new:CDB_Product(ACV53_50) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-250"
	}
}

new:CDB_Product(ACV53_65) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-265"
	}
}

new:CDB_Product(ACV53_80) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-280"
	}
}

new:CDB_Product(ACV53_100) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-290"
	}
}

new:CDB_Product(ACV53_125) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-291"
	}
}

new:CDB_Product(ACV53_150) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-292"
	}
}

new:CDB_Product(ACV53_200) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-293"
	}
}

new:CDB_Product(ACV53_250) -> CVACCESSOR_TAB
{ Inherited(ACV53_15)
	{
		CDB_Product::Reference = "68053-294"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Screwed seat made of 1.4122 hardened
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV54_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68054-215"                                 // Reference to the TA Product
	"ACV 54"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV54"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV54                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV54_20) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-220"
	}
}

new:CDB_Product(ACV54_25) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-225"
	}
}

new:CDB_Product(ACV54_32) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-232"
	}
}

new:CDB_Product(ACV54_40) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-240"
	}
}

new:CDB_Product(ACV54_50) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-250"
	}
}

new:CDB_Product(ACV54_65) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-265"
	}
}

new:CDB_Product(ACV54_80) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-280"
	}
}

new:CDB_Product(ACV54_100) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-290"
	}
}

new:CDB_Product(ACV54_125) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-291"
	}
}

new:CDB_Product(ACV54_150) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-292"
	}
}

new:CDB_Product(ACV54_200) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-293"
	}
}

new:CDB_Product(ACV54_250) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-294"
	}
}

new:CDB_Product(ACV54_300) -> CVACCESSOR_TAB
{ Inherited(ACV54_15)
	{
		CDB_Product::Reference = "68054-295"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Housing seat SKWAM plated
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV55_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68055-215"                                 // Reference to the TA Product
	"ACV 55"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV55"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV55                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV55_20) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-220"
	}
}

new:CDB_Product(ACV55_25) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-225"
	}
}

new:CDB_Product(ACV55_32) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-232"
	}
}

new:CDB_Product(ACV55_40) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-240"
	}
}

new:CDB_Product(ACV55_50) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-250"
	}
}

new:CDB_Product(ACV55_65) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-265"
	}
}

new:CDB_Product(ACV55_80) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-280"
	}
}

new:CDB_Product(ACV55_100) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-290"
	}
}

new:CDB_Product(ACV55_125) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-291"
	}
}

new:CDB_Product(ACV55_150) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-292"
	}
}

new:CDB_Product(ACV55_200) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-293"
	}
}

new:CDB_Product(ACV55_250) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-294"
	}
}

new:CDB_Product(ACV55_300) -> CVACCESSOR_TAB
{ Inherited(ACV55_15)
	{
		CDB_Product::Reference = "68055-295"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Body and plug seat grounded in (leakage < 0.0005% Kvs)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV57_2W_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68057-215"                                 // Reference to the TA Product
	"ACV 57"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV57"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV57                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV57_2W_20) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-220"
	}
}

new:CDB_Product(ACV57_2W_25) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-225"
	}
}

new:CDB_Product(ACV57_2W_32) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-232"
	}
}

new:CDB_Product(ACV57_2W_40) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-240"
	}
}

new:CDB_Product(ACV57_2W_50) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-250"
	}
}

new:CDB_Product(ACV57_2W_65) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-265"
	}
}

new:CDB_Product(ACV57_2W_80) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-280"
	}
}

new:CDB_Product(ACV57_2W_100) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-290"
	}
}

new:CDB_Product(ACV57_2W_125) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-291"
	}
}

new:CDB_Product(ACV57_2W_150) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-292"
	}
}

new:CDB_Product(ACV57_2W_200) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-293"
	}
}

new:CDB_Product(ACV57_2W_250) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-294"
	}
}

new:CDB_Product(ACV57_2W_300) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-295"
	}
}

new:CDB_Product(ACV57_3W_15) -> CVACCESSOR_TAB
{ Inherited(ACV57_2W_15)
	{
		CDB_Product::Reference = "68057-315"
	}
}

new:CDB_Product(ACV57_3W_20) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-320"
	}
}

new:CDB_Product(ACV57_3W_25) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-325"
	}
}

new:CDB_Product(ACV57_3W_32) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-332"
	}
}

new:CDB_Product(ACV57_3W_40) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-340"
	}
}

new:CDB_Product(ACV57_3W_50) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-350"
	}
}

new:CDB_Product(ACV57_3W_65) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-365"
	}
}

new:CDB_Product(ACV57_3W_80) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-380"
	}
}

new:CDB_Product(ACV57_3W_100) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-390"
	}
}

new:CDB_Product(ACV57_3W_125) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-391"
	}
}

new:CDB_Product(ACV57_3W_150) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-392"
	}
}

new:CDB_Product(ACV57_3W_200) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-393"
	}
}

new:CDB_Product(ACV57_3W_250) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-394"
	}
}

new:CDB_Product(ACV57_3W_300) -> CVACCESSOR_TAB
{ Inherited(ACV57_3W_15)
	{
		CDB_Product::Reference = "68057-395"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Plug with soft sealing (tight sealing)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV58_2W_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68058-215"                                 // Reference to the TA Product
	"ACV 58"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV58"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV58                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV58_2W_20) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-220"
	}
}

new:CDB_Product(ACV58_2W_25) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-225"
	}
}

new:CDB_Product(ACV58_2W_32) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-232"
	}
}

new:CDB_Product(ACV58_2W_40) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-240"
	}
}

new:CDB_Product(ACV58_2W_50) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-250"
	}
}

new:CDB_Product(ACV58_2W_65) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-265"
	}
}

new:CDB_Product(ACV58_2W_80) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-280"
	}
}

new:CDB_Product(ACV58_2W_100) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-290"
	}
}

new:CDB_Product(ACV58_2W_125) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-291"
	}
}

new:CDB_Product(ACV58_2W_150) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-292"
	}
}

new:CDB_Product(ACV58_2W_200) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-293"
	}
}

new:CDB_Product(ACV58_2W_250) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-294"
	}
}

new:CDB_Product(ACV58_2W_300) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-295"
	}
}

new:CDB_Product(ACV58_3W_15) -> CVACCESSOR_TAB
{ Inherited(ACV58_2W_15)
	{
		CDB_Product::Reference = "68058-315"
	}
}

new:CDB_Product(ACV58_3W_20) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-320"
	}
}

new:CDB_Product(ACV58_3W_25) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-325"
	}
}

new:CDB_Product(ACV58_3W_32) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-332"
	}
}

new:CDB_Product(ACV58_3W_40) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-340"
	}
}

new:CDB_Product(ACV58_3W_50) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-350"
	}
}

new:CDB_Product(ACV58_3W_65) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-365"
	}
}

new:CDB_Product(ACV58_3W_80) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-380"
	}
}

new:CDB_Product(ACV58_3W_100) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-390"
	}
}

new:CDB_Product(ACV58_3W_125) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-391"
	}
}

new:CDB_Product(ACV58_3W_150) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-392"
	}
}

new:CDB_Product(ACV58_3W_200) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-393"
	}
}

new:CDB_Product(ACV58_3W_250) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-394"
	}
}

new:CDB_Product(ACV58_3W_300) -> CVACCESSOR_TAB
{ Inherited(ACV58_3W_15)
	{
		CDB_Product::Reference = "68058-395"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Perforated plug made of 1.4057 unhardened
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV59_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68059-215"                                 // Reference to the TA Product
	"ACV 59"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV59"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV59                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV59_20) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-220"
	}
}

new:CDB_Product(ACV59_25) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-225"
	}
}

new:CDB_Product(ACV59_32) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-232"
	}
}

new:CDB_Product(ACV59_40) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-240"
	}
}

new:CDB_Product(ACV59_50) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-250"
	}
}

new:CDB_Product(ACV59_65) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-265"
	}
}

new:CDB_Product(ACV59_80) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-280"
	}
}

new:CDB_Product(ACV59_100) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-290"
	}
}

new:CDB_Product(ACV59_125) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-291"
	}
}

new:CDB_Product(ACV59_150) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-292"
	}
}

new:CDB_Product(ACV59_200) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-293"
	}
}

new:CDB_Product(ACV59_250) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-294"
	}
}

new:CDB_Product(ACV59_300) -> CVACCESSOR_TAB
{ Inherited(ACV59_15)
	{
		CDB_Product::Reference = "68059-295"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Perforated plug made of 1.4057 hardened
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV60_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68060-215"                                 // Reference to the TA Product
	"ACV 60"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV60"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV60                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV60_20) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-220"
	}
}

new:CDB_Product(ACV60_25) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-225"
	}
}

new:CDB_Product(ACV60_32) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-232"
	}
}

new:CDB_Product(ACV60_40) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-240"
	}
}

new:CDB_Product(ACV60_50) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-250"
	}
}

new:CDB_Product(ACV60_65) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-265"
	}
}

new:CDB_Product(ACV60_80) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-280"
	}
}

new:CDB_Product(ACV60_100) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-290"
	}
}

new:CDB_Product(ACV60_125) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-291"
	}
}

new:CDB_Product(ACV60_150) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-292"
	}
}

new:CDB_Product(ACV60_200) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-293"
	}
}

new:CDB_Product(ACV60_250) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-294"
	}
}

new:CDB_Product(ACV60_300) -> CVACCESSOR_TAB
{ Inherited(ACV60_15)
	{
		CDB_Product::Reference = "68060-295"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Balanced plug
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV61_32) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68061-232"                                 // Reference to the TA Product
	"ACV 61"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV61"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV61                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV61_40) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-240"
	}
}

new:CDB_Product(ACV61_50) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-250"
	}
}

new:CDB_Product(ACV61_65) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-265"
	}
}

new:CDB_Product(ACV61_80) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-280"
	}
}

new:CDB_Product(ACV61_100) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-290"
	}
}

new:CDB_Product(ACV61_125) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-291"
	}
}

new:CDB_Product(ACV61_150) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-292"
	}
}

new:CDB_Product(ACV61_200) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-293"
	}
}

new:CDB_Product(ACV61_250) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-294"
	}
}

new:CDB_Product(ACV61_300) -> CVACCESSOR_TAB
{ Inherited(ACV61_32)
	{
		CDB_Product::Reference = "68061-295"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Stuffing box (with 100 mm extension)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV62_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68062-015"                                 // Reference to the TA Product
	"ACV 62"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV62"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV62                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV62_20) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-020"
	}
}

new:CDB_Product(ACV62_25) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-025"
	}
}

new:CDB_Product(ACV62_32) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-032"
	}
}

new:CDB_Product(ACV62_40) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-040"
	}
}

new:CDB_Product(ACV62_50) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-050"
	}
}

new:CDB_Product(ACV62_65) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-065"
	}
}

new:CDB_Product(ACV62_80) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-080"
	}
}

new:CDB_Product(ACV62_100) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-090"
	}
}

new:CDB_Product(ACV62_125) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-091"
	}
}

new:CDB_Product(ACV62_150) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-092"
	}
}

new:CDB_Product(ACV62_200) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-093"
	}
}

new:CDB_Product(ACV62_250) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-094"
	}
}

new:CDB_Product(ACV62_300) -> CVACCESSOR_TAB
{ Inherited(ACV62_15)
	{
		CDB_Product::Reference = "68062-095"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Stem heater
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV64_15-100) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68064-015"                                 // Reference to the TA Product
	"ACV 64"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV64"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV64                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV64_125-200) -> CVACCESSOR_TAB
{ Inherited(ACV64_15-100)
	{
		CDB_Product::Reference = "68064-091"
	}
}

new:CDB_Product(ACV64_250-300) -> CVACCESSOR_TAB
{ Inherited(ACV64_15-100)
	{
		CDB_Product::Reference = "68064-094"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Stem seal (with stainless steel bellow)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV66_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68066-015"                                 // Reference to the TA Product
	"ACV 66"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV66"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV66                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV66_20) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-020"
	}
}

new:CDB_Product(ACV66_25) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-025"
	}
}

new:CDB_Product(ACV66_32) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-032"
	}
}

new:CDB_Product(ACV66_40) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-040"
	}
}

new:CDB_Product(ACV66_50) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-050"
	}
}

new:CDB_Product(ACV66_65) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-065"
	}
}

new:CDB_Product(ACV66_80) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-080"
	}
}

new:CDB_Product(ACV66_100) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-090"
	}
}

new:CDB_Product(ACV66_125) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-091"
	}
}

new:CDB_Product(ACV66_150) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-092"
	}
}

new:CDB_Product(ACV66_200) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-093"
	}
}

new:CDB_Product(ACV66_250) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-094"
	}
}

new:CDB_Product(ACV66_300) -> CVACCESSOR_TAB
{ Inherited(ACV66_15)
	{
		CDB_Product::Reference = "68066-095"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Stem seal (with stainless steel bellow)
////////////////////////////////////////////////////////////////
 
new:CDB_Product(ACV67_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68067-015"                                 // Reference to the TA Product
	"ACV 67"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV67"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV67                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV67_20) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-020"
	}
}

new:CDB_Product(ACV67_25) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-025"
	}
}

new:CDB_Product(ACV67_32) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-032"
	}
}

new:CDB_Product(ACV67_40) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-040"
	}
}

new:CDB_Product(ACV67_50) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-050"
	}
}

new:CDB_Product(ACV67_65) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-065"
	}
}

new:CDB_Product(ACV67_80) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-080"
	}
}

new:CDB_Product(ACV67_100) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-090"
	}
}

new:CDB_Product(ACV67_125) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-091"
	}
}

new:CDB_Product(ACV67_150) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-092"
	}
}

new:CDB_Product(ACV67_200) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-093"
	}
}

new:CDB_Product(ACV67_250) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-094"
	}
}

new:CDB_Product(ACV67_300) -> CVACCESSOR_TAB
{ Inherited(ACV67_15)
	{
		CDB_Product::Reference = "68067-095"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Epoxy resin special varnish
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV69_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 								// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68069-015"                                 // Reference to the TA Product
	"ACV 69"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV69"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV69                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV69_20) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-020"
	}
}

new:CDB_Product(ACV69_25) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-025"
	}
}

new:CDB_Product(ACV69_32) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-032"
	}
}

new:CDB_Product(ACV69_40) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-040"
	}
}

new:CDB_Product(ACV69_50) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-050"
	}
}

new:CDB_Product(ACV69_65) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-065"
	}
}

new:CDB_Product(ACV69_80) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-080"
	}
}

new:CDB_Product(ACV69_100) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-090"
	}
}

new:CDB_Product(ACV69_125) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-091"
	}
}

new:CDB_Product(ACV69_150) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-092"
	}
}

new:CDB_Product(ACV69_200) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-093"
	}
}

new:CDB_Product(ACV69_250) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-094"
	}
}

new:CDB_Product(ACV69_300) -> CVACCESSOR_TAB
{ Inherited(ACV69_15)
	{
		CDB_Product::Reference = "68069-095"
	}
}

///////////////////////////////////////////////////////////////////
// ACV69.1 4-layer outdoor varnish
///////////////////////////////////////////////////////////////////

new:CDB_Product(ACV69.1_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68069-115"                                 // Reference to the TA Product
	"ACV 69.1"                                  // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV69.1"                               // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV69.1                                 // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV69.1_20) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-120"
	}
}

new:CDB_Product(ACV69.1_25) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-125"
	}
}

new:CDB_Product(ACV69.1_32) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-132"
	}
}

new:CDB_Product(ACV69.1_40) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-140"
	}
}

new:CDB_Product(ACV69.1_50) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-150"
	}
}

new:CDB_Product(ACV69.1_65) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-165"
	}
}

new:CDB_Product(ACV69.1_80) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-180"
	}
}

new:CDB_Product(ACV69.1_100) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-190"
	}
}

new:CDB_Product(ACV69.1_125) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-191"
	}
}

new:CDB_Product(ACV69.1_150) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-192"
	}
}

new:CDB_Product(ACV69.1_200) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-193"
	}
}

new:CDB_Product(ACV69.1_250) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-194"
	}
}

new:CDB_Product(ACV69.1_300) -> CVACCESSOR_TAB
{ Inherited(ACV69.1_15)
	{
		CDB_Product::Reference = "68069-195"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Special Kvs value
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV70_20) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68070-020"                                 // Reference to the TA Product
	"ACV 70"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV70"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV70                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV70_25) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-025"
	}
}

new:CDB_Product(ACV70_32) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-032"
	}
}

new:CDB_Product(ACV70_40) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-040"
	}
}

new:CDB_Product(ACV70_50) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-050"
	}
}

new:CDB_Product(ACV70_65) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-065"
	}
}

new:CDB_Product(ACV70_80) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-080"
	}
}

new:CDB_Product(ACV70_100) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-090"
	}
}

new:CDB_Product(ACV70_125) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-091"
	}
}

new:CDB_Product(ACV70_150) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-092"
	}
}

new:CDB_Product(ACV70_200) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-093"
	}
}

new:CDB_Product(ACV70_250) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-094"
	}
}

new:CDB_Product(ACV70_300) -> CVACCESSOR_TAB
{ Inherited(ACV70_20)
	{
		CDB_Product::Reference = "68070-095"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Technical silicon free version
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV71_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68071-015"                                 // Reference to the TA Product
	"ACV 71"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV71"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV71                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV71_20) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-020"
	}
}

new:CDB_Product(ACV71_25) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-025"
	}
}

new:CDB_Product(ACV71_32) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-032"
	}
}

new:CDB_Product(ACV71_40) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-040"
	}
}

new:CDB_Product(ACV71_50) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-050"
	}
}

new:CDB_Product(ACV71_65) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-065"
	}
}

new:CDB_Product(ACV71_80) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-080"
	}
}

new:CDB_Product(ACV71_100) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-090"
	}
}

new:CDB_Product(ACV71_125) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-091"
	}
}

new:CDB_Product(ACV71_150) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-092"
	}
}

new:CDB_Product(ACV71_200) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-093"
	}
}

new:CDB_Product(ACV71_250) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-094"
	}
}

new:CDB_Product(ACV71_300) -> CVACCESSOR_TAB
{ Inherited(ACV71_15)
	{
		CDB_Product::Reference = "68071-095"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Oil and fat free version
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV72_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68072-015"                                 // Reference to the TA Product
	"ACV 72"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV72"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV72                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV72_20) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-020"
	}
}

new:CDB_Product(ACV72_25) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-025"
	}
}

new:CDB_Product(ACV72_32) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-032"
	}
}

new:CDB_Product(ACV72_40) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-040"
	}
}

new:CDB_Product(ACV72_50) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-050"
	}
}

new:CDB_Product(ACV72_65) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-065"
	}
}

new:CDB_Product(ACV72_80) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-080"
	}
}

new:CDB_Product(ACV72_100) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-090"
	}
}

new:CDB_Product(ACV72_125) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-091"
	}
}

new:CDB_Product(ACV72_150) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-092"
	}
}

new:CDB_Product(ACV72_200) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-093"
	}
}

new:CDB_Product(ACV72_250) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-094"
	}
}

new:CDB_Product(ACV72_300) -> CVACCESSOR_TAB
{ Inherited(ACV72_15)
	{
		CDB_Product::Reference = "68072-095"
	}
}

////////////////////////////////////////////////////////////////
// ACV73 O-rings made of Fluoraz, max. 200 C
////////////////////////////////////////////////////////////////

new:CDB_Product(ACV73_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68073-015"                                 // Reference to the TA Product
	"ACV 73"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV73"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV73                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV73_20) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-020"
	}
}

new:CDB_Product(ACV73_25) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-025"
	}
}

new:CDB_Product(ACV73_32) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-032"
	}
}

new:CDB_Product(ACV73_40) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-040"
	}
}

new:CDB_Product(ACV73_50) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-050"
	}
}

new:CDB_Product(ACV73_65) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-065"
	}
}

new:CDB_Product(ACV73_80) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-080"
	}
}

new:CDB_Product(ACV73_100) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-090"
	}
}

new:CDB_Product(ACV73_125) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-091"
	}
}

new:CDB_Product(ACV73_150) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-092"
	}
}

new:CDB_Product(ACV73_200) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-093"
	}
}

new:CDB_Product(ACV73_250) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-094"
	}
}

new:CDB_Product(ACV73_300) -> CVACCESSOR_TAB
{ Inherited(ACV73_15)
	{
		CDB_Product::Reference = "68073-095"
	}
}

///////////////////////////////////////////////////////////////////
// ACV74 Graphit packing, max. 350 C -- not with fail safe actuator
///////////////////////////////////////////////////////////////////

new:CDB_Product(ACV74_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68074-015"                                 // Reference to the TA Product
	"ACV 74"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV74"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV74                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV74_20) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-020"
	}
}

new:CDB_Product(ACV74_25) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-025"
	}
}

new:CDB_Product(ACV74_32) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-032"
	}
}

new:CDB_Product(ACV74_40) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-040"
	}
}

new:CDB_Product(ACV74_50) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-050"
	}
}

new:CDB_Product(ACV74_65) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-065"
	}
}

new:CDB_Product(ACV74_80) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-080"
	}
}

new:CDB_Product(ACV74_100) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-090"
	}
}

new:CDB_Product(ACV74_125) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-091"
	}
}

new:CDB_Product(ACV74_150) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-092"
	}
}

new:CDB_Product(ACV74_200) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-093"
	}
}

new:CDB_Product(ACV74_250) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-094"
	}
}

new:CDB_Product(ACV74_300) -> CVACCESSOR_TAB
{ Inherited(ACV74_15)
	{
		CDB_Product::Reference = "68074-095"
	}
}

///////////////////////////////////////////////////////////////////
// ACV75 O-rings made of FKM, max 150 C
///////////////////////////////////////////////////////////////////

new:CDB_Product(ACV75_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68075-015"                                 // Reference to the TA Product
	"ACV 75"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV75"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV75                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV75_20) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-020"
	}
}

new:CDB_Product(ACV75_25) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-025"
	}
}

new:CDB_Product(ACV75_32) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-032"
	}
}

new:CDB_Product(ACV75_40) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-040"
	}
}

new:CDB_Product(ACV75_50) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-050"
	}
}

new:CDB_Product(ACV75_65) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-065"
	}
}

new:CDB_Product(ACV75_80) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-080"
	}
}

new:CDB_Product(ACV75_100) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-090"
	}
}

new:CDB_Product(ACV75_125) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-091"
	}
}

new:CDB_Product(ACV75_150) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-092"
	}
}

new:CDB_Product(ACV75_200) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-093"
	}
}

new:CDB_Product(ACV75_250) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-094"
	}
}

new:CDB_Product(ACV75_300) -> CVACCESSOR_TAB
{ Inherited(ACV75_15)
	{
		CDB_Product::Reference = "68075-095"
	}
}

///////////////////////////////////////////////////////////////////
// ACV76 PTFE packing, max 200 C
///////////////////////////////////////////////////////////////////

new:CDB_Product(ACV76_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68076-015"                                 // Reference to the TA Product
	"ACV 76"                                    // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CVXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACV76"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACV76                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACV76_20) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-020"
	}
}

new:CDB_Product(ACV76_25) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-025"
	}
}

new:CDB_Product(ACV76_32) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-032"
	}
}

new:CDB_Product(ACV76_40) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-040"
	}
}

new:CDB_Product(ACV76_50) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-050"
	}
}

new:CDB_Product(ACV76_65) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-065"
	}
}

new:CDB_Product(ACV76_80) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-080"
	}
}

new:CDB_Product(ACV76_100) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-090"
	}
}

new:CDB_Product(ACV76_125) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-091"
	}
}

new:CDB_Product(ACV76_150) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-092"
	}
}

new:CDB_Product(ACV76_200) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-093"
	}
}

new:CDB_Product(ACV76_250) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-094"
	}
}

new:CDB_Product(ACV76_300) -> CVACCESSOR_TAB
{ Inherited(ACV76_15)
	{
		CDB_Product::Reference = "68076-095"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Flap: Stainless steel / Seat ring: EPDM
////////////////////////////////////////////////////////////////

new:CDB_Product(ACB1_25) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68401-025"                                 // Reference to the TA Product
	"ACB 1"                                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DR16XXX                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACB1"                                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACB1                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACB1_32) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-032"
	}
}

new:CDB_Product(ACB1_40) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-040"
	}
}

new:CDB_Product(ACB1_50) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-050"
	}
}

new:CDB_Product(ACB1_65) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-065"
	}
}

new:CDB_Product(ACB1_80) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-080"
	}
}

new:CDB_Product(ACB1_100) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-090"
	}
}

new:CDB_Product(ACB1_125) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-091"
	}
}

new:CDB_Product(ACB1_150) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-092"
	}
}

new:CDB_Product(ACB1_200) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-093"
	}
}

new:CDB_Product(ACB1_250) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-094"
	}
}

new:CDB_Product(ACB1_300) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-095"
	}
}

new:CDB_Product(ACB1_350) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-096"
	}
}

new:CDB_Product(ACB1_400) -> CVACCESSOR_TAB
{ Inherited(ACB1_25)
	{
		CDB_Product::Reference = "68401-097"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Flap: Al-Bronze / Seat ring: NBR
////////////////////////////////////////////////////////////////

new:CDB_Product(ACB2_50) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68402-050"                                 // Reference to the TA Product
	"ACB 2"                                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DR16XXX                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACB2"                                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACB2                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACB2_65) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-065"
	}
}

new:CDB_Product(ACB2_80) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-080"
	}
}

new:CDB_Product(ACB2_100) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-090"
	}
}

new:CDB_Product(ACB2_125) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-091"
	}
}

new:CDB_Product(ACB2_150) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-092"
	}
}

new:CDB_Product(ACB2_200) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-093"
	}
}

new:CDB_Product(ACB2_250) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-094"
	}
}

new:CDB_Product(ACB2_300) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-095"
	}
}

new:CDB_Product(ACB2_350) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-096"
	}
}

new:CDB_Product(ACB2_400) -> CVACCESSOR_TAB
{ Inherited(ACB2_50)
	{
		CDB_Product::Reference = "68402-097"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Special varnish
////////////////////////////////////////////////////////////////

new:CDB_Product(ACB3_25) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68403-025"                                 // Reference to the TA Product
	"ACB 3"                                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DR16XXX                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACB3"                                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACB3                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACB3_32) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-032"
	}
}

new:CDB_Product(ACB3_40) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-040"
	}
}

new:CDB_Product(ACB3_50) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-050"
	}
}

new:CDB_Product(ACB3_65) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-065"
	}
}

new:CDB_Product(ACB3_80) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-080"
	}
}

new:CDB_Product(ACB3_100) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-090"
	}
}

new:CDB_Product(ACB3_125) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-091"
	}
}

new:CDB_Product(ACB3_150) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-092"
	}
}

new:CDB_Product(ACB3_200) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-093"
	}
}

new:CDB_Product(ACB3_250) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-094"
	}
}

new:CDB_Product(ACB3_300) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-095"
	}
}

new:CDB_Product(ACB3_350) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-096"
	}
}

new:CDB_Product(ACB3_400) -> CVACCESSOR_TAB
{ Inherited(ACB3_25)
	{
		CDB_Product::Reference = "68403-097"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Body: ductile iron, PN 16
////////////////////////////////////////////////////////////////

new:CDB_Product(ACB4_250) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68404-250"                                 // Reference to the TA Product
	"ACB 4"                                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DR16XXX                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACB4"                                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACB4                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACB4_300) -> CVACCESSOR_TAB
{ Inherited(ACB4_250)
	{
		CDB_Product::Reference = "68404-095"
	}
}

new:CDB_Product(ACB4_350) -> CVACCESSOR_TAB
{ Inherited(ACB4_250)
	{
		CDB_Product::Reference = "68404-096"
	}
}

new:CDB_Product(ACB4_400) -> CVACCESSOR_TAB
{ Inherited(ACB4_250)
	{
		CDB_Product::Reference = "68404-097"
	}
}

////////////////////////////////////////////////////////////////
// Control valve accessories: Technical silicon free version
////////////////////////////////////////////////////////////////

new:CDB_Product(ACB5_50) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"68405-050"                                 // Reference to the TA Product
	"ACB 5"                                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DR16XXX                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACB5"                                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACB5                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACB5_65) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-065"
	}
}

new:CDB_Product(ACB5_80) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-080"
	}
}

new:CDB_Product(ACB5_100) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-090"
	}
}

new:CDB_Product(ACB5_125) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-091"
	}
}

new:CDB_Product(ACB5_150) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-092"
	}
}

new:CDB_Product(ACB5_200) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-093"
	}
}

new:CDB_Product(ACB5_250) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-094"
	}
}

new:CDB_Product(ACB5_300) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-095"
	}
}

new:CDB_Product(ACB5_350) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-096"
	}
}

new:CDB_Product(ACB5_400) -> CVACCESSOR_TAB
{ Inherited(ACB5_50)
	{
		CDB_Product::Reference = "68405-097"
	}
}

// HYS-1782: TA-6-way valve accessories: insulation added
////////////////////////////////////////////////////////////////
// TA-6-way valve accessories: Bracket
////////////////////////////////////////////////////////////////

new:CDB_Product(ACC6W_BRACKET) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in °C
		DBL_MIN                                     // Tmin in °C
	}
	"322031-30000"                              // Reference to the TA Product
	"IDS_NAME_ACC6WBRACKET"                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TA6WWAY                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_6WBRACKET"                    // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

////////////////////////////////////////////////////////////////
// TA-6-way valve accessories: Insulation
////////////////////////////////////////////////////////////////

new:CDB_Product(ACC6W_INSUL_15) -> CVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90                                          // Tmax in °C
		DBL_MIN                                     // Tmin in °C
	}
	"322031-30405"                              // Reference to the TA Product
	"IDS_NAME_ACC6WINSUL15"                     // Name of the product (can be an IDS)
	ACCTYP_CV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TA6WWAY                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_6WINSUL"                      // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth   
}

new:CDB_Product(ACC6W_INSUL_1520) -> CVACCESSOR_TAB
{ Inherited(ACC6W_INSUL_15)
	{
		CDB_Product::Reference = "322031-30508"
		CDB_Product::Name = "IDS_NAME_ACC6WINSUL1520"
	}
}

////////////////////////////////////////////////////
//
//		Table CVADAPTER_TAB : Control valve adapters
//
////////////////////////////////////////////////////

new:CDB_Product(ADAP_TAR_01) -> CVADAPTER_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 	// Tmax in �C
		DBL_MIN                                 	// Tmin in �C
	}
	"52757-001"                                 // Reference to the TA Product
	"Adapter 01"                                // Name of the product (can be an IDS)
	ADAPTYP_CV                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ADAPTFAM_KTM                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ADAP_TAR_01"							// Siemens SQS, Belimo NRDVX-3-SI				// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth 
}

new:CDB_Product(ADAP_TAR_02) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-002"
		CDB_Product::Name = "Adapter 02"
		CDB_Product::Comment = "IDS_ADAP_TAR_02"	// JCI VA-745x
	}
}

new:CDB_Product(ADAP_TAR_03) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-031"
		CDB_Product::Name = "Adapter 03"
		CDB_Product::Comment = "IDS_ADAP_TAR_03"	// TA-R25
	}
}

new:CDB_Product(ADAP_TAR_04) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-019"
		CDB_Product::Name = "Adapter 04"
		CDB_Product::Comment = "IDS_ADAP_TAR_04"	// TAC Forta M400/M800
	}
}

new:CDB_Product(ADAP_TAR_05) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-035"
		CDB_Product::Name = "Adapter 05"
		CDB_Product::Comment = "IDS_ADAP_TAR_05"	// TA-Slider 750, TA-MC55, MC100
	}
}

new:CDB_Product(ADAP_TAR_06) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-034"
		CDB_Product::Name = "Adapter 06"
		CDB_Product::Comment = "IDS_ADAP_TAR_06"	// Heimeier thermostatic head
	}
}

new:CDB_Product(ADAP_TAR_07) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-007"
		CDB_Product::Name = "Adapter 07"
		CDB_Product::Comment = "IDS_ADAP_TAR_07"	// Lineg NL
	}
}

new:CDB_Product(ADAP_TAR_08) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-008"
		CDB_Product::Name = "Adapter 08"
		CDB_Product::Comment = "IDS_ADAP_TAR_08"	// Danfoss AMV 10, 13, 20, 23
	}
}

new:CDB_Product(ADAP_TAR_09) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-037"
		CDB_Product::Name = "Adapter 09"
		CDB_Product::Comment = "IDS_ADAP_TAR_09"	// Belimo NRDVX-SR-T-CA
	}
}

new:CDB_Product(ADAP_TAR_10) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-042"
		CDB_Product::Name = "Adapter 10"
		CDB_Product::Comment = "IDS_ADAP_TAR_10"	// Honeywell ML 6420, 6425, 7420, 7425
	}
}

new:CDB_Product(ADAP_TAR_11) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-011"
		CDB_Product::Name = "Adapter 11"
		CDB_Product::Comment = "IDS_ADAP_TAR_11"	// Samson 5825
	}
}

new:CDB_Product(ADAP_TAR_12) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-022"
		CDB_Product::Name = "Adapter 12"
		CDB_Product::Comment = "IDS_ADAP_TAR_12"	// Siemens SQX, SKD
	}
}

new:CDB_Product(ADAP_TAR_13) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-041"
		CDB_Product::Name = "Adapter 13"
		CDB_Product::Comment = "IDS_ADAP_TAR_13"	// TA-NV24, Belimo NV24 MFT + UNV 003
	}
}

new:CDB_Product(ADAP_TAR_14) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-030"
		CDB_Product::Name = "Adapter 14"
		CDB_Product::Comment = "IDS_ADAP_TAR_14"	// Sauter AVM 104/114, 105/115, 124, 125
	}
}

new:CDB_Product(ADAP_TAR_15) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-029"
		CDB_Product::Name = "Adapter 15"
		CDB_Product::Comment = "IDS_ADAP_TAR_15"	// Belimo NV24 MFT + UNV 002
	}
}

new:CDB_Product(ADAP_TAR_16) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-016"
		CDB_Product::Name = "Adapter 16"
		CDB_Product::Comment = "IDS_ADAP_TAR_16"	// Clorius V2.05, V4.10
	}
}

new:CDB_Product(ADAP_TAR_17) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-028"
		CDB_Product::Name = "Adapter 17"
		CDB_Product::Comment = "IDS_ADAP_TAR_17"	// TA-MC45
	}
}

new:CDB_Product(ADAP_TAR_18) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-033"
		CDB_Product::Name = "Adapter 18"
		CDB_Product::Comment = "IDS_ADAP_TAR_18"	// JCI VA-715x, VA-720x, VA-774x
	}
}

new:CDB_Product(ADAP_TAR_21) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-021"
		CDB_Product::Name = "Adapter 21"
		CDB_Product::Comment = "IDS_ADAP_TAR_21"	// Sauter AVM 104/114, 105/115, 124, 125
	}
}

new:CDB_Product(ADAP_TAR_23) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-036"
		CDB_Product::Name = "Adapter 23"
		CDB_Product::Comment = "IDS_ADAP_TAR_23"	// Kieback & Peter MD200
	}
}

new:CDB_Product(ADAP_TAR_24) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-024"
		CDB_Product::Name = "Adapter 24"
		CDB_Product::Comment = "IDS_ADAP_TAR_24"	// TA-MC25
	}
}

new:CDB_Product(ADAP_TAR_25) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-026"
		CDB_Product::Name = "Adapter 25"
		CDB_Product::Comment = "IDS_ADAP_TAR_25"	// TA-MC100 FSE/FSR - 24
	}
}

new:CDB_Product(ADAP_TAR_26) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-038"
		CDB_Product::Name = "Adapter 26"
		CDB_Product::Comment = "IDS_ADAP_TAR_26"	// TA-R25 PLASTIC
	}
}

new:CDB_Product(ADAP_TAR_27) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-045"
		CDB_Product::Name = "Adapter 27"
		CDB_Product::Comment = "IDS_ADAP_TAR_27"	// Siemens SAX
	}
}

new:CDB_Product(ADAP_TAR_DN65_01) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-901"
		CDB_Product::Name = "Adapter 01"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_01"	// TA-NV24, Belimo NV24 MFT + UNV 003
	}
}

new:CDB_Product(ADAP_TAR_DN65_02) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-902"
		CDB_Product::Name = "Adapter 02"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_02"	// Danfoss AMV 55
	}
}

new:CDB_Product(ADAP_TAR_DN65_03) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-903"
		CDB_Product::Name = "Adapter 03"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_03"	// Siemens SQX, SKB, SKD
	}
}

new:CDB_Product(ADAP_TAR_DN65_05) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-905"
		CDB_Product::Name = "Adapter 05"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_05"	// TA-MC55
	}
}

new:CDB_Product(ADAP_TAR_DN65_06) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-906"
		CDB_Product::Name = "Adapter 06"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_06"	// TAC Forta M400/M800
	}
}

new:CDB_Product(ADAP_TAR_DN65_07) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-907"
		CDB_Product::Name = "Adapter 07"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_07"	// Adapter for TA-Slider 750/1250, TA-MC 100 actuators
	}
}

new:CDB_Product(ADAP_TAR_DN65_08) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-908"
		CDB_Product::Name = "Adapter 08"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_08"	// JCI VA-7242, VA-7740
	}
}

new:CDB_Product(ADAP_TAR_DN65_09) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-909"
		CDB_Product::Name = "Adapter 09"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_09"	// ML64XX/74XX
	}
}

new:CDB_Product(ADAP_TAR_DN65_10) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-910"
		CDB_Product::Name = "Adapter 10"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_10"	// DANFOSS AME/V413
	}
}

new:CDB_Product(ADAP_TAR_DN65_11) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-911"
		CDB_Product::Name = "Adapter 11"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_11"	// K&P MD50, MD200
	}
}

new:CDB_Product(ADAP_TAR_DN65_12) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-912"
		CDB_Product::Name = "Adapter 12"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_12"	// TA-MC100 FSE/FSR
	}
}

new:CDB_Product(ADAP_TAR_DN65_13) -> CVADAPTER_TAB
{ Inherited(ADAP_TAR_01)
	{
		CDB_Product::Reference = "52757-913"
		CDB_Product::Name = "Adapter 13"
		CDB_Product::Comment = "IDS_ADAP_TAR_DN65_13"	// TA-MC160/230
	}
}

new:CDB_Product(ADAP_FUSION_65150_03) -> CVADAPTER_TAB
{
	{
		{
			0 								// isDeleted
			1                               // isAvailable
			0                               // isHidden
			1                               // isFix
			0                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               				// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                     // Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                         // Tmax in �C
		DBL_MIN                     	// Tmin in �C
	}
	"22413-001055"                  // Reference to the TA Product
	"Adapter 03"                    // Name of the product (can be an IDS)
	ADAPTYP_CV                      // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ADAPTFAM_FUSION                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID							// Identifier of the version of the product
	1								// Level of priority for selection [1,10]
	"IDS_ADAP_FUSION_65150_03"		// TA-SLIDER 750/1250, TA-MC55(Y), TA-MC100(FSE/FSR)				// IDS of a more verbose description of the accessory
	"NO_ID"							// Product image ID		
	NO_ID                           // Identifier of the accessory group
	#ePartOfaSetNo                  // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID							// Table ID where are sets if exist for the current product.
	0.0                             // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ADAP_FUSION_150_01) -> CVADAPTER_TAB
{ Inherited(ADAP_FUSION_65150_03)
	{
		CDB_Product::Reference = "22413-101253"
		CDB_Product::Name = "Adapter 01"
		CDB_Product::Comment = "IDS_ADAP_FUSION_150_01"			// TA-MC253
	}
}

new:CDB_Product(ADAP_FUSION_150_02) -> CVADAPTER_TAB
{ Inherited(ADAP_FUSION_65150_03)
	{
		CDB_Product::Reference = "22413-001160"
		CDB_Product::Name = "IDS_ADAP_FUSION_150_MC160"
		CDB_Product::Comment = "IDS_ADAP_FUSION_150_MC160_DESC"			// TA-MC160
	}
}

new:CDB_Product(ADAP_FUS_P65150_SIEMENS) -> CVADAPTER_TAB
{ Inherited(ADAP_FUSION_65150_03)
	{
		CDB_Product::Reference = "22214-000001"
		CDB_Product::Name = "Adapter 04"
		CDB_Product::Comment = "IDS_ADAP_FUSION_P65150_SIEMENS"	// Siemens SAX-P, SQV-P
	}
}

new:CDB_Product(ADAP_MODULATOR_2532) -> CVADAPTER_TAB
{ Inherited(ADAP_FUSION_65150_03)
	{
		CDB_Product::Reference = "322042-10700"
		CDB_Product::Name = "IDS_ADAP_MODULATOR_2532"
		CDB_Product::Comment = "IDS_ADAP_MODULATOR_2532_DESC"
	}
}

new:CDB_Product(ADAP_MODULATOR_4050B) -> CVADAPTER_TAB
{ Inherited(ADAP_MODULATOR_2532)
	{
		CDB_Product::Reference = "322042-80800"
		CDB_Product::Name = "IDS_ADAP_MODULATOR_4050"
		CDB_Product::Comment = "IDS_ADAP_MODULATOR_4050_DESC"
	}
}

new:CDB_Product(ADAP_MODULATOR_4050C) -> CVADAPTER_TAB
{ Inherited(ADAP_MODULATOR_2532)
	{
		CDB_Product::Reference = "322042-80801"
		CDB_Product::Comment = "IDS_ADAP_MODULATOR_4050_FS_DESC"	// TA-MC100 FSE/FSR
	}
}

new:CDB_Product(ADAP_MODULATOR_150) -> CVADAPTER_TAB
{ Inherited(ADAP_MODULATOR_2532)
	{
		CDB_Product::Reference = "322042-01400"
		CDB_Product::Name = "IDS_ADAP_MODULATOR_150"
		CDB_Product::Comment = "IDS_ADAP_MODULATOR_150_DESC"
	}
}

////////////////////////////////////////////////////////////////
//
//		Table ACTACCESSOR_TAB : Actuator accessories
//
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
// Actuator accessories: Voltage 24 VAC
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA30_M140) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"67030-140"                                 // Reference to the TA Product
	"ACA30"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MXXX                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA30"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA30                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA30_M180) -> ACTACCESSOR_TAB
{ Inherited(ACA30_M140)
	{
		CDB_Product::Reference = "67030-180"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: 2 position switches (potential free, infinitely adjustable)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA32_M130) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"322042-10050"                               // Reference to the TA Product
	"ACA32"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MXXX                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA32"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA32                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA32_M140_180) -> ACTACCESSOR_TAB
{ Inherited(ACA32_M130)
	{
		CDB_Product::Reference = "322042-10051"
		CDB_Product::Comment = "IDS_ACA32_M140_180"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: Potentiometer with attachment (200 Ohm)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA33_M130) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"322042-10009"                                 // Reference to the TA Product
	"ACA33"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MXXX                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA33"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA33                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA33_M140_180) -> ACTACCESSOR_TAB
{ Inherited(ACA33_M130)
	{
		CDB_Product::Reference = "322042-10078"
		CDB_Product::Comment = "IDS_ACA33_M140_180"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: Heater (24/115/230 VAC - 50/60 Hz)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA38_M140) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"322042-10079"                              // Reference to the TA Product
	"ACA38"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MXXX                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA38_140"                             // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA38                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA38_M140_24) -> ACTACCESSOR_TAB
{ Inherited(ACA38_M140)
	{
		CDB_Product::Reference = "322042-10080"
		CDB_Product::Comment = "IDS_ACA38_140_24"
	}
}

new:CDB_Product(ACA38_M180) -> ACTACCESSOR_TAB
{ Inherited(ACA38_M140)
	{
		CDB_Product::Reference = "322042-10082"
		CDB_Product::Comment = "IDS_ACA38_180"
	}
}

new:CDB_Product(ACA38_M180_24) -> ACTACCESSOR_TAB
{ Inherited(ACA38_M140)
	{
		CDB_Product::Reference = "322042-10081"
		CDB_Product::Comment = "IDS_ACA38_180_24"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: Position switch unit (2 switches)
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA71_100) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"67071-100"                                 // Reference to the TA Product
	"ACA71"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MCXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA71"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA71                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA71_250) -> ACTACCESSOR_TAB
{ Inherited(ACA71_100)
	{
		CDB_Product::Reference = "67071-250"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: Distance pillars stainless steel
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA73_160) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"67073-160"                                 // Reference to the TA Product
	"ACA73"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MCXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA73"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA73                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA73_250) -> ACTACCESSOR_TAB
{ Inherited(ACA73_160)
	{
		CDB_Product::Reference = "67073-250"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: 115 VAC voltage
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA75_55) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"67075-055"                                 // Reference to the TA Product
	"ACA75"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MCXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA75"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA75                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA75_100) -> ACTACCESSOR_TAB
{ Inherited(ACA75_55)
	{
		CDB_Product::Reference = "67075-100"
	}
}

new:CDB_Product(ACA75_250) -> ACTACCESSOR_TAB
{ Inherited(ACA75_55)
	{
		CDB_Product::Reference = "67075-250"
	}
}

new:CDB_Product(ACA75_403) -> ACTACCESSOR_TAB
{ Inherited(ACA75_55)
	{
		CDB_Product::Reference = "67075-403"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: Output signal: 0(4)-20 mA
////////////////////////////////////////////////////////////////

new:CDB_Product(ACA76_100) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"67076-100"                                 // Reference to the TA Product
	"ACA76"                                     // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MCXXX                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACA76"                                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ACA76                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

new:CDB_Product(ACA76_250) -> ACTACCESSOR_TAB
{ Inherited(ACA76_100)
	{
		CDB_Product::Reference = "67076-250"
	}
}

////////////////////////////////////////////////////////
// Actuator accessories: Overmoulded Cables, Daisy chain cables
////////////////////////////////////////////////////////

new:CDB_Product(ACT_CABLE_A150HF) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"322042-80012"                              // Reference to the TA Product
	"IDS_NAME_ACT_CABLE_A150"                  // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TA-SliderXXXX                        // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACT_CABLE_A150HF"                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACT_CABLE_A500HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_A150HF)
	{
		CDB_Thing::SortInt = 1
		CDB_Product::Reference = "322042-80013"
		CDB_Product::Name = "IDS_NAME_ACT_CABLE_A500"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_A500HF"
	}
}

new:CDB_Product(ACT_CABLE_A1000HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_A150HF)
	{
		CDB_Thing::SortInt = 2
		CDB_Product::Reference = "322042-80014"
		CDB_Product::Name = "IDS_NAME_ACT_CABLE_A1000"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_A1000HF"
	}
}

// Type B

new:CDB_Product(ACT_CABLE_B150HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_A150HF)
	{
		CDB_Thing::SortInt = 3
		CDB_Product::Reference = "322042-80015"
		CDB_Product::Name= "IDS_NAME_ACT_CABLE_B150"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_B150HF"
	}
}

new:CDB_Product(ACT_CABLE_B500HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_B150HF)
	{
		CDB_Thing::SortInt = 4
		CDB_Product::Reference = "322042-80016"
		CDB_Product::Name= "IDS_NAME_ACT_CABLE_B500"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_B500HF"
	}
}

new:CDB_Product(ACT_CABLE_B1000HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_B150HF)
	{
		CDB_Thing::SortInt = 5
		CDB_Product::Reference = "322042-80017"
		CDB_Product::Name= "IDS_NAME_ACT_CABLE_B1000"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_B1000HF"
	}
}

// Type C

new:CDB_Product(ACT_CABLE_C150HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_A150HF)
	{
		CDB_Thing::SortInt = 6
		CDB_Product::Reference = "322042-80018"
		CDB_Product::Name= "IDS_NAME_ACT_CABLE_C150"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_C150HF"
	}
}

new:CDB_Product(ACT_CABLE_C500HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_C150HF)
	{
		CDB_Thing::SortInt = 7
		CDB_Product::Reference = "322042-80019"
		CDB_Product::Name= "IDS_NAME_ACT_CABLE_C500"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_C500HF"
	}
}

new:CDB_Product(ACT_CABLE_C1000HF) -> ACTACCESSOR_TAB
{ Inherited(ACT_CABLE_C150HF)
	{
		CDB_Thing::SortInt = 8
		CDB_Product::Reference = "322042-80020"
		CDB_Product::Name= "IDS_NAME_ACT_CABLE_C1000"
		CDB_Product::Comment= "IDS_DESC_ACT_CABLE_C1000HF"
	}
}

////////////////////////////////////////////////////////////////
// Actuator accessories: TA-Dongle
////////////////////////////////////////////////////////////////

new:CDB_Product(ACT_SLD_TADONGLE) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in °C
		DBL_MIN                                     // Tmin in °C
	}
	"322228-00001"                              // Reference to the TA Product
	"TA-Dongle"                                 // Name of the product (can be an IDS)
	ACCTYP_ACT                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MXXX                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_TADONGLE"                         // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	1                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

////////////////////////////////////////////////////////////////
//
//		Table BCVACCESSOR_TAB : Balancing and Control valve accessories
//
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
// Welding connection.
////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXW_10) -> CONACCESSOR_TAB
{
	{
		{
			0												// isDeleted
			1                                               // isAvailable
			0                                               // isHidden
			1                                               // isFix
			0                                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                             // Tmax in �C
		DBL_MIN                                         // Tmin in �C
	}
	"52 009-010"									// Reference to the TA Product
	"ACCXW_DN10"                                    // Name of the product (can be an IDS)
	ACCTYP_VALVE						            // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_WELDINGCON								// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACCXW"                                     // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_CON                                     // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACCXW_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Name= "ACCXW_DN15"
		CDB_Product::Reference = "52 009-015"
	}
}

new:CDB_Product(ACCXW_20) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-020"
		CDB_Product::Name= "ACCXW_DN20"
	}
}

new:CDB_Product(ACCXW_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-025"
		CDB_Product::Name= "ACCXW_DN25"
	}
}

new:CDB_Product(ACCXW_32) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-032"
		CDB_Product::Name= "ACCXW_DN32"
	}
}

new:CDB_Product(ACCXW_40) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-040"
		CDB_Product::Name= "ACCXW_DN40"
	}
}

new:CDB_Product(ACCXW_50) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-050"
		CDB_Product::Name= "ACCXW_DN50"
	}
}

////////////////////////////////////////////////////////////////
// Soldering connection.
////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXS_10) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-510"
		CDB_Product::Name= "ACCXS_10"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_12) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-512"
		CDB_Product::Name= "ACCXS_12"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-515"
		CDB_Product::Name= "ACCXS_15"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_16) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-516"
		CDB_Product::Name= "ACCXS_16"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_18) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-518"
		CDB_Product::Name= "ACCXS_18"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_22) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-522"
		CDB_Product::Name= "ACCXS_22"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_28) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-528"
		CDB_Product::Name= "ACCXS_28"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_32) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-535"
		CDB_Product::Name= "ACCXS_35"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_40) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-542"
		CDB_Product::Name= "ACCXS_DN40"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXS_50) -> CONACCESSOR_TAB
{ Inherited(ACCXW_50)
	{
		CDB_Product::Reference = "52 009-554"
		CDB_Product::Name= "ACCXS_DN50"
		CDB_Product::FamilyID = ACCFAM_SOLDERCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

////////////////////////////////////////////////////////////////
// Soldering connection (US version).
////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXSNPT_10) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-710"
		CDB_Product::Name= "ACCXS_3/8" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

new:CDB_Product(ACCXSNPT_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-715"
		CDB_Product::Name= "ACCXS_1/2" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

new:CDB_Product(ACCXSNPT_20) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-720"
		CDB_Product::Name= "ACCXS_3/4" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

new:CDB_Product(ACCXSNPT_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-725"
		CDB_Product::Name= "ACCXS_1" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

new:CDB_Product(ACCXSNPT_32) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-732"
		CDB_Product::Name= "ACCXS_1 1/4" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

new:CDB_Product(ACCXSNPT_40) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-740"
		CDB_Product::Name= "ACCXS_1 1/2" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

new:CDB_Product(ACCXSNPT_50) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-750"
		CDB_Product::Name= "ACCXS_2" NPT"
		CDB_Product::FamilyID = ACCFAM_SOLDANSICON
		CDB_Product::Comment = "IDS_ACCXS_NPT"
	}
}

////////////////////////////////////////////////////////////////
// Smooth end connection.
////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXSE_12) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-312"
		CDB_Product::Name= "ACCXSE_12"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-315"
		CDB_Product::Name= "ACCXSE_15"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_18) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-318"
		CDB_Product::Name= "ACCXSE_18"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_22) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-322"
		CDB_Product::Name= "ACCXSE_22"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-328"
		CDB_Product::Name= "ACCXSE_25"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_32) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-335"
		CDB_Product::Name= "ACCXSE_35"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_40) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 009-342"
		CDB_Product::Name= "ACCXSE_42"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

new:CDB_Product(ACCXSE_50) -> CONACCESSOR_TAB
{ Inherited(ACCXW_50)
	{
		CDB_Product::Reference = "52 009-354"
		CDB_Product::Name= "ACCXSE_54"
		CDB_Product::FamilyID = ACCFAM_SMOTHENDCON
		CDB_Product::Comment = "IDS_ACCXSE"
	}
}

////////////////////////////////////////////////////////////////
// Double connection fiting.
// For clamping plastic, copper, precisioncsteel or multi-layer pipes.
// Nickel-plated brass.
////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXDBLCONFIT) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1321-12.083"
		CDB_Product::Name= "IDS_ACCXDOUBLECONNECTIONFITTING"
		CDB_Product::FamilyID = ACCFAM_DBLCONFITTING
		CDB_Product::Comment = "IDS_ACCXDOUBLECONNECTIONFITTING_DESC"
	}
}

////////////////////////////////////////////////////////////////
// Compression connection.
////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// TA 319 Half coupling - Chrome plated - Should not be used with PEX-pipes
///////////////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXCMP_08) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-208"
		CDB_Product::Name= "ACCXCMP_08"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

new:CDB_Product(ACCXCMP_10) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-210"
		CDB_Product::Name= "ACCXCMP_10"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

new:CDB_Product(ACCXCMP_12) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-212"
		CDB_Product::Name= "ACCXCMP_12"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

new:CDB_Product(ACCXCMP_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-215"
		CDB_Product::Name= "ACCXCMP_15"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

new:CDB_Product(ACCXCMP_16) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-216"
		CDB_Product::Name= "ACCXCMP_16"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

///////////////////////////////////////////////////////////////////////////
// TA 319 Half coupling - Nickel plated - Should not be used with PEX-pipes
///////////////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXCMP_615) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-615"
		CDB_Product::Name= "ACCXCMP_15"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

new:CDB_Product(ACCXCMP_618) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-618"
		CDB_Product::Name= "ACCXCMP_18"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

new:CDB_Product(ACCXCMP_622) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "53 319-622"
		CDB_Product::Name= "ACCXCMP_22"
		CDB_Product::FamilyID = ACCFAM_HALFCOUP
		CDB_Product::Comment = "IDS_ACCXCMP"
	}
}

///////////////////////////////////////////////////////////////////////////
// Compression fitting for plastic pipe according to DIN 4726, ISO 10508.
// PE-X: DIN 16892/16893, EN ISO 15875
// PB: DIN 16968/16969
// Connection male thread G3/4 according to DIN EN 16313 (Eurocone).
// Nickel plated brass.
///////////////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXCMP_PP_12_11) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1315-12.351"
		CDB_Product::Name= "IDS_ACCXCMP_12_11"
		CDB_Product::FamilyID = ACCFAM_COMPFITTING
		CDB_Product::Comment = "IDS_ACCXCMP_PLASTICPIPE_DESC"
	}
}

new:CDB_Product(ACCXCMP_PP_14_2) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_PP_12_11)
	{
		CDB_Product::Reference = "1311-14.351"
		CDB_Product::Name= "IDS_ACCXCMP_14_2"
	}
}

new:CDB_Product(ACCXCMP_PP_16_15) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_PP_12_11)
	{
		CDB_Product::Reference = "1315-16.351"
		CDB_Product::Name= "IDS_ACCXCMP_16_15"
	}
}

new:CDB_Product(ACCXCMP_PP_16_2) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_PP_12_11)
	{
		CDB_Product::Reference = "1311-16.351"
		CDB_Product::Name= "IDS_ACCXCMP_16_2"
	}
}

new:CDB_Product(ACCXCMP_PP_17_2) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_PP_12_11)
	{
		CDB_Product::Reference = "1311-17.351"
		CDB_Product::Name= "IDS_ACCXCMP_17_2"
	}
}

new:CDB_Product(ACCXCMP_PP_18_2) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_PP_12_11)
	{
		CDB_Product::Reference = "1311-18.351"
		CDB_Product::Name= "IDS_ACCXCMP_18_2"
	}
}

new:CDB_Product(ACCXCMP_PP_20_2) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_PP_12_11)
	{
		CDB_Product::Reference = "1311-20.351"
		CDB_Product::Name= "IDS_ACCXCMP_20_2"
	}
}

///////////////////////////////////////////////////////////////////////////
// Compression fitting for copper or precision steel pipe.
// Connection male thread G 3/4.
// Metal-to-metal joint.
// Nickel-plated brass.
// With a pipe wall thickness of 0.8-1 mm insert supporting sleeves. 
// Heed pipe manufacturer's technical advice.
///////////////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXCMP_12351) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "3831-12.351"
		CDB_Product::Name= "IDS_ACCXCMP_12"
		CDB_Product::FamilyID = ACCFAM_COMPFITTING
		CDB_Product::Comment = "IDS_ACCXCMP_METALTOMETALJOINT_DESC"
	}
}

new:CDB_Product(ACCXCMP_14351) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_12351)
	{
		CDB_Product::Reference = "3831-14.351"
		CDB_Product::Name= "IDS_ACCXCMP_14"
	}
}

new:CDB_Product(ACCXCMP_15351) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_12351)
	{
		CDB_Product::Reference = "3831-15.351"
		CDB_Product::Name= "IDS_ACCXCMP_15"
	}
}

new:CDB_Product(ACCXCMP_16351) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_12351)
	{
		CDB_Product::Reference = "3831-16.351"
		CDB_Product::Name= "IDS_ACCXCMP_16"
	}
}

new:CDB_Product(ACCXCMP_18351) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_12351)
	{
		CDB_Product::Reference = "3831-18.351"
		CDB_Product::Name= "IDS_ACCXCMP_18"
	}
}

///////////////////////////////////////////////////////////////////////////
// Compression fitting for copper or precision steel pipe and stainless steel pipe.
// Connection male thread G 3/4.
// Soft sealed, max. 95 �C.
// Nickel-plated brass.
///////////////////////////////////////////////////////////////////////////

// Compression fitting soft-sealed 15.
new:CDB_Product(ACCXCMP_SS_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1313-15.351"
		CDB_Product::Name= "IDS_ACCXCMP_15"
		CDB_Product::FamilyID = ACCFAM_COMPFITTING
		CDB_Product::Comment = "IDS_ACCXCMP_SOFTSEALED_DESC"
	}
}

// Compression fitting soft-sealed 18.
new:CDB_Product(ACCXCMP_SS_18) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_SS_15)
	{
		CDB_Product::Reference = "1313-18.351"
		CDB_Product::Name= "IDS_ACCXCMP_18"
	}
}

///////////////////////////////////////////////////////////////////////////
// Compression fitting for Alu/Pex multi-layer pipe according to DIN 16836.
// Connection male thread G 3/4 accoring to DIN EN 16313 (Eurocone).
// Nickel-plated brass.
///////////////////////////////////////////////////////////////////////////

// Compression fitting Alu/PEX 16x2.
new:CDB_Product(ACCXCMP_ALPEX_16) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1331-16.351"
		CDB_Product::Name= "IDS_ACCXCMP_16_2"
		CDB_Product::FamilyID = ACCFAM_COMPFITTING
		CDB_Product::Comment = "IDS_ACCXCMP_FORALUPEX_DESC"
	}
}

///////////////////////////////////////////////////////////////////////////
// Compression fitting for Alu/Pex multi-layer pipe according to DIN 16836.
// Female thread connection Rp 1/2.
// Nickel-plated brass.
///////////////////////////////////////////////////////////////////////////

// Compression fitting Alu/PEX 16x2.
new:CDB_Product(ACCXCMP_ALPEX_16F) -> CONACCESSOR_TAB
{ Inherited(ACCXCMP_ALPEX_16)
	{
		CDB_Product::Reference = "1335-16.351"
		CDB_Product::Comment = "IDS_ACCXCMP_FORALUPEXFEMALE_DESC"
	}
}

///////////////////////////////////////////////////////////////////////////
// Length adjustment fitting.
// For connection to plastic, copper, precision steel or multi-layer pipes.
// For valves with male thread connection G3/4.
// Brass nickel-plated.
///////////////////////////////////////////////////////////////////////////
new:CDB_Product(ACCXLADJFIT_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "9713-02.354"
		CDB_Product::Name= "IDS_ACCXLENGTHADJUSTMENTFITTING"
		CDB_Product::FamilyID = ACCFAM_LENADJFITTING
		CDB_Product::Comment = "IDS_ACCXLENGTHADJUSTMENTFITTING25_DESC"
	}
}

new:CDB_Product(ACCXLADJFIT_50) -> CONACCESSOR_TAB
{ Inherited(ACCXLADJFIT_25)
	{
		CDB_Product::Reference = "9714-02.354"
		CDB_Product::Comment = "IDS_ACCXLENGTHADJUSTMENTFITTING50_DESC"
	}
}

///////////////////////////////////////////////////////////////////////////
// Support sleeve for copper or precision steel pipe with a 1 mm wall 
// thickness. Brass.
///////////////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXCMPSL_12) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1300-12.170"
		CDB_Product::Name= "ACCXCMPSL_12"
		CDB_Product::FamilyID = ACCFAM_SUPSLEEVE
		CDB_Product::Comment = "IDS_ACCXCMPSL"
	}
}

new:CDB_Product(ACCXCMPSL_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1300-15.170"
		CDB_Product::Name= "ACCXCMPSL_15"
		CDB_Product::FamilyID = ACCFAM_SUPSLEEVE
		CDB_Product::Comment = "IDS_ACCXCMPSL"
	}
}

new:CDB_Product(ACCXCMPSL_16) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1300-16.170"
		CDB_Product::Name= "ACCXCMPSL_16"
		CDB_Product::FamilyID = ACCFAM_SUPSLEEVE
		CDB_Product::Comment = "IDS_ACCXCMPSL"
	}
}

new:CDB_Product(ACCXCMPSL_18) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "1300-18.170"
		CDB_Product::Name= "ACCXCMPSL_18"
		CDB_Product::FamilyID = ACCFAM_SUPSLEEVE
		CDB_Product::Comment = "IDS_ACCXCMPSL"
	}
}

////////////////////////////////////////////////////////////////
// With female thread connection.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXFTH_10) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-010"
		CDB_Product::Name= "ACCXFTH_G3/8""
		CDB_Product::FamilyID = ACCFAM_FTHREADCON
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

new:CDB_Product(ACCXFTH_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-015"
		CDB_Product::Name= "ACCXFTH_G1/2""
		
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

new:CDB_Product(ACCXFTH_20) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-020"
		CDB_Product::Name= "ACCXFTH_G3/4""
		CDB_Product::FamilyID = ACCFAM_FTHREADCON
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

new:CDB_Product(ACCXFTH_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-025"
		CDB_Product::Name= "ACCXFTH_G1""
		CDB_Product::FamilyID = ACCFAM_FTHREADCON
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

new:CDB_Product(ACCXFTH_32) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-032"
		CDB_Product::Name= "ACCXFTH_G1 1/4""
		CDB_Product::FamilyID = ACCFAM_FTHREADCON
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

new:CDB_Product(ACCXFTH_40) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-040"
		CDB_Product::Name= "ACCXFTH_G1 1/2""
		CDB_Product::FamilyID = ACCFAM_FTHREADCON
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

new:CDB_Product(ACCXFTH_50) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-050"
		CDB_Product::Name= "ACCXFTH_G2""
		CDB_Product::FamilyID = ACCFAM_FTHREADCON
		CDB_Product::Comment = "IDS_ACCXFTH"
	}
}

////////////////////////////////////////////////////////////////
// With female thread NPT connection.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXFTHNPT_10) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-210"
		CDB_Product::Name= "ACCXFTH_3/8" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-215"
		CDB_Product::Name= "ACCXFTH_1/2" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_220) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-220"
		CDB_Product::Name= "ACCXFTH_3/4" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_225) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-225"
		CDB_Product::Name= "ACCXFTH_1" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_232) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-232"
		CDB_Product::Name= "ACCXFTH_1 1/4" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_240) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-240"
		CDB_Product::Name= "ACCXFTH_1 1/2" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_250) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-250"
		CDB_Product::Name= "ACCXFTH_2" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_320) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-320"
		CDB_Product::Name= "ACCXFTH_1/2" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_325) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-325"
		CDB_Product::Name= "ACCXFTH_3/4" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_332) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-332"
		CDB_Product::Name= "ACCXFTH_1" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_340) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-340"
		CDB_Product::Name= "ACCXFTH_1" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

new:CDB_Product(ACCXFTHNPT_350) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "52 163-350"
		CDB_Product::Name= "ACCXFTH_1 1/2" NPT"
		CDB_Product::FamilyID = ACCFAM_FTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXFTHNPT"
	}
}

////////////////////////////////////////////////////////////////
// With male thread connection.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXMTH_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-02.350"
		CDB_Product::Name= "ACCXMTH_G3/4""
		CDB_Product::FamilyID = ACCFAM_MTHREADCON
		CDB_Product::Comment = "IDS_ACCXMTH"
	}
}

new:CDB_Product(ACCXMTH_20) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-03.350"
		CDB_Product::Name= "ACCXMTH_G1""
		CDB_Product::FamilyID = ACCFAM_MTHREADCON
		CDB_Product::Comment = "IDS_ACCXMTH"
	}
}

new:CDB_Product(ACCXMTH_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-04.350"
		CDB_Product::Name= "ACCXMTH_G1 1/4""
		CDB_Product::FamilyID = ACCFAM_MTHREADCON
		CDB_Product::Comment = "IDS_ACCXMTH"
	}
}

new:CDB_Product(ACCXMTH_32) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-05.350"
		CDB_Product::Name= "ACCXMTH_G1 1/2""
		CDB_Product::FamilyID = ACCFAM_MTHREADCON
		CDB_Product::Comment = "IDS_ACCXMTH"
	}
}

new:CDB_Product(ACCXMTH_40) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-06.350"
		CDB_Product::Name= "ACCXMTH_G1 3/4""
		CDB_Product::FamilyID = ACCFAM_MTHREADCON
		CDB_Product::Comment = "IDS_ACCXMTH"
	}
}

new:CDB_Product(ACCXMTH_50) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-08.350"
		CDB_Product::Name= "ACCXMTH_G1 3/8""
		CDB_Product::FamilyID = ACCFAM_MTHREADCON
		CDB_Product::Comment = "IDS_ACCXMTH"
	}
}

////////////////////////////////////////////////////////////////
// Screw connection with soldered nipple.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXSMULTI_1515) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-15.352"
		CDB_Product::Name= "ACCS_DN15_d15"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_1516) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-16.352"
		CDB_Product::Name= "ACCS_DN15_d16"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_1518) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-18.352"
		CDB_Product::Name= "ACCS_DN15_d18"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_2022) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-22.352"
		CDB_Product::Name= "ACCS_DN20_22"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_2528) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-28.352"
		CDB_Product::Name= "ACCS_DN25_28"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_3235) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-35.352"
		CDB_Product::Name= "ACCS_DN32_35"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_4042) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-42.352"
		CDB_Product::Name= "ACCS_DN40_42"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

new:CDB_Product(ACCXSMULTI_5054) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-54.352"
		CDB_Product::Name= "ACCS_DN_54"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXS"
	}
}

////////////////////////////////////////////////////////////////
// Screw connection with welded nipple.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXWMULTI_1520) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-02.353"
		CDB_Product::Name= "ACCW_DN15_d20,8"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXW"
	}
}

new:CDB_Product(ACCXWMULTI_2026) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-03.353"
		CDB_Product::Name= "ACCW_DN20_d26,8"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXW"
	}
}

new:CDB_Product(ACCXWMULTI_2533) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-04.353"
		CDB_Product::Name= "ACCW_DN25_d33,2"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXW"
	}
}

new:CDB_Product(ACCXWMULTI_3241) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-05.353"
		CDB_Product::Name= "ACCW_DN32_d41,8"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXW"
	}
}

new:CDB_Product(ACCXWMULTI_4047) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-06.353"
		CDB_Product::Name= "ACCW_DN40_d47,7"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXW"
	}
}

new:CDB_Product(ACCXWMULTI_5059) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "0601-08.353"
		CDB_Product::Name= "ACCW_DN50_d59,5"
		CDB_Product::FamilyID = ACCFAM_SCREWCON
		CDB_Product::Comment = "IDS_ACCXW"
	}
}

////////////////////////////////////////////////////////////////
// With male thread NPT CONNECTION
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCXMTHNPT_15) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "2400-02.350"
		CDB_Product::Name= "ACCXMTH_G3/4" NPT"
		CDB_Product::FamilyID = ACCFAM_MTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXMTHNPT"
	}
}

new:CDB_Product(ACCXMTHNPT_20) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "2400-03.350"
		CDB_Product::Name= "ACCXMTH_G1" NPT"
		CDB_Product::FamilyID = ACCFAM_MTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXMTHNPT"
	}
}

new:CDB_Product(ACCXMTHNPT_25) -> CONACCESSOR_TAB
{ Inherited(ACCXW_10)
	{
		CDB_Product::Reference = "2400-04.350"
		CDB_Product::Name= "ACCXMTH_G1 1/4" NPT"
		CDB_Product::FamilyID = ACCFAM_MTHREADNPTCON
		CDB_Product::Comment = "IDS_ACCXMTHNPT"
	}
}

////////////////////////////////////////////////////////////////
// Screw connections for Globo with threaded nipple
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_SCON_THREAD_15) -> CONACCESSOR_TAB
{
	{
		{
			0												// isDeleted
			1                                               // isAvailable
			0                                               // isHidden
			1                                               // isFix
			0                                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                             // Tmax in �C
		DBL_MIN                                         // Tmin in �C
	}
	"0675-02.350"									// Reference to the TA Product
	"IDS_SCON_THREAD"                               // Name of the product (can be an IDS)
	ACCTYP_VALVE						            // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_SCREWCON									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_SCON_THREADSOLD_DESC"                      // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_CON                                     // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_SCON_THREAD_20) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_THREAD_15)
	{
		CDB_Product::Reference = "0675-03.350"
	}
}

new:CDB_Product(ACC_SCON_THREAD_25) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_THREAD_15)
	{
		CDB_Product::Reference = "0675-04.350"
	}
}

new:CDB_Product(ACC_SCON_THREAD_32) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_THREAD_15)
	{
		CDB_Product::Reference = "0675-05.350"
	}
}

////////////////////////////////////////////////////////////////
// Screw connections for Globo with soldered nipple
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_SCON_SOLDER_15) -> CONACCESSOR_TAB
{
	{
		{
			0												// isDeleted
			1                                               // isAvailable
			0                                               // isHidden
			1                                               // isFix
			0                                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                             // Tmax in �C
		DBL_MIN                                         // Tmin in �C
	}
	"0675-18.352"									// Reference to the TA Product
	"IDS_SCON_SOLDER"                               // Name of the product (can be an IDS)
	ACCTYP_VALVE						            // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_SCREWCON									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_SCON_THREADSOLD_DESC"                      // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_CON                                     // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_SCON_SOLDER_25) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_SOLDER_15)
	{
		CDB_Product::Reference = "0675-28.352"
	}
}

////////////////////////////////////////////////////////////////
// Screw connections for Globo with press nipple
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_SCON_PRESS_15) -> CONACCESSOR_TAB
{
	{
		{
			0												// isDeleted
			1                                               // isAvailable
			0                                               // isHidden
			1                                               // isFix
			0                                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                             // Tmax in �C
		DBL_MIN                                         // Tmin in �C
	}
	"0675-15.356"									// Reference to the TA Product
	"IDS_SCON_PRESS"                                // Name of the product (can be an IDS)
	ACCTYP_VALVE						            // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_SCREWCON									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_SCON_PRESS_DESC"                           // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_CON                                     // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_SCON_PRESS_20) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_PRESS_15)
	{
		CDB_Product::Reference = "0675-22.356"
	}
}

new:CDB_Product(ACC_SCON_PRESS_25) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_PRESS_15)
	{
		CDB_Product::Reference = "0675-28.356"
	}
}

new:CDB_Product(ACC_SCON_PRESS_32) -> CONACCESSOR_TAB
{ Inherited(ACC_SCON_PRESS_15)
	{
		CDB_Product::Reference = "0675-35.356"
	}
}

////////////////////////////////////////////////////////////////
// TA 339 Transition nipple
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_TRNIPPLE_TA339) -> CONACCESSOR_TAB
{
	{
		{
			0												// isDeleted
			1                                               // isAvailable
			0                                               // isHidden
			1                                               // isFix
			0                                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		100                                             // Tmax in �C
		0                                         		// Tmin in �C
	}
	"53 339-715"								// Reference to the TA Product
	"IDS_TRNIPPLE_TA339"                        // Name of the product (can be an IDS)
	ACCTYP_VALVE						        // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TRANSNIPPLE							// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_TRNIPPLE_TA339_DESC"                   // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_CON                                     // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// TA 348 Transition nipple
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_TRNIPPLE_TA348) -> CONACCESSOR_TAB
{ Inherited(ACC_TRNIPPLE_TA339)
	{
		CDB_Product::Reference = "53 348-420"
		CDB_Product::Name = "IDS_TRNIPPLE_TA348"
		CDB_Product::Comment = "IDS_TRNIPPLE_TA348_DESC"
	}
}

////////////////////////////////////////////////////////////////
// Double nipple
// Both sides for clamping plastic, copper, precision steel or multi-layer pipes.
// Nickel-plated brass.
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_TRNIPPLE_DOUBLE) -> CONACCESSOR_TAB
{ Inherited(ACC_TRNIPPLE_TA339)
	{
		CDB_Product::Reference = "1321-03.081"
		CDB_Product::Name = "IDS_TRNIPPLE_DOUBLE"
		CDB_Product::Comment = "IDS_TRNIPPLE_DOUBLE_DESC"
	}
}

////////////////////////////////////////////////////////////////
// HYS-1938: TA-Smart Dp - 05 - Individual selection: right view
// Tansition nipple
// For capillary pipe with G1/16 connection. G1/2xG1/16
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_TRNIPPLE_G12_G16) -> CONACCESSOR_TAB
{ Inherited(ACC_TRNIPPLE_TA339)
	{
		CDB_Product::Reference = "-"
		CDB_Product::Name = "IDS_TRANSITIONNIPPLE_G16"
		CDB_Product::Comment = "IDS_TRNIPPLE_G12_G16_DESC"
	}
}

////////////////////////////////////////////////////////////////
// HYS-1938: TA-Smart Dp - 05 - Individual selection: right view
// Tansition nipple
// For capillary pipe with G1/16 connection. ø6xG1/16
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_TRNIPPLE_D6_G16) -> CONACCESSOR_TAB
{ Inherited(ACC_TRNIPPLE_TA339)
	{
		CDB_Product::Reference = "-"
		CDB_Product::Name = "IDS_TRANSITIONNIPPLE_G16"
		CDB_Product::Comment = "IDS_TRNIPPLE_D6_G16_DESC"
	}
}

// HYS-1894: new acceossory introduced with the new TA-MIX.
////////////////////////////////////////////////////////////////
// Connection with mesh and check valve.
////////////////////////////////////////////////////////////////
new:CDB_Product(ACC_CONMESH_CHECK) -> CONACCESSOR_TAB
{
	{
		{
			0												// isDeleted
			1                                               // isAvailable
			0                                               // isHidden
			1                                               // isFix
			0                                               // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                               // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX 									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                           // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		100                                             // Tmax in �C
		0                                         		// Tmin in �C
	}
	"344010-30400"								// Reference to the TA Product
	"IDS_ACC_CONMESH_CHECK"                     // Name of the product (can be an IDS)
	ACCTYP_VALVE						        // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_CONMESHCHECK							// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACC_CONMESH_CHECK_DESC"                // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_CON                                     // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// TA-Modulator thermal insulation.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACTAMINS_15) -> THINSACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52164-901"                                 // Reference to the TA Product
	"IDS_ACCTYP_THINS"                   		// Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_THINS                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACTAMINS"                              // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_TAMINS                                  // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACTAMINS_20) -> THINSACCESSOR_TAB
{ Inherited(ACTAMINS_15)
	{
		CDB_Product::Reference = "52164-902"
	}
}

new:CDB_Product(ACTAMINS_25) -> THINSACCESSOR_TAB
{ Inherited(ACTAMINS_15)
	{
		CDB_Product::Reference = "52164-903"
	}
}

new:CDB_Product(ACTAMINS_32) -> THINSACCESSOR_TAB
{ Inherited(ACTAMINS_15)
	{
		CDB_Product::Reference = "52164-904"
	}
}

new:CDB_Product(ACTAMINS_40) -> THINSACCESSOR_TAB
{ Inherited(ACTAMINS_15)
	{
		CDB_Product::Reference = "52164-905"
	}
}

new:CDB_Product(ACTAMINS_50) -> THINSACCESSOR_TAB
{ Inherited(ACTAMINS_15)
	{
		CDB_Product::Reference = "52164-906"
	}
}

////////////////////////////////////////////////////////////////
// Spindle extension for thermal insulation.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACTHINS_SPEXT) -> THINSACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"2002-30.700"                               // Reference to the TA Product
	"Spindle extension for DN 15-20"            // Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_THINS                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACTHINS_SPEXT"                         // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_THINS                                  // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Venting extension for thermal insulation.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACTHINS_VEXT4050) -> THINSACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52164-301"                                 // Reference to the TA Product
	"Venting extension for DN 40-50"            // Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_THINS                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACTHINS_VENTEXT"                       // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_THINS                                  // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Venting plug.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACTHINS_VPLUG4050) -> THINSACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52164-302"                                 // Reference to the TA Product
	"Venting plug for DN 40-50"                 // Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_THINS                                // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACTHINS_VPLUG"                         // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_THINS                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Protecting cap.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACVALVE_PRESETTOOLS) -> VALVEACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52164-950"                                 // Reference to the TA Product
	"IDS_ACVALVE_PRSTTOOL"                      // Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MISC                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACVALVE_PRSTTOOL_DESC"                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_MISC                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Protecting cap.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACVALVE_PROTCAP) -> VALVEACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52143-100"                                 // Reference to the TA Product
	"IDS_ACVALVE_PROTCAP"                            // Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MISC                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACVALVE_PROTCAP_DESC"                  // IDS of a more verbose description of the accessory		
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_MISC                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Tamper proof cover.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACVALVE_TPC1532) -> VALVEACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52164-100"                                 // Reference to the TA Product
	"IDS_ACVALVE_TPC1532"                  		// Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MISC                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACVALVE_TPC1532_DESC"                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_MISC                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Color-clips for TA-Multi presetting and shut-off handwheel
////////////////////////////////////////////////////////////////

new:CDB_Product(ACVALVE_CCMULTI15) -> VALVEACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"5850-02.800"                               // Reference to the TA Product
	"IDS_ACVALVE_CCMULTI"                       // Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MISC                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACVALVE_CCMULTI_DESC"                  // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_MISC                                    // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACVALVE_CCMULTI20) -> THINSACCESSOR_TAB
{ Inherited(ACVALVE_CCMULTI15)
	{
		CDB_Product::Reference = "5850-03.800"
	}
}

new:CDB_Product(ACVALVE_CCMULTI25) -> THINSACCESSOR_TAB
{ Inherited(ACVALVE_CCMULTI15)
	{
		CDB_Product::Reference = "5850-04.800"
	}
}

new:CDB_Product(ACVALVE_CCMULTI32) -> THINSACCESSOR_TAB
{ Inherited(ACVALVE_CCMULTI15)
	{
		CDB_Product::Reference = "5850-05.800"
	}
}

new:CDB_Product(ACVALVE_CCMULTI40) -> THINSACCESSOR_TAB
{ Inherited(ACVALVE_CCMULTI15)
	{
		CDB_Product::Reference = "5850-06.800"
	}
}

new:CDB_Product(ACVALVE_CCMULTI50) -> THINSACCESSOR_TAB
{ Inherited(ACVALVE_CCMULTI15)
	{
		CDB_Product::Reference = "5850-08.800"
	}
}

////////////////////////////////////////////////////////////////
//
//		Table DPCACCESSOR_TAB : Valve accessories
//
////////////////////////////////////////////////////////////////

new:CDB_Product(ACDPC1) -> DPCACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52265-201"                                 // Reference to the TA Product
	"IDS_ACDPC1"	// Draining kit 1/2"        // Name of the product (can be an IDS)
	ACCTYP_DPC                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_STAP                                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACDPC1_DESC"                           // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACDPC2) -> DPCACCESSOR_TAB
{Inherited(ACDPC1)
	{
		CDB_Product::Name = "IDS_ACDPC2"	// Draining kit 3/4"
		CDB_Product::Comment = "IDS_ACDPC2_DESC"
		CDB_Product::Reference = "52265-202"
	}
}

new:CDB_Product(ACDPC3) -> DPCACCESSOR_TAB
{Inherited(ACDPC1)
	{
		CDB_Product::Name = "IDS_ACDPC3"	// Measuring point with G1/16 connection
		CDB_Product::Comment = "IDS_ACDPC3_DESC"
		CDB_Product::Reference = "52265-205"
	}
}

new:CDB_Product(ACDPC4) -> DPCACCESSOR_TAB
{Inherited(ACDPC1)
	{
		CDB_Product::Name = "IDS_ACDPC4"	// Measuring point, two-way
		CDB_Product::Comment = "IDS_ACDPC4_DESC"
		CDB_Product::Reference = "52179-200"
	}
}

new:CDB_Product(ACDPC5) -> DPCACCESSOR_TAB
{Inherited(ACDPC1)
	{
		CDB_Product::Name = "IDS_ACDPC5"	// Extension kit for capillary pipe
		CDB_Product::Comment = "IDS_ACDPC5_DESC"
		CDB_Product::Reference = "52265-212"
	}
}

new:CDB_Product(ACDPC6) -> DPCACCESSOR_TAB
{Inherited(ACDPC1)
	{
		CDB_Product::Name = "IDS_ACDPC6"	// Capillary pipe connection with shut-off
		CDB_Product::Comment = "IDS_ACDPC6_DESC"
		CDB_Product::Reference = "52265-206"
	}
}

new:CDB_Product(ACDPC7) -> DPCACCESSOR_TAB
{Inherited(ACDPC1)
	{
		CDB_Product::Name = "IDS_ACDPC7"	// Capillary pipe
		CDB_Product::Comment = "IDS_ACDPC7_DESC"
		CDB_Product::Reference = "52265-301"
	}
}

new:CDB_Product(ACDPC8) -> DPCACCESSOR_TAB
{
	{
		{
			0 																	// isDeleted
			1                                                                   // isAvailable
			0                                                                   // isHidden
			1                                                                   // isFix
			0                                                                   // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                                                   // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               													// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                                                     	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                                               // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                                             // Tmax in �C
		DBL_MIN                                                             // Tmin in �C
	}
	"52762-006"                                                         // Reference to the TA Product
	"IDS_ACDPC8"	// Impulse pipe connection kit (1/2")               // Name of the product (can be an IDS)
	ACCTYP_DPC                                                          // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DA		// TODO: DA 516 and 50 or only DA 516?              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACDPC8_DESC"                                                   // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACDPC9) -> DPCACCESSOR_TAB
{Inherited(ACDPC8)
	{
		CDB_Product::Name = "IDS_ACDPC9"	// Impulse pipe connection kit (3/4")
		CDB_Product::Comment = "IDS_ACDPC9_DESC"
		CDB_Product::Reference = "52762-106"
	}
}

new:CDB_Product(ACDPC10) -> DPCACCESSOR_TAB
{Inherited(ACDPC8)
	{
		CDB_Product::Name = "IDS_ACDPC10"	// Measuring point, two-way
		CDB_Product::Comment = "IDS_ACDPC10_DESC"
		CDB_Product::Reference = "52179-206"
	}
}

new:CDB_Product(ACDPC11) -> DPCACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"23124-2542-001"                            // Reference to the TA Product
	"IDS_ACDPC11"                               // Name of the product (can be an IDS)
	ACCTYP_DPC                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PILOT		// TODO                 // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACDPC11_DESC"                          // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACDPC12) -> DPCACCESSOR_TAB
{Inherited(ACDPC11)
	{
		CDB_Product::Name = "IDS_ACDPC12"					// Capillary pipe connection with shut-off DN20-DN50
		CDB_Product::Comment = "IDS_ACDPC12_DESC"		// For replacement of existing measuring point on STAF/STAF-SG,DN 20 to 50.
		CDB_Product::Reference = "52265-209"
	}
}

new:CDB_Product(ACDPC13) -> DPCACCESSOR_TAB
{Inherited(ACDPC11)
	{
		CDB_Product::Name = "IDS_ACDPC13"					// Capillary pipe connection with shut-off DN65-DN400
		CDB_Product::Comment = "IDS_ACDPC13_DESC"		// For replacement of existing measuring point on STAF/STAF-SG,DN 65 and up.
		CDB_Product::Reference = "52265-208"
	}
}

new:CDB_Product(ACDPC14) -> DPCACCESSOR_TAB
{Inherited(ACDPC11)
	{
		CDB_Product::Name = "IDS_ACDPC14"					// Venting extension
		CDB_Product::Comment = "IDS_ACDPC14_DESC"		// Suitable when insulation is used.
		CDB_Product::Reference = "52759-220"
	}
}

new:CDB_Product(ACDPC15) -> DPCACCESSOR_TAB
{Inherited(ACDPC11)
	{
		CDB_Product::Name = "IDS_ACDPC15"					// Transition nipple G3/4
		CDB_Product::Comment = "IDS_ACDPC15_DESC"		
		CDB_Product::Reference = "52179-986"
	}
}

new:CDB_Product(ACDPC16) -> DPCACCESSOR_TAB
{Inherited(ACDPC11)
	{
		CDB_Product::Name = "IDS_ACDPC16"					// Transition nipple G1/2
		CDB_Product::Comment = "IDS_ACDPC15_DESC"		
		CDB_Product::Reference = "52179-981"
	}
}

////////////////////////////////////////////////////////////////
//
//		Table VSSLACCESSOR_TAB : Vessel accessories
//
////////////////////////////////////////////////////////////////

//****************************
// Lockshield valves DLV
//****************************

new:CDB_Product(LSV_DLV_15) -> VSSLACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ 1.6e+6                              	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"535 1432"                                  // Reference to the TA Product
	"DLV 15"                                    // Name of the product (can be an IDS)
	ACCTYP_PM                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_LSV                                  // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DLV_15_DESC"                           // IDS of a more verbose description of the accessory		
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(LSV_DLV_20) -> VSSLACCESSOR_TAB
{Inherited(LSV_DLV_15)
	{
		CDB_Product::Reference = "535 1434"
		CDB_Product::Name = "DLV 20"
		CDB_Product::Comment = "IDS_LSV_DLV_2025_DESC"	// Lockshield valve DLV, female thread on both sides, flat sealing union for direct connection to expansion vessel.
	}
}

new:CDB_Product(LSV_DLV_20A) -> VSSLACCESSOR_TAB
{Inherited(LSV_DLV_20)
	{
		CDB_Product::Reference = "746 2000"
		CDB_Product::Name = "DLV 20 A"
		CDB_Product::Comment = "IDS_LSV_DLV_20A_DESC"	// Connection set DLV A, female thread on both sides, 90� bend with threaded seal for direct connection to Statico SU expansion vessels.
	}
}

new:CDB_Product(LSV_DLV_25) -> VSSLACCESSOR_TAB
{Inherited(LSV_DLV_20)
	{
		CDB_Product::Reference = "535 1436"
		CDB_Product::Name = "DLV 25"
	}
}

new:CDB_Product(LSV_DLV_25A) -> VSSLACCESSOR_TAB
{Inherited(LSV_DLV_25)
	{
		CDB_Product::Reference = "301010-50601"
		CDB_Product::Name = "DLV 25 A"
		CDB_Product::Comment = "IDS_LSV_DLV_20A_DESC"	// Connection set DLV A, female thread on both sides, 90� bend with threaded seal for direct connection to Statico SU expansion vessels.
	}
}

//********************************
// Lockshield valve for MN vessels
//********************************

new:CDB_Product(LSV_MN_20) -> VSSLACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ 1.0e+6                              	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"15101-000001"                              // Reference to the TA Product
	"LSV-MN 20"                                 // Name of the product (can be an IDS)
	ACCTYP_PM                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_LSV                                  // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_LSV_MN_20_DESC"                        // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

//********************************
// Brackets
//********************************

new:CDB_Product(BCKT_MN_6_24) -> VSSLACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"15101-000002"                              // Reference to the TA Product
	"IDS_BCKT_MN_6_24"                          // Name of the product (can be an IDS)
	ACCTYP_PM                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PMBRACKET                            // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_BCKT_MN_6_24_DESC"                     // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

//****************************
// Measuring accessories
//****************************

new:CDB_Product(ACCPM_H) -> VSSLACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ 4.0e+5                              	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		60.0                                        // Tmax in �C
		-10.0                                       // Tmin in �C
	}
	"501 1037"                                  // Reference to the TA Product
	"Manometer H"                               // Name of the product (can be an IDS)
	ACCTYP_PM                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PMMEAS                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACCPM_H_DESC"                          // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACCPM_TH) -> VSSLACCESSOR_TAB
{Inherited(ACCPM_H)
	{
		CDB_HydroThing::Tmax 		= 	120.0
		CDB_HydroThing::Tmin 		= 	-10.0
		CDB_Product::Reference 	= 	"501 1038"
		CDB_Product::Name 		= 	"IDS_ACCPM_TH"
		CDB_Product::Comment 	= 	"IDS_ACCPM_TH_DESC"	// Pressure display range 0-4 bar, temperature display range 0-120 �C, with 3 adjustable plastic segments for the marking of the desired green pressure bandwith. Rear connection.
	}
}

new:CDB_Product(ACCPM_DH15) -> VSSLACCESSOR_TAB
{Inherited(ACCPM_H)
	{
		CDB_HydroThing::Pmax		=	3.0e+6 \ 3.0e+6
		CDB_HydroThing::Tmax 		= 	100.0
		CDB_HydroThing::Tmin 		= 	-20.0
		CDB_Product::Reference 	= 	"500 1060"
		CDB_Product::Name 		= 	"DH 15"
		CDB_Product::Comment 	= 	"IDS_ACCPM_DH_DESC"	// Push button valve for shut-off of manometers
	}
}

////////////////////////////////////////////////////////////////
//
//		Table PLENOREFILLACC_TAB : Vessel accessories
//
////////////////////////////////////////////////////////////////

//****************************
// Pleno Refill - Cartridges
//****************************

// For PR 6000/12000 softening.
new:CDB_Product(PR_CART_SOFT) -> PLENOREFILLACC_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ 8e+5                                	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		45                                          // Tmax in �C
		4                                           // Tmin in �C
	}
	"813 3101"                                  // Reference to the TA Product
	"IDS_PR_CARTSOFT"                       	// Spare cartridge // Name of the product (can be an IDS)
	ACCTYP_PM                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PR                                   // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_PR_CARTSOFT_DESC"                      // For Pleno Refill softening module 6000/12000. // IDS of a more verbose description of the accessory		
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

// For PR 16000 softening.
new:CDB_Product(PR_CART_SOFT16000) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_SOFT)
	{
		CDB_Product::Reference = "813 3211"
		CDB_Product::Comment = "IDS_PR_CARTSOFT16000_DESC"		// Spare cartridge for Pleno Refill softening module 16000.
	}
}

// For PR 36000 softening.
new:CDB_Product(PR_CART_SOFT36000) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_SOFT)
	{
		CDB_Product::Reference = "813 3221"
		CDB_Product::Comment = "IDS_PR_CARTSOFT36000_DESC"		// Spare cartridge for Pleno Refill softening module 36000.
	}
}

// For PR 48000 softening.
new:CDB_Product(PR_CART_SOFT48000) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_SOFT)
	{
		CDB_Product::Reference = "813 3231"
		CDB_Product::Comment = "IDS_PR_CARTSOFT48000_DESC"		// Spare cartridge for Pleno Refill softening module 48000.
	}
}

// For PR 2000/4000 demineralisation
new:CDB_Product(PR_CART_DESAL) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_SOFT)
	{
		CDB_Product::Reference = "813 3102"
		CDB_Product::Name = "IDS_PR_CARTDESAL"					// Desalination cartridge
		CDB_Product::Comment = "IDS_PR_CARTDESAL_DESC"			// Cartridge for full desalination for Pleno Refill modules 2000/4000.
	}
}

// For PR 13500 demineralisation
new:CDB_Product(PR_CART_DESAL13500) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_DESAL)
	{
		CDB_Product::Reference = "813 3261"
		CDB_Product::Comment = "IDS_PR_CARTDESAL13500_DESC"		// Cartridge for full desalination for Pleno Refill modules 13500.
	}
}

// For PR 18000 demineralisation
new:CDB_Product(PR_CART_DESAL18000) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_DESAL)
	{
		CDB_Product::Reference = "813 3271"
		CDB_Product::Comment = "IDS_PR_CARTDESAL18000_DESC"		// Cartridge for full desalination for Pleno Refill modules 18000.
	}
}

new:CDB_Product(PR_CART_FILTER) -> PLENOREFILLACC_TAB
{Inherited(PR_CART_SOFT)
	{
		CDB_Product::Reference = "813 3111"
		CDB_Product::Name = "IDS_PR_CARTFILTER"					// Spare filter cartridge.
		CDB_Product::Comment = ""
	}
}

//****************************
// Pleno Refill - Other accessories
//****************************

new:CDB_Product(PR_KEY_FILTER) -> PLENOREFILLACC_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"813 3112"                                  // Reference to the TA Product
	"IDS_PR_KEYFILTER"                          // Key for filter // Name of the product (can be an IDS)
	ACCTYP_PM                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PR                                   // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_PR_KEYFILTER_DESC"                     // Key to change filter and cartridges. // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(PR_TOTALDH_MEAS) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "813 3120"
		CDB_Product::Name = "IDS_PR_TOTALDHMEAS"				// Total hardness measuring
		CDB_Product::Comment = "IDS_PR_TOTALDHMEAS_DESC"		// Total hardness measuring equipment for app. 100 measurements.
	}
}

new:CDB_Product(PR_ELECTWATERMETER) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "813 3121"
		CDB_Product::Name = "IDS_PR_ELECWATERMETER"				// Electronic water meter
		CDB_Product::Comment = "IDS_PR_ELECWATERMETER_DESC"		// Electronic water meter with countdown function for manual make up.
	}
}

new:CDB_Product(PR_ELECTWMBATT) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "813 3122"
		CDB_Product::Name = "IDS_PR_ELECWMBATT"					// Battery for WM
		CDB_Product::Comment = "IDS_PR_ELECWMBATT_DESC"			// Internal battery for the electronic water meter equipment.
	}
}

new:CDB_Product(PR_ELECTWMPOWER) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "813 3123"
		CDB_Product::Name = "IDS_PR_ELECWMPOWER"				// External power supply for WM
		CDB_Product::Comment = "IDS_PR_ELECWMPOWER_DESC"		// External power supply for the electronic water meter equipment.
	}
}

// HYS-1816: IPI October 2021
// Pleno refill update: New head. For Refill Demin 13500, Refill Demin 18000, Refill 16000, Refill 36000, Refill 48000

new:CDB_Product(PR_UPGRATE_KIT) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "30401070102"
		CDB_Product::Name = "IDS_PR_UPGRATE_KIT_NAME"			// Spare Head for Pleno Refill
		CDB_Product::Comment = "IDS_PR_UPGRATE_KIT_DESC"		// With upper sieve. To upgrade to the new head version if required.
	}
}

// For Refill Demin 13500, Refill Demin 18000

new:CDB_Product(PR_RESIN_BAG13500) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "30401070103"
		CDB_Product::Name = "IDS_PR_RESIN_BAG_NAME"				// Resin in bags for Refill Demin 13500/18000
		CDB_Product::Comment = "IDS_PR_RESIN_BAG_DESC"			// For the exchange of the resin when capacity limit is reached or after 2 years of use.
	}
}

new:CDB_Product(PR_RESIN_BAG18000) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "30401070104"
		CDB_Product::Name = "IDS_PR_RESIN_BAG_NAME"				// Resin in bags for Refill Demin 13500/18000
		CDB_Product::Comment = "IDS_PR_RESIN_BAG_DESC"			// For the exchange of the resin when capacity limit is reached or after 2 years of use.
	}
}

new:CDB_Product(PR_FUNNEL) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "30401070105"
		CDB_Product::Name = "IDS_PR_FUNNEL_NAME"				// Funnel for demineralisation module
		CDB_Product::Comment = "IDS_PR_FUNNEL_DESC"				// For the easy exchange and refill of the resin in the Refill Demin.
	}
}

new:CDB_Product(PR_WALLMOUNT_BCKT) -> PLENOREFILLACC_TAB
{Inherited(PR_KEY_FILTER)
	{
		CDB_Product::Reference = "813 3113"
		CDB_Product::Name = "IDS_WALLMOUNT_BCKT"				// Wall-mounting bracket.
		CDB_Product::Comment = ""
	}
}

new:CDB_Product(ACMULTI1) -> REGVACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"5850-00.325"                           	    // Reference to the TA Product
	"IDS_ACMULTI1"									// Name of the product (can be an IDS)									//Presetting and shut-off handwheel for TA-Multi
	ACCTYP_REGV	// TODO                         	// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_MULTI	// TODO                         // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACMULTI1_DESC"                         	// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACMULTIDPC1) -> REGVACCESSOR_TAB
{Inherited(ACMULTI1)
	{
		CDB_Product::Name = "IDS_ACMULTIDPC1"					// Dp controller for TA-Multi"
		CDB_Product::Comment = ""
		CDB_Product::Reference = "5850-00.333"
	}
}

new:CDB_Product(ACMULTI22) -> REGVACCESSOR_TAB
{Inherited(ACMULTI1)
	{
		CDB_Product::Name = "IDS_ACMULTI22"						// Measuring point for TA Multi with G3/4" connection
		CDB_Product::Comment = ""
		CDB_Product::Reference = "52197-304"
	}
}

new:CDB_Product(ACMULTI3) -> REGVACCESSOR_TAB
{Inherited(ACMULTI1)
	{
		CDB_Product::Name = "IDS_ACMULTI3"						// Draining kit for TA-Multi/Globo H"
		CDB_Product::Comment = ""
		CDB_Product::Reference = "0615-00.100"
	}
}

////////////////////////////////
// Insulation for female thread
///////////////////////////////
new:CDB_Product(ACMULTI4) -> REGVACCESSOR_TAB
{Inherited(ACMULTI1)
	{
		CDB_Product::Name = "IDS_ACMULTI4"						// Insulation for TA-Multi female thread DN15"
		CDB_Product::Comment = ""
		CDB_Product::Reference = "5850-02.553"
	}
}

new:CDB_Product(ACMULTI5) -> REGVACCESSOR_TAB
{Inherited(ACMULTI4)
	{
		CDB_Product::Reference = "5850-03.553"					// Insulation for TA-Multi female thread DN20"
	}
}

new:CDB_Product(ACMULTI6) -> REGVACCESSOR_TAB
{Inherited(ACMULTI4)
	{
		CDB_Product::Reference = "5850-04.553"					// Insulation for TA-Multi female thread DN25"
	}
}

new:CDB_Product(ACMULTI7) -> REGVACCESSOR_TAB
{Inherited(ACMULTI4)
	{
		CDB_Product::Reference = "5850-05.553"					// Insulation for TA-Multi female thread DN32"
	}
}

new:CDB_Product(ACMULTI8) -> REGVACCESSOR_TAB
{Inherited(ACMULTI4)
	{
		CDB_Product::Reference = "5850-06.553"					// Insulation for TA-Multi female thread DN40"
	}
}

new:CDB_Product(ACMULTI9) -> REGVACCESSOR_TAB
{Inherited(ACMULTI4)
	{
		CDB_Product::Reference = "5850-08.553"					// Insulation for TA-Multi female thread DN50"
	}
}

////////////////////////////////
// Connection, same as defined for compact
///////////////////////////////

////////////////////////////////
// Compression fitting for female thread
///////////////////////////////

new:CDB_Product(ACMULTI16) -> REGVACCESSOR_TAB
{Inherited(ACMULTI1)
	{
		CDB_Product::Reference = "2201-12.351"
		CDB_Product::Name = "IDS_ACMULTI_COMPFIT"			// Compression fitting
		CDB_Product::FamilyID = ACCFAM_COMPFITTING
		CDB_Product::Comment = "IDS_ACMULTI16_DESC" 	// d=12, for copper or precision steel pipe according to DIN EN 1057/10305-1/2
	}
}

new:CDB_Product(ACMULTI17) -> REGVACCESSOR_TAB
{Inherited(ACMULTI16)
	{
		CDB_Product::Reference = "2201-15.351"
		CDB_Product::Comment = "IDS_ACMULTI17_DESC"	// d=15, for copper or precision steel pipe according to DIN EN 1057/10305-1/2
	}
}

new:CDB_Product(ACMULTI18) -> REGVACCESSOR_TAB
{Inherited(ACMULTI16)
	{
		CDB_Product::Reference = "2201-16.351"
		CDB_Product::Comment = "IDS_ACMULTI18_DESC"	// d=16, for copper or precision steel pipe according to DIN EN 1057/10305-1/2
	}
}

new:CDB_Product(ACMULTI19) -> REGVACCESSOR_TAB
{Inherited(ACMULTI16)
	{
		CDB_Product::Reference = "2201-18.351"
		CDB_Product::Comment = "IDS_ACMULTI19_DESC"	// d=18, for copper or precision steel pipe according to DIN EN 1057/10305-1/2
	}
}

////////////////////////////////////////////////////////////////
//
//		Table REGVACCESSOR_TAB : Valve accessories
//
////////////////////////////////////////////////////////////////

new:CDB_Product(ACRV1) -> REGVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"52179-016"                                 // Reference to the TA Product
	"IDS_ACRV1"									// Extension for measuring point M14x1
	ACCTYP_REGV	// TODO                         // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_STAD	// TODO                         // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACRV1_DESC"                            // Length 71 mm. Suitable when insulation is used.
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACRV2) -> REGVACCESSOR_TAB
{Inherited(ACRV1)
	{
		CDB_Product::Reference = "52179-006"
		CDB_Product::Name = "IDS_ACRV2"	// Self-sealing measuring point extension
		CDB_Product::Comment = "IDS_ACRV2_DESC"
	}
}

new:CDB_Product(ACRV3) -> REGVACCESSOR_TAB
{Inherited(ACRV1)
	{
		CDB_Product::Reference = "52179-990"
		CDB_Product::Name = "IDS_ACRV3"	// Draining kit 1/2"
		CDB_Product::Comment = "IDS_ACRV3_DESC"
	}
}

new:CDB_Product(ACRV4) -> REGVACCESSOR_TAB
{Inherited(ACRV1)
	{
		CDB_Product::Reference = "52179-996"
		CDB_Product::Name = "IDS_ACRV4"	// Draining kit 3/4"
		CDB_Product::Comment = "IDS_ACRV4_DESC"
	}
}

new:CDB_Product(ACRV5) -> REGVACCESSOR_TAB
{Inherited(ACRV1)
	{
		CDB_Product::Reference = "52179-997"
		CDB_Product::Name = "IDS_ACRV5"	// Draining kit 3/4 NPS"
		CDB_Product::Comment = "IDS_ACRV4_DESC"
	}
}

////////////////////////////////////////////////////////////////
//
//		Table SVACCESSOR_TAB : Shut-off valve accessories
//
////////////////////////////////////////////////////////////////

//********************
// TA 400 accessories
//********************

new:CDB_Product(ACC_TA400_HBLUE) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"58409-001"									// Reference to the TA Product
	"IDS_ACC_TA400HBLUE"              			// Name of the product (can be an IDS)
	ACCTYP_SV                                 	// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TA400                           		// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	""                               			// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_TA400_HRED) -> SVACCESSOR_TAB
{ Inherited(ACC_TA400_HBLUE)
	{
		CDB_Product::Reference = "58409-002"
		CDB_Product::Name= "IDS_ACC_TA400HRED"
	}
}

new:CDB_Product(ACC_TA400_HBLACK) -> SVACCESSOR_TAB
{ Inherited(ACC_TA400_HBLUE)
	{
		CDB_Product::Reference = "58409-003"
		CDB_Product::Name= "IDS_ACC_TA400HBLACK"
	}
}

//********************
// TA 500 accessories
//********************

new:CDB_Product(ACC_TA500_REDUNITA) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                     // Tmax in �C
		DBL_MIN                                     // Tmin in �C
	}
	"58580-008"									// Reference to the TA Product
	"IDS_ACC_TA500_REDUNITA"                    // Name of the product (can be an IDS)
	ACCTYP_SV                                  	// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TA500                           		// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	""                               			// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_TA500_REDUNITB) -> SVACCESSOR_TAB
{ Inherited(ACC_TA500_REDUNITA)
	{
		CDB_Product::Reference = "58580-032"
		CDB_Product::Name= "IDS_ACC_TA500_REDUNITB"
	}
}

new:CDB_Product(ACC_TA500_SPEXTA) -> SVACCESSOR_TAB
{ Inherited(ACC_TA500_REDUNITA)
	{
		CDB_Product::Reference = "58590-010"
		CDB_Product::Name= "IDS_ACC_TA500_SPEXTA"
	}
}

new:CDB_Product(ACC_TA500_SPEXTB) -> SVACCESSOR_TAB
{ Inherited(ACC_TA500_SPEXTA)
	{
		CDB_Product::Reference = "58590-032"
		CDB_Product::Name= "IDS_ACC_TA500_SPEXTB"
	}
}

//*************************************************
// TA 900 accessories - Spare parts kits for 58940
//*************************************************

new:CDB_Product(ACC_TA900_SPKITW_10A) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"58910-010"									// Reference to the TA Product
	"IDS_ACC_TA900_SPKITW"                   	// Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TA900A                          		// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	""                               			// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_TA900_SPKITW_15A) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58910-015"
	}
}

new:CDB_Product(ACC_TA900_SPKITW_20A) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58910-020"
	}
}

new:CDB_Product(ACC_TA900_SPKITW_25A) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58910-025"
	}
}

new:CDB_Product(ACC_TA900_SPKITW_32A) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58910-032"
	}
}

new:CDB_Product(ACC_TA900_SPKITW_40A) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58910-040"
	}
}

new:CDB_Product(ACC_TA900_SPKITW_50A) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58910-050"
	}
}

//*************************************************
// TA 900 accessories - Spare parts kits for 58950
//*************************************************

new:CDB_Product(ACC_TA900_SPKITW_10B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58900-010"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

new:CDB_Product(ACC_TA900_SPKITW_15B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_15A)
	{
		CDB_Product::Reference = "58900-015"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

new:CDB_Product(ACC_TA900_SPKITW_20B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_20A)
	{
		CDB_Product::Reference = "58900-020"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

new:CDB_Product(ACC_TA900_SPKITW_25B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_25A)
	{
		CDB_Product::Reference = "58900-025"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

new:CDB_Product(ACC_TA900_SPKITW_32B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_32A)
	{
		CDB_Product::Reference = "58900-032"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

new:CDB_Product(ACC_TA900_SPKITW_40B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_40A)
	{
		CDB_Product::Reference = "58900-040"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

new:CDB_Product(ACC_TA900_SPKITW_50B) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_50A)
	{
		CDB_Product::Reference = "58900-050"
		CDB_Product::FamilyID = ACCFAM_TA900B
	}
}

//********************************************
// TA 900 accessories - Handle reduction unit
//********************************************

new:CDB_Product(ACC_TA900_REDUNITB) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58980-032"
		CDB_Product::Name = "IDS_ACC_TA900_REDUNITB"
		CDB_Product::FamilyID = ACCFAM_TA900C
	}
}

new:CDB_Product(ACC_TA900_REDUNITR) -> SVACCESSOR_TAB
{ Inherited(ACC_TA900_SPKITW_10A)
	{
		CDB_Product::Reference = "58981-032"
		CDB_Product::Name = "IDS_ACC_TA900_REDUNITR"
		CDB_Product::FamilyID = ACCFAM_TA900C
	}
}

//******************************
// Globo D accessories - Insulation
//******************************

new:CDB_Product(ACC_GLOBOD_INS15) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"0670-02.553"								// Reference to the TA Product
	"IDS_ACC_GLOBO_INSUL"                   	// Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_GLOBOD_INSUL                         // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_GLOBOD_INSUL"                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_GLOBOD_INS20) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOD_INS15)
	{
		CDB_Productr::Reference = "0670-03.553"
	}
}

new:CDB_Product(ACC_GLOBOD_INS25) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOD_INS15)
	{
		CDB_Productr::Reference = "0670-04.553"
	}
}

new:CDB_Product(ACC_GLOBOD_INS32) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOD_INS15)
	{
		CDB_Productr::Reference = "0670-05.553"
	}
}

new:CDB_Product(ACC_GLOBOD_INS40) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOD_INS15)
	{
		CDB_Productr::Reference = "0670-06.553"
	}
}

new:CDB_Product(ACC_GLOBOD_INS50) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOD_INS15)
	{
		CDB_Productr::Reference = "0670-08.553"
	}
}

//******************************
// Globo H accessories - Insulation
// For Globo H with female thread / press connection
//******************************

new:CDB_Product(ACC_GLOBOH_FTPINS1015) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"0600-02.553"								// Reference to the TA Product
	"IDS_ACC_GLOBO_INSUL"                   	// Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_GLOBOH_INSUL                         // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_GLOBOH_INSUL"                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_GLOBOH_FTPINS20) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_FTPINS1015)
	{
		CDB_Productr::Reference = "0600-03.553"
	}
}

// Globo 1" x 1"
new:CDB_Product(ACC_GLOBOH_FTPINS25) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_FTPINS1015)
	{
		CDB_Productr::Reference = "0600-04.553"
	}
}

// Globo 1 1/4" x 1 1/4"
new:CDB_Product(ACC_GLOBOH_FTPINS32) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_FTPINS1015)
	{
		CDB_Productr::Reference = "0600-05.553"
	}
}

// Globo 1 1/4" x 1"
new:CDB_Product(ACC_GLOBOH_FTPINS32B) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_FTPINS32)
	{
		CDB_Productr::Reference = "0620-45.553"
	}
}

new:CDB_Product(ACC_GLOBOH_FTPINS40) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_FTPINS1015)
	{
		CDB_Productr::Reference = "0600-06.553"
	}
}

new:CDB_Product(ACC_GLOBOH_FTPINS50) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_FTPINS1015)
	{
		CDB_Productr::Reference = "0600-08.553"
	}
}

//******************************
// Globo H accessories - Insulation
// For Globo H with male / female thread
//******************************

new:CDB_Product(ACC_GLOBOH_MFTINS15) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"0601-02.553"								// Reference to the TA Product
	"IDS_ACC_GLOBO_INSUL"                   	// Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_GLOBOH_INSUL                         // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]	
	"IDS_DESC_ACC_GLOBOH_INSUL"                 // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_GLOBOH_MFTINS20) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_MFTINS15)
	{
		CDB_Productr::Reference = "0601-03.553"
	}
}

new:CDB_Product(ACC_GLOBOH_MFTINS25) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_MFTINS15)
	{
		CDB_Productr::Reference = "0601-04.553"
	}
}

new:CDB_Product(ACC_GLOBOH_MFTINS32) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_MFTINS15)
	{
		CDB_Productr::Reference = "0601-05.553"
	}
}

//******************************
// Globo H accessories - Insulation
// For Globo H with drain-off
//******************************

new:CDB_Product(ACC_GLOBOH_DOFFINS1015) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"0615-02.553"								// Reference to the TA Product
	"IDS_ACC_GLOBO_INSUL"                   	// Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_GLOBOH_INSUL                         // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_GLOBOH_DOFFINSUL"             // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_GLOBOH_DOFFINS20) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_DOFFINS1015)
	{
		CDB_Productr::Reference = "0615-03.553"
	}
}

new:CDB_Product(ACC_GLOBOH_DOFFINS25) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_DOFFINS1015)
	{
		CDB_Productr::Reference = "0615-04.553"
	}
}

new:CDB_Product(ACC_GLOBOH_DOFFINS32) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_DOFFINS1015)
	{
		CDB_Productr::Reference = "0615-05.553"
	}
}

new:CDB_Product(ACC_GLOBOH_DOFFINS40) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_DOFFINS1015)
	{
		CDB_Productr::Reference = "0615-06.553"
	}
}

new:CDB_Product(ACC_GLOBOH_DOFFINS50) -> SVACCESSOR_TAB
{ Inherited(ACC_GLOBOH_DOFFINS1015)
	{
		CDB_Productr::Reference = "0615-08.553"
	}
}

//******************************
// Shut-off valve accessories - Thermometer
// To replace by changing the green closing cap.
//******************************

// Red - DN10-32
new:CDB_Product(ACCSV_THERMR1032) -> SVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ 4.0e+5                              	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120.0                                       // Tmax in �C
		0.0                                       	// Tmin in �C
	}
	"0600-00.380"                               // Reference to the TA Product
	"IDS_ACC_SV_THERM_RED"                      // Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_SV_MEAS                              // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_SV_THERM"                     // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

// Red - DN40-50
new:CDB_Product(ACCSV_THERMR4050) -> SVACCESSOR_TAB
{ Inherited(ACCSV_THERMR1032)
	{
		CDB_Productr::Reference = "0600-06.380"
	}
}

// Blue - DN10-32
new:CDB_Product(ACCSV_THERMB1032) -> SVACCESSOR_TAB
{ Inherited(ACCSV_THERMR1032)
	{
		CDB_Productr::Reference = "0600-01.380"
		CDB_Productr::Name="IDS_ACC_SV_THERM_BLUE"
	}
}

// Blue - DN40-50
new:CDB_Product(ACCSV_THERMB4050) -> SVACCESSOR_TAB
{ Inherited(ACCSV_THERMB1032)
	{
		CDB_Productr::Reference = "0600-07.380"
	}
}

//************************************
// Measuring points
//************************************

new:CDB_Product(ACC_MEASPT_44) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"52179-014"									// Reference to the TA Product
	"IDS_ACC_MEASPT_44"                   	    // Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_STS                                	// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_MEASPT_44"                    // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_MEASPT_103) -> SVACCESSOR_TAB
{ Inherited(ACC_MEASPT_44)
	{
		CDB_Product::Reference = "52179-015"
		CDB_Product::Name = "IDS_ACC_MEASPT_103"
		CDB_Product::Comment = "IDS_DESC_ACC_MEASPT_103"
	}
}

//*****************************
// STS accessories - Allen key
//*****************************

new:CDB_Product(ACC_STS_ALLENKEY) -> SVACCESSOR_TAB
{ Inherited(ACC_MEASPT_44)
	{
		CDB_Product::Reference = "58187-105"
		CDB_Product::Name = "IDS_ACC_STS_ALLENKEY"
		CDB_Product::Comment = ""
	}
}

//******************************
// STS accessories - Insulation
//******************************

new:CDB_Product(ACC_STS_INS1520) -> SVACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"52189-615"									// Reference to the TA Product
	"IDS_ACC_STS_INSUL"                   		// Name of the product (can be an IDS)
	ACCTYP_SV                                   // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_STS_INSUL                            // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_STS_INSUL"                  	// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_STS_INS25) -> SVACCESSOR_TAB
{ Inherited(ACC_STS_INS1520)
	{
		CDB_Product::Reference = "52189-625"
	}
}

new:CDB_Product(ACC_STS_INS32) -> SVACCESSOR_TAB
{ Inherited(ACC_STS_INS1520)
	{
		CDB_Product::Reference = "52189-632"
	}
}

new:CDB_Product(ACC_STS_INS40) -> SVACCESSOR_TAB
{ Inherited(ACC_STS_INS1520)
	{
		CDB_Product::Reference = "52189-640"
	}
}

new:CDB_Product(ACC_STS_INS50) -> SVACCESSOR_TAB
{ Inherited(ACC_STS_INS1520)
	{
		CDB_Product::Reference = "52189-650"
	}
}

//*******************************************
// STAP accessories - Insulation - HYS-1449
//*******************************************

new:CDB_Product(ACC_STAP_INS1525) -> DPCACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120                                     	// Tmax in �C
		-20                                     	// Tmin in �C
	}
	"52265-225"									// Reference to the TA Product
	"IDS_ACC_STAP_INSUL"                   		// Name of the product (can be an IDS)
	ACCTYP_DPC                                  // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_DPC_INSUL                            // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_STAP_INSUL"                  	// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_STAP_INS3250) -> DPCACCESSOR_TAB
{ Inherited(ACC_STAP_INS1525)
	{
		CDB_Product::Reference = "52265-250"
	}
}

////////////////////////////////////////////////////////////////
//
//		Table SEPACCESSOR_TAB : Separator accessories
//
////////////////////////////////////////////////////////////////

new:CDB_Product(ACZGI_65) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		110                                     // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"30305141000"                           // Reference to the TA Product
	"ZGI 65"                                // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACZGI_DESC"						// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZGI_80) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141100"
		CDB_Product::Name = "ZGI 80"
	}
}

new:CDB_Product(ACZGI_100) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141200"
		CDB_Product::Name = "ZGI 100"
	}
}

new:CDB_Product(ACZGI_125) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141300"
		CDB_Product::Name = "ZGI 125"
	}
}

new:CDB_Product(ACZGI_150) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141400"
		CDB_Product::Name = "ZGI 150"
	}
}

new:CDB_Product(ACZGI_200) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141500"
		CDB_Product::Name = "ZGI 200"
	}
}

new:CDB_Product(ACZGI_250) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141600"
		CDB_Product::Name = "ZGI 250"
	}
}

new:CDB_Product(ACZGI_300) -> SEPACCESSOR_TAB
{Inherited(ACZGI_65)
	{
		CDB_Product::Reference = "30305141700"
		CDB_Product::Name = "ZGI 300"
	}
}

new:CDB_Product(ACZGM_65100) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"303051-11000"                          // Reference to the TA Product
	"ZGM 65-100"                            // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACZGM_DESC"						// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZGM_125150) -> SEPACCESSOR_TAB
{
	{
		{
			0 										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"303051-11300"                          // Reference to the TA Product
	"ZGM 125-150"                           // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACZGM_DESC"                        // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZGM_200300) -> SEPACCESSOR_TAB
{
	{
		{
			0 										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"303051-11500"                          // Reference to the TA Product
	"ZGM 200-300"                           // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZGM_DESC"                        // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZHUZUV_2022) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"787 1222"                              // Reference to the TA Product
	"ZHU-ZUV 20-22"                         // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZHUZUV_DESC"                     // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	SER_ZHU                                 // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZHUZUV_25) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1225"
		CDB_Product::Name = "ZHU-ZUV 25"
	}
}

new:CDB_Product(ACZHUZUV_32) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1232"
		CDB_Product::Name = "ZHU-ZUV 32"
	}
}

new:CDB_Product(ACZHUZUV_40) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1240"
		CDB_Product::Name = "ZHU-ZUV 40"
	}
}

new:CDB_Product(ACZHUZUD_2022) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1422"
		CDB_Product::Name = "ZHU-ZUD/ZUM 20-22"
		CDB_Product::Comment = "IDS_ACZHUZUDZUM_DESC"	// Thermal insulation (EPP) for Zeparo ZUD/ZUM
	}
}

new:CDB_Product(ACZHUZUD_25) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUD_2022)
	{
		CDB_Product::Reference = "787 1425"
		CDB_Product::Name = "ZHU-ZUD/ZUM 25"
	}
}

new:CDB_Product(ACZHUZUD_32) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUD_2022)
	{
		CDB_Product::Reference = "787 1432"
		CDB_Product::Name = "ZHU-ZUD/ZUM 32"
	}
}

new:CDB_Product(ACZHUZUD_40) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUD_2022)
	{
		CDB_Product::Reference = "787 1440"
		CDB_Product::Name = "ZHU-ZUD/ZUM 40"
	}
}

new:CDB_Product(ACZHUZUK_2022) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1322"
		CDB_Product::Name = "ZHU-ZUK/ZUKM 20-22"
		CDB_Product::Comment = "IDS_ACZHUZUKZUKM_DESC"	// Thermal insulation (EPP) for Zeparo ZUK/ZUKM
	}
}

new:CDB_Product(ACZHUZUK_25) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUK_2022)
	{
		CDB_Product::Reference = "787 1325"
		CDB_Product::Name = "ZHU-ZUK/ZUKM 25"
	}
}

new:CDB_Product(ACZHUZUK_32) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUK_2022)
	{
		CDB_Product::Reference = "787 1332"
		CDB_Product::Name = "ZHU-ZUK/ZUKM 32"
	}
}

new:CDB_Product(ACZHUZUK_40) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUK_2022)
	{
		CDB_Product::Reference = "787 1340"
		CDB_Product::Name = "ZHU-ZUK/ZUKM 40"
	}
}

new:CDB_Product(ACZHUZUC_25) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1525"
		CDB_Product::Name = "ZHU-ZUC/ZUCM 25"
		CDB_Product::Comment = "IDS_ACZHUZUCZUCM_DESC"	// Thermal insulation (EPP) for Zeparo ZUC/ZUCM
	}
}

new:CDB_Product(ACZHUZUC_32) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUC_25)
	{
		CDB_Product::Reference = "787 1532"
		CDB_Product::Name = "ZHU-ZUC/ZUCM 32"
	}
}

new:CDB_Product(ACZHUZUC_40) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUC_25)
	{
		CDB_Product::Reference = "787 1540"
		CDB_Product::Name = "ZHU-ZUC/ZUCM 40"
	}
}

new:CDB_Product(ACZHUZUT) -> SEPACCESSOR_TAB
{Inherited(ACZHUZUV_2022)
	{
		CDB_Product::Reference = "787 1125"
		CDB_Product::Name = "ZHU-ZUT 15-25"
		CDB_Product::Comment = "IDS_ACZHUZUT_DESC"	// Thermal insulation (EPP) for Zeparo ZUT
	}
}

///////////////////////////////////
// *** ZIO thermal insulation (ZHI)
///////////////////////////////////

new:CDB_Product(ACZHIZIO_5065) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1										// isAvailable
			0										// isHidden
			1										// isFix
			0										// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0										// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0										// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"787 2065"                              // Reference to the TA Product
	"ZHI-ZIO 50-65"                         // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZIZE                             // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZHIZIO_DESC"                     // IDS of a more verbose description of the accessory		
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZHIZIO_80100) -> SEPACCESSOR_TAB
{Inherited(ACZHIZIO_5065)
	{
		CDB_Product::Reference = "787 2100"
		CDB_Product::Name = "ZHI-ZIO 80-100"
	}
}

new:CDB_Product(ACZHIZIO_125150) -> SEPACCESSOR_TAB
{Inherited(ACZHIZIO_5065)
	{
		CDB_Product::Reference = "787 2150"
		CDB_Product::Name = "ZHI-ZIO 125-150"
	}
}

new:CDB_Product(ACZPR) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                     	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		110.0                                   // Tmax in �C
		-10.0                                   // Tmin in �C
	}
	"789 6000"                              // Reference to the TA Product
	"ZPR"                                   // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZPR_DESC"                        // IDS of a more verbose description of the accessory		
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

// HYS-1997: IPI September 2022: Zeparo ZIMA - New EAN and Article No
new:CDB_Product(ACZIMA_50100A) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                     	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		110.0                                   // Tmax in �C
		-10.0                                   // Tmin in �C
	}
	"303051-10000"                          // Reference to the TA Product
	"ZIMA 50-100"                           // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZIZE                             // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZIMA_DESC"                       // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZIMA_125150) -> SEPACCESSOR_TAB
{Inherited(ACZIMA_50100A)
	{
		CDB_Product::Reference = "303051-10001"
		CDB_Product::Name = "ZIMA 125-150"
	}
}

new:CDB_Product(ACZIMA_200) -> SEPACCESSOR_TAB
{Inherited(ACZIMA_50100A)
	{
		CDB_Product::Reference = "303051-10002"
		CDB_Product::Name = "ZIMA 200"
	}
}

new:CDB_Product(ACZIMA_250300) -> SEPACCESSOR_TAB
{Inherited(ACZIMA_50100A)
	{
		CDB_Product::Reference = "303051-10003"
		CDB_Product::Name = "ZIMA 250-300"
	}
}

new:CDB_Product(ACZCHM_20_25) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                     	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120.0                                   // Tmax in �C
		-10.0                                   // Tmin in �C
	}
	"787 7425"                              // Reference to the TA Product
	"ZCHM 20-25"                            // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZCHM                             // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZCHM_DESC"                       // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACZCHM_32) -> SEPACCESSOR_TAB
{Inherited(ACZCHM_20_25)
	{
		CDB_Product::Reference = "787 7432"
		CDB_Product::Name = "ZCHM 32"
	}
}

new:CDB_Product(ACZCHM_40_50) -> SEPACCESSOR_TAB
{Inherited(ACZCHM_20_25)
	{
		CDB_Product::Reference = "787 7450"
		CDB_Product::Name = "ZCHM 40-50"
	}
}

// HYS-1815: IPI October 2021 - Zeparo ZU Magnet – Upgrade kit for ZUK, ZUC or ZUD
new:CDB_Product(ACZU_UPGR_KIT) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                         	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		DBL_MAX                                 // Tmax in �C
		DBL_MIN                                 // Tmin in �C
	}
	"304010-60800"                          // Reference to the TA Product
	"IDS_ACZU_UPGR_KIT_NAME"                // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_ZU                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACZU_UPGR_KIT_DESC"				// IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

//////////////////////////////////////
// Replacement anode for Ferro-cleaner
//////////////////////////////////////

new:CDB_Product(ACFC_80) -> SEPACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.6e+6                     	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120.0                                   // Tmax in �C
		-10.0                                   // Tmin in �C
	}
	"792 2001"                              // Reference to the TA Product
	"IDS_NAME_ACFERCL_80"                   // Name of the product (can be an IDS)
	ACCTYP_SEP                              // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_FCREP                            // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACFERCL_80_DESC"                   // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACFC_150) -> SEPACCESSOR_TAB
{Inherited(ACFC_80)
	{
		CDB_Product::Reference = "792 2003"
		CDB_Product::Name = "IDS_NAME_ACFERCL_150"
		CDB_Product::Comment = "IDS_ACFERCL_150_DESC"
	}
}

new:CDB_Product(ACFC_273_606) -> SEPACCESSOR_TAB
{Inherited(ACFC_150)
	{
		CDB_Product::Reference = "789 0919"
		CDB_Product::Name = "IDS_NAME_ACFERCL_273_606"
		CDB_Product::Comment = "IDS_ACFERCL_273_606_DESC"
	}
}

////////////////////////////////////////////////////////////////
// TA-Modulator stem heater.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACSTEMHEATER_40_50B) -> VALVEACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		50                                     		// Tmax in �C
		-10                                     	// Tmin in �C
	}
	"322042-80802"                             	// Reference to the TA Product
	"IDS_ACSTEMHEATER_TAMOD4050B_NAME"			// Name of the product (can be an IDS)
	ACCTYP_VALVE                                // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_STEMH								// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACSTEMHEATER_DESC"                     // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACSTEMHEATER_M65125) -> VALVEACCESSOR_TAB
{ Inherited(ACSTEMHEATER_40_50B)
	{
		CDB_Product::Reference = "322042-80010"
		CDB_Product::Name= "IDS_ACSTEMHEATER_TAMOD65125_DESC"
	}
}


////////////////////////////////////////////////////////////////
// TA-Fusion stem heater.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACSTEMHEATER_32_50) -> VALVEACCESSOR_TAB
{ Inherited(ACSTEMHEATER_40_50B)
	{
		CDB_Product::Reference = "322042-80901"
		CDB_Product::Name= "IDS_ACSTEMHEATER_TAFUS3250_DESC"
	}
}

new:CDB_Product(ACSTEMHEATER_65_150) -> VALVEACCESSOR_TAB
{ Inherited(ACSTEMHEATER_40_50B)
	{
		CDB_Product::Reference = "322042-81400"
		CDB_Product::Name= "IDS_ACSTEMHEATER_TAFUS65150_DESC"
	}
}

////////////////////////////////////////////////////////////////
// KTM 512 stem heater LF, NF and HF.
////////////////////////////////////////////////////////////////

new:CDB_Product(ACSTEMHEATER_15_50) -> VALVEACCESSOR_TAB
{ Inherited(ACSTEMHEATER_40_50B)
	{
		CDB_Product::Reference = "322042-80900"
		CDB_Product::Name= "IDS_ACSTEMHEATER_KTM512_1550_DESC"
	}
}

new:CDB_Product(ACSTEMHEATER_65_125) -> VALVEACCESSOR_TAB
{ Inherited(ACSTEMHEATER_40_50B)
	{
		CDB_Product::Reference = "322042-81401"
		CDB_Product::Name= "IDS_ACSTEMHEATER_KTM512_65125_DESC"
	}
}

////////////////////////////////////////////////////////////////
// TA-Matic accessories
////////////////////////////////////////////////////////////////

new:CDB_Product(ACTAMATIC_COUPL20) -> TAPCTRLACC_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90                                     		// Tmax in �C
		0	                                     	// Tmin in �C
	}
	"359010-10568"                             	// Reference to the TA Product
	"IDS_ACTAMATIC_FEMALECOUPLING"      		// Name of the product (can be an IDS)
	ACCTYP_TAPWATCTRL                           // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TAPWATCTRL							// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACTAMATIC_FEMALECOUPLING_DESC"   		// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACTAMATIC_COUPL25) -> VALVEACCESSOR_TAB
{ Inherited(ACTAMATIC_COUPL20)
	{
		CDB_Product::Reference = "359010-10606"
	}
}

new:CDB_Product(ACTAMATIC_COUPL32) -> VALVEACCESSOR_TAB
{ Inherited(ACTAMATIC_COUPL20)
	{
		CDB_Product::Reference = "359010-10722"
	}
}

new:CDB_Product(ACTAMATIC_COUPL40) -> VALVEACCESSOR_TAB
{ Inherited(ACTAMATIC_COUPL20)
	{
		CDB_Product::Reference = "359010-10803"
	}
}

new:CDB_Product(ACTAMATIC_COUPL50) -> VALVEACCESSOR_TAB
{ Inherited(ACTAMATIC_COUPL20)
	{
		CDB_Product::Reference = "359010-10902"
	}
}

new:CDB_Product(ACTAMATIC_CAP65) -> TAPCTRLACC_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90                                     		// Tmax in �C
		0	                                     	// Tmin in �C
	}
	"83 255-600"                             	// Reference to the TA Product
	"IDS_ACTAMATIC_CAP"      					// Name of the product (can be an IDS)
	ACCTYP_TAPWATCTRL                           // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TAPWATCTRL							// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_ACTAMATIC_CAP_DESC"   					// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACTAMATIC_CAP80) -> TAPCTRLACC_TAB
{ Inherited(ACTAMATIC_CAP65)
	{
		CDB_Product::Reference = "83 256-400"
	}
}

////////////////////////////////////////////////////////////////
// TA-Therm accessories
////////////////////////////////////////////////////////////////

new:CDB_Product(AC_TATHERM_THERM) -> TAPCTRLACC_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90                                     		// Tmax in �C
		0	                                     	// Tmin in �C
	}
	"50 205-002"                             	// Reference to the TA Product
	"IDS_ACTAHERM_THERMOMETER"      			// Name of the product (can be an IDS)
	ACCTYP_TAPWATCTRL                           // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TAPWATCTRL							// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	""   										// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

////////////////////////////////////////////////////////////////
// Radiator Connections
////////////////////////////////////////////////////////////////

new:CDB_Product(AC_RADCON_STRAIGHT10) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120.0                                     	// Tmax in �C
		-10.0	                                    // Tmin in �C
	}
	"50 701-510"                             	// Reference to the TA Product
	"IDS_RADCON_M22_10"      					// Name of the product (can be an IDS)
	ACCTYP_TRV                           		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TRV									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_RADCON_STRAIGHT"   				// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(AC_RADCON_STRAIGHT15) -> TRVACCESSOR_TAB
{ Inherited(AC_RADCON_STRAIGHT10)
	{
		CDB_Product::Reference = "50 701-515"
		CDB_Product::Name= "IDS_RADCON_M26_15"
	}
}

new:CDB_Product(AC_RADCON_STRAIGHT15B) -> TRVACCESSOR_TAB
{ Inherited(AC_RADCON_STRAIGHT10)
	{
		CDB_Product::Reference = "50 701-516"
		CDB_Product::Name= "IDS_RADCON_M22_15"
	}
}

new:CDB_Product(AC_RADCON_STRAIGHT20) -> TRVACCESSOR_TAB
{ Inherited(AC_RADCON_STRAIGHT10)
	{
		CDB_Product::Reference = "50 701-520"
		CDB_Product::Name= "IDS_RADCON_M34_20"
	}
}

////////////////////////////////////////////////////////////////
// Thermostatic heads / Radiator valves accessories
////////////////////////////////////////////////////////////////

new:CDB_Product(ACCHEAD_THEFTPROTEC) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		50                                     		// Tmax in �C
		-10.0	                                    // Tmin in �C
	}
	"6020-01.347"                             	// Reference to the TA Product
	"IDS_THEFTPROTEC"      						// Name of the product (can be an IDS)
	ACCTYP_ACT                           		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_HEAD									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_THEFTPROTEC"   					// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

// HYS-2022: Angle connection
new:CDB_Product(ACCHEAD_ANGLECONN) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		50                                     		// Tmax in �C
		-10.0	                                    // Tmin in �C
	}
	"7300-00.700"                             	// Reference to the TA Product
	"IDS_NAME_ACCHEAD_ANGLECONN"      			// Name of the product (can be an IDS)
	ACCTYP_ACT                           		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_HEAD									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	""   										// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACCHEAD_HALOBADAP) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		50                                     		// Tmax in �C
		-10.0	                                    // Tmin in �C
	}
	"2201-10.700"                             	// Reference to the TA Product
	"IDS_NAME_ACCHEAD_HALOBADAP"      			// Name of the product (can be an IDS)
	ACCTYP_ACT                           		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_HEAD									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACCHEAD_HALOBADAP"   				// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACCHEAD_UNIVKEY) -> ACTACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX                             	// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		50                                     		// Tmax in �C
		-10.0	                                    // Tmin in �C
	}
	"0530-01.433"                             	// Reference to the TA Product
	"IDS_NAME_ACCHEAD_UNIVKEY"      			// Name of the product (can be an IDS)
	ACCTYP_ACT                           		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_HEAD									// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACCHEAD_UNIVKEY"   				// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                  		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}


//////////////////////////////////////
// Tecbox accessories
//////////////////////////////////////

//////////////////////////////////////
// Paz PMIN TI
//////////////////////////////////////

new:CDB_Product(ACCPAZ_PMINTI0_6) -> TECBOXACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.0 \ 6.0e+5                     		// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		70.0                                    // Tmax in �C
		0.0                                     // Tmin in �C
	}
	"825 1520"                              // Reference to the TA Product
	"Paz PMIN 0-6 TI"                       // Name of the product (can be an IDS)
	ACCTYP_PM                               // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PMPAZ                            // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACCPM_PAZ_DESC"                   	// IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACCPAZ_PMINTI6_16) -> TECBOXACCESSOR_TAB
{ Inherited(ACCPAZ_PMINTI0_6)
	{
		CDB_HydroThing::Pmax = 6.0e5 \ 1.6e+6
		CDB_Product::Reference = "825 1522"
		CDB_Product::Name= "Paz PMIN 6-16 TI"
	}
}

new:CDB_Product(ACCPAZ_PMINTI0_25) -> TECBOXACCESSOR_TAB
{ Inherited(ACCPAZ_PMINTI0_6)
	{
		CDB_HydroThing::Pmax = 0.0 \ 2.5e+6
		CDB_Product::Reference = "825 1524"
		CDB_Product::Name= "Paz PMIN 0-25 TI"
	}
}

//////////////////////////////////////
// ComCube DCA TI
//////////////////////////////////////

new:CDB_Product(ACCCOMCUBE_DCATI) -> TECBOXACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.0 \ 2.5e+6                     		// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		40.0                                    // Tmax in �C
		0.0                                     // Tmin in �C
	}
	"814 1015"                              // Reference to the TA Product
	"ComCube DCA TI"                        // Name of the product (can be an IDS)
	ACCTYP_PM                               // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PMCOMCUBE                        // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACCPM_COMCUBE_DCATI_DESC"          // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACCCOMCUBE_DMLC) -> TECBOXACCESSOR_TAB
{ Inherited(ACCCOMCUBE_DCATI)
	{
		CDB_Product::Reference = "301032 30018"
		CDB_Product::Name = "ComCube DML Connect"
		CDB_Product::Comment = "IDS_ACCPM_COMCUBE_DMLCTI_DESC"
	}
}

// HYS-1879
//////////////////////////////////////
// BrainCube connect T.2 H-Bridge M1_M2
//////////////////////////////////////
// HYS-1927: Only displayed in direct selection
new:CDB_Product(ACCBRCUBECONNECT_T2) -> TECBOXACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			101                                     // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.0 \ 2.5e+6                     		// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		150                                     // Tmax in �C
		-20                                     // Tmin in �C
	}
	"428 1408"                              // Reference to the TA Product
	"BrainCube connect T.2"                 // Name of the product (can be an IDS)
	ACCTYP_PM                               // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_PMBRAINCUBE                      // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACCPM_BRCUBECONNECT_T2_DESC"       // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

//////////////////////////////////////
// Sound-absorbing wall bracket for Vento VS/VF Connect
//////////////////////////////////////

new:CDB_Product(ACCVSVF_WALLBRCKT) -> TECBOXACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.0 \ 2.5e+6                     		// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		150                                     // Tmax in �C
		-20                                     // Tmin in �C
	}
	"301032-30021"                          // Reference to the TA Product
	"IDS_ACCPM_NAME_WBVSF"      			// Name of the product (can be an IDS)
	ACCTYP_PM                               // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_WB                               // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID									// Identifier of the version of the product
	1										// Level of priority for selection [1,10]
	"IDS_ACCPM_WBVSF_DESC"                  // IDS of a more verbose description of the accessory
	"NO_ID"									// Product image ID		
	NO_ID                           		// Identifier of the accessory group
	#ePartOfaSetNo                  		// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                             		// Price of the product
	#eAccessory                             // #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   // Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth
}

//////////////////////////////////////
// Floor heating manifold accessories
//////////////////////////////////////

// Extension kit
new:CDB_Product(ACCFHC_EXTKIT) -> FLOORHCTRLACC_TAB
{
	{
		{
			0												// isDeleted
			1                                       		// isAvailable
			0                                       		// isHidden
			1                                       		// isFix
			0                                       		// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       		// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               								// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 6.0e+5                    				// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   		// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		70.0                                    		// Tmax in �C
		2.0                                     		// Tmin in �C
	}
	"9339-10.800"                           		// Reference to the TA Product
	"IDS_FLOORHEATINGCONTROLACC_EXTENSIONKIT"		// Name of the product (can be an IDS)
	ACCTYP_FLOORHCTRL                       		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_FLOORHMANIFOLD                     		// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID											// Identifier of the version of the product
	1												// Level of priority for selection [1,10]
	""                   							// IDS of a more verbose description of the accessory
	"NO_ID"											// Product image ID		
	NO_ID                           				// Identifier of the accessory group
	#ePartOfaSetNo                  				// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID											// Table ID where are sets if exist for the current product.
	0.0                             				// Price of the product
	#eAccessory                             		// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       		// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   		// Identifier of the accessory type if #eBoth 
	NO_ID											// Identifier of the accessory family if #eBoth
}

// Connection kit 1 with Globo ball valves, DN 20
new:CDB_Product(ACCFHC_CONNKIT1) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-01.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT1"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT1_DESC"
	}
}

// Connection kit 2 with STAD balancing valve and Globo ball valve, DN 20
new:CDB_Product(ACCFHC_CONNKIT2) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-02.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT2"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT2_DESC"
	}
}

// Connection kit 3 with Zeparo Vent air separator in supply and Zeparo Dirt sludge separator in return, DN 20
new:CDB_Product(ACCFHC_CONNKIT3) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-03.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT3"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT3_DESC"
	}
}

// Connection kit 4 with Globo ball valve DN 20, including spacer for heat meter in return
new:CDB_Product(ACCFHC_CONNKIT4) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-04.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT4"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT4_DESC"
	}
}

// Connection kit 5, fixed value control station
new:CDB_Product(ACCFHC_CONNKIT5) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-05.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT5"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_CONNECTIONKIT5_DESC"
	}
}

// Manifold box (490x710 mm)
new:CDB_Product(ACCFHC_MANIFOLDBOX1) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-80.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX1"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX_DESC"
	}
}

// Manifold box (575x710 mm)
new:CDB_Product(ACCFHC_MANIFOLDBOX2) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_MANIFOLDBOX1)
	{
		CDB_Product::Reference = "9339-81.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX2"
	}
}

// Manifold box (725x710 mm)
new:CDB_Product(ACCFHC_MANIFOLDBOX3) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_MANIFOLDBOX1)
	{
		CDB_Product::Reference = "9339-82.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX3"
	}
}

// Manifold box (875x710 mm)
new:CDB_Product(ACCFHC_MANIFOLDBOX4) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_MANIFOLDBOX1)
	{
		CDB_Product::Reference = "9339-83.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX4"
	}
}

// Manifold box (1025x710 mm)
new:CDB_Product(ACCFHC_MANIFOLDBOX5) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_MANIFOLDBOX1)
	{
		CDB_Product::Reference = "9339-84.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX5"
	}
}

// Manifold box (1175x710 mm)
new:CDB_Product(ACCFHC_MANIFOLDBOX6) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_MANIFOLDBOX1)
	{
		CDB_Product::Reference = "9339-85.800"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_MANIFOLDBOX6"
	}
}

// S-connection
new:CDB_Product(ACCFHC_SCONNECT) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9339-00.362"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_SCONNECTION"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_SCONNECTION_DESC"
	}
}

// Replacement filling, draining, flushing and venting device 1/2".
new:CDB_Product(ACCFHC_FILLDRAINFLUSHV) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9321-00.102"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_FILLDRAINFLUSHVENT"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_FILLDRAINFLUSHVENT_DESC"
	}
}

// Dynacon Eclipse flow indicator
new:CDB_Product(ACCFHC_FLOWINDICATOR) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9340-00.101"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_FLOWINDICATOR"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_FLOWINDICATORDYNACONECLIPSE_DESC"
	}
}

// Dynalux flow indicator
new:CDB_Product(ACCFHC_FLOWINDDYNALUX) -> TRVACCESSOR_TAB
{ Inherited(ACCFHC_EXTKIT)
	{
		CDB_Product::Reference = "9321-00.101"
		CDB_Product::Name= "IDS_FLOORHEATINGCONTROLACC_FLOWINDICATOR"
		CDB_Product::Comment= "IDS_FLOORHEATINGCONTROLACC_FLOWINDICATORDYNALUX_DESC"
	}
}

// Replacement thermostatic insert for Dynacon 150.
new:CDB_Product(DYN150_ECLINSERT) -> TRVACCESSOR_TAB
{
	{
		{
			0													// isDeleted
			1                                                   // isAvailable
			0                                                   // isHidden
			1                                                   // isFix
			0                                                   // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                                   // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               									// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                 					// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                               // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		120.0                                               // Tmax in �C
		2                                               	// Tmin in �C
	}
	"9346-00.300"                       				// Reference to the TA Product
	"IDS_FLOORHEATINGCONTROL_ECLIPSEINSERT"             // Name of the product
	ACCTYP_FLOORHCTRL                          			// Identifier of the valve type
	ACCFAM_FLOORHMANIFOLD                              	// Identifier of the family of the product
	NO_ID                                       		// Identifier of the version of the product
	1                                                   // Level of priority for selection [1,10]
	"IDS_FLOORHEATINGCONTROL_DYN150ECLIPSEINSERT_DESC"  // Product comment
	"NO_ID"                                            	// Product image ID
	NO_ID                                               // Identifier of the accessory group
	#ePartOfaSetNo                                      // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID												// Table ID where are sets if exist for the current product.
	0.0                                                 // Price of the product
	#eAccessory                       					// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           					// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               					// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           					// Identifier of the accessory type if #eBoth 
	NO_ID												// Identifier of the accessory family if #eBoth	
}

// Replacement thermostatic insert for Dynacon Eclipse.
new:CDB_Product(DYNECLIPSE_ECLINSERT) -> TRVACCESSOR_TAB
{ Inherited(DYN150_ECLINSERT)
	{
		CDB_Product::Reference	=	"9340-00.300"
		CDB_Product::Comment	= 	"IDS_FLOORHEATINGCONTROL_DYNECLIPSEECLIPSEINSERT_DESC"
	}
}

// Replacement thermostatic insert for Dynalux.
new:CDB_Product(DYNALUX_INSERT) -> TRVACCESSOR_TAB
{ Inherited(DYN150_ECLINSERT)
	{
		CDB_Product::Reference	=	"9332-00.300"
		CDB_Product::Comment	= 	"IDS_FLOORHEATINGCONTROL_DYNALUXINSERT_DESC"
	}
}

//////////////////////////////////////
// Handwheel/Head for thermostatic valve
//////////////////////////////////////

// Handwheel with direct connection, white RAL 9016.
new:CDB_Product(ACCTC_HANDWHEEL_DIRECTW) -> TRVACCESSOR_TAB
{
	{
		{
			0													// isDeleted
			1                                       			// isAvailable
			0                                       			// isHidden
			1                                       			// isFix
			0                                       			// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       			// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               									// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 6.0e+5                    					// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   			// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		100.0                                    			// Tmax in �C
		0.0                                     			// Tmin in �C
	}
	"1303-01.325"                           			// Reference to the TA Product
	"IDS_TCACC_HANDWHEEL"								// Name of the product (can be an IDS)
	ACCTYP_TCHANDWHEEL                       			// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_TCHANDWHEEL                       			// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID												// Identifier of the version of the product
	1													// Level of priority for selection [1,10]
	"IDS_TCACC_HANDWHEEL_DIRECTCONNECTION_WHITE_DESC"   // IDS of a more verbose description of the accessory
	"NO_ID"												// Product image ID		
	NO_ID                           					// Identifier of the accessory group
	#ePartOfaSetNo                  					// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID												// Table ID where are sets if exist for the current product.
	0.0                             					// Price of the product
	#eAccessory                             			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   			// Identifier of the accessory type if #eBoth 
	NO_ID												// Identifier of the accessory family if #eBoth
}

// Handwheel with direct connection, chrome-plated.
new:CDB_Product(ACCTC_HANDWHEEL_DIRECTC) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_HANDWHEEL_DIRECTW)
	{
		CDB_Product::Reference = "1303-10.325"
		CDB_Product::Comment= "IDS_TCACC_HANDWHEEL_DIRECTCONNECTION_CHROME_DESC"
	}
}

// Handwheel with locking ring, white RAL 9016.
new:CDB_Product(ACCTC_HANDWHEEL_LOCKRW) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_HANDWHEEL_DIRECTW)
	{
		CDB_Product::Reference = "2001-00.325"
		CDB_Product::Comment= "IDS_TCACC_HANDWHEEL_LOCKINGRING_WHITE_DESC"
	}
}

//////////////////////////////////////
// Spindle extension for K thermostatic head with Multibox Eclipse K
// and Multibox Eclipse K-RTL
//////////////////////////////////////

// Brass nickel-plated, 20 mm.
new:CDB_Product(ACCTC_SPEXT_BRASS20) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                    			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    	// Tmax in �C
		2.0                                     	// Tmin in �C
	}
	"2201-20.700"                           	// Reference to the TA Product
	"IDS_TCACC_SPINDLEEXTENSION_20"				// Name of the product (can be an IDS)
	ACCTYP_FLOORHCTRL                     		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_FLOORHCONTROLLER                		// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_TCACC_SPINDLEEXTENSIONKBRASS_DESC"  	// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                             	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   	// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       	// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

// Brass nickel-plated, 30 mm.
new:CDB_Product(ACCTC_SPEXT_BRASS30) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_SPEXT_BRASS20)
	{
		CDB_Product::Reference = "2201-30.700"
		CDB_Product::Name = "IDS_TCACC_SPINDLEEXTENSION_30"
	}
}

// Plastic black, 15 mm.
new:CDB_Product(ACCTC_SPEXT_PLASTIC15) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_SPEXT_BRASS20)
	{
		CDB_Product::Reference = "2001-15.700"
		CDB_Product::Name = "IDS_TCACC_SPINDLEEXTENSION_15"
		CDB_Product::Comment = "IDS_TCACC_SPINDLEEXTENSIONKPLASTIC_DESC"
	}
}

/////////////////////////////////////////////////////////////////////////
// Spindle extension for RTL thermostatic head with Multibox Eclipse RTL.
/////////////////////////////////////////////////////////////////////////

// Brass nickel-plated, 20 mm.
// Used for Multibox, Multibox Eclipse, Multibox Mini and RTL.
new:CDB_Product(ACCTC_SPEXT_RTL20) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                    			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    	// Tmax in �C
		2.0                                     	// Tmin in �C
	}
	"9153-20.700"                           	// Reference to the TA Product
	"IDS_TCACC_SPINDLEEXTENSION_20"				// Name of the product (can be an IDS)
	ACCTYP_FLOORHCTRL                      		// Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_FLOORHCONTROLLER                    	// Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_TCACC_SPINDLEEXTENSIONRTLBRASS_DESC"  	// IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                           			// Identifier of the accessory group
	#ePartOfaSetNo                  			// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                             			// Price of the product
	#eAccessory                             	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                   	// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                       	// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                   	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

///////////////////////////////////////////////////////////////////////////
// RTL insert for converting Multibox K/AFC K into Multibox K-RTL/AFC K-RTL
///////////////////////////////////////////////////////////////////////////
new:CDB_Product(ACCTC_MBOXECL_RTLINSERT) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    	// Tmax in �C
		2                                       	// Tmin in �C
	}
	"9303-00.300"                       		// Reference to the TA Product
	"IDS_TCACC_MULTIBOXECLIPSE_RTLINSERT"  		// Name of the product
	ACCTYP_FLOORHCTRL                      		// Identifier of the valve type
	ACCFAM_FLOORHCONTROLLER                		// Identifier of the family of the product
	NO_ID                                  		// Identifier of the version of the product
	1                                      		// Level of priority for selection [1,10]
	"IDS_TCACC_MULTIBOXECLIPSE_RTLINSERT_DESC"  // Product comment
	"NO_ID"                                 	// Product image ID
	NO_ID                                   	// Identifier of the accessory group
	#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                     	// Price of the product
	#eAccessory                       			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           			// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

// RTL replacement insert.
new:CDB_Product(ACCTC_INSERT_RTL) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "1305-02.300"
		CDB_Product::Comment = "IDS_TCACC_RTLINSERT_DESC"
	}
}

// V-exact II replacement insert.
// Used for Mikrotherm, Mikrotherm-f, Multibox, Multibox Mini and RTL.
new:CDB_Product(ACCTC_INSERT_VEXACTII) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "3700-02.300"
		CDB_Product::Name = IDS_TCACC_VEXACT2INSERT
		CDB_Product::Comment = "IDS_TCACC_VEXACT2INSERT_DESC"
	}
}

// V-exakt replacement insert.
// Used for Mikrotherm and RTL.
new:CDB_Product(ACCTC_INSERT_VEXAKT) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "3502-24.300"
		CDB_Product::Name = IDS_TCACC_VEXAKTINSERT
		CDB_Product::Comment = "IDS_TCACC_VEXAKTINSERT_DESC"
	}
}

// Thermostatic insert.
// Used for control valve floors, E-Z valve, FLOWRETT, TWORETT, Mikrotherm and
// with thermostatic radiator valves without presetting and particularyl low resistance.
new:CDB_Product(ACCTC_INSERT_THERMOA) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "1302-02.300"
		CDB_Product::Name = IDS_TCACC_THERMOSTATICINSERT
		CDB_Product::Comment = "IDS_TCACC_THERMOSTATICINSERT_DESC"
	}
}

// Special insert for Multibox RTL up to 08.2013.
new:CDB_Product(ACCTC_MBOX_OLDINSERT) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "9304-03.300"
		CDB_Product::Name = IDS_TCACC_MULTIBOX_OLDINSERT
		CDB_Product::Comment = "IDS_TCACC_MULTIBOX_OLDINSERT_DESC"
	}
}

// RTL Thermostatic head for reverse-flow temperature control.
// Used for Multi-v, Multibox Eclipse and RTL.
new:CDB_Product(ACCTC_HANDWHEEL_RTL) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "6510-00.500"
		CDB_Product::Name = "IDS_TCACC_RTLHEAD"
		CDB_Product::Comment= "IDS_TCACC_RTLHEAD_DESC"
	}
}

// RTL Thermostatic head specially for convertion.
// Used for Multibox, Multibox Eclipse and RTL.
new:CDB_Product(ACCTC_HANDWHEEL_RTLCONV) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "6500-00.500"
		CDB_Product::Name = "IDS_TCACC_RTLHEAD"
		CDB_Product::Comment= "IDS_TCACC_RTLHEADCONV_DESC"
	}
}

// Replacement heat transfer piece. For RTL thermostatic head 6510-00.500.
new:CDB_Product(ACCTC_RTLHEATPIECE) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_MBOXECL_RTLINSERT)
	{
		CDB_Product::Reference = "6510-00.433"
		CDB_Product::Name = "IDS_TCACC_RTL_HEATTRANSFERPIECE"
		CDB_Product::Comment= "IDS_TCACC_RTL_HEATTRANSFERPIECE_DESC"
	}
}

///////////////////////////////////////////////////////////////////////////
// Connecting to other brands.
// Adapter for mounting EMOtec or EMO T on valve bodies or heating circuit
// manifolds from other manufacturers.
// Threads M30x1.5 according to factory standard.
///////////////////////////////////////////////////////////////////////////

// Danfoss RA.
new:CDB_Product(ACCTC_EMOADAPT_DANRA) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    	// Tmax in �C
		2                                       	// Tmin in �C
	}
	"9702-27.700"                       		// Reference to the TA Product
	"IDS_EMOTECEMOT_ADAPTER"  					// Name of the product
	ACCTYP_FLOORHCTRL                      		// Identifier of the valve type
	ACCFAM_FLOORHCONTROLLER                		// Identifier of the family of the product
	NO_ID                                  		// Identifier of the version of the product
	1                                      		// Level of priority for selection [1,10]
	"Danfoss RA"  								// Product comment
	"NO_ID"                                 	// Product image ID
	NO_ID                                   	// Identifier of the accessory group
	#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                     	// Price of the product
	#eAccessory                       			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           			// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

// Danfoss RAV.
new:CDB_Product(ACCTC_EMOADAPT_DANRAV) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9800-24.700"
		CDB_Product::Comment= "Danfoss RAV"
	}
}

// Danfoss RAVL.
new:CDB_Product(ACCTC_EMOADAPT_DANRAVL) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-24.700"
		CDB_Product::Comment= "Danfoss RAVL"
	}
}

// Vaillant.
new:CDB_Product(ACCTC_EMOADAPT_VAILLANT) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-27.700"
		CDB_Product::Comment= "Vaillant"
	}
}

// TA (M28x1,5).
new:CDB_Product(ACCTC_EMOADAPT_TA) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9701-28.700"
		CDB_Product::Comment= "TA (M28x1,5)"
	}
}

// Herz.
new:CDB_Product(ACCTC_EMOADAPT_HERZ) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-30.700"
		CDB_Product::Comment= "Herz"
	}
}

// Markaryd.
new:CDB_Product(ACCTC_EMOADAPT_MARK) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-41.700"
		CDB_Product::Comment= "Markaryd"
	}
}

// Comap.
new:CDB_Product(ACCTC_EMOADAPT_COMAP) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-55.700"
		CDB_Product::Comment= "Comap"
	}
}

// Oventrop (M30x1,0)
new:CDB_Product(ACCTC_EMOADAPT_OVENT) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-10.700"
		CDB_Product::Comment= "Oventrop (M30x1,0)"
	}
}

// Giacomini
new:CDB_Product(ACCTC_EMOADAPT_GIAC) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-33.700"
		CDB_Product::Comment= "Giacomini"
	}
}

// Ista
new:CDB_Product(ACCTC_EMOADAPT_ISTA) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-36.700"
		CDB_Product::Comment= "Ista"
	}
}

// Uponor (Velta) - Euro-/compact distributor or return valve 17.
new:CDB_Product(ACCTC_EMOADAPT_UPA) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9700-34.700"
		CDB_Product::Comment= "IDS_EMOTECEMOT_ADAPTER_UPONOR_DESCA"
	}
}

// Uponor (Velta) - Provario distributor.
new:CDB_Product(ACCTC_EMOADAPT_UPB) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_EMOADAPT_DANRA)
	{
		CDB_Product::Reference = "9701-34.700"
		CDB_Product::Comment= "IDS_EMOTECEMOT_ADAPTER_UPONOR_DESCB"
	}
}

///////////////////////////////////////////////////////////////////////////
// Distance plate for radiocontrol F.
// For installing the room thermostat onto UP boxes.
// White RAL 9010.
// 83 mm x 83 mm x 8 mm (W x H x D).
///////////////////////////////////////////////////////////////////////////

new:CDB_Product(ACCTC_RADIOCTRL_DISTP) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    	// Tmax in �C
		2                                       	// Tmin in �C
	}
	"1936-00.433"                       		// Reference to the TA Product
	"IDS_RADIOCONTROL_DISTANCEPLATE"  			// Name of the product
	ACCTYP_FLOORHCTRL                      		// Identifier of the valve type
	ACCFAM_FLOORHCONTROLLER                		// Identifier of the family of the product
	NO_ID                                  		// Identifier of the version of the product
	1                                      		// Level of priority for selection [1,10]
	"IDS_RADIOCONTROL_DISTANCEPLATE_DESC"  		// Product comment
	"NO_ID"                                 	// Product image ID
	NO_ID                                   	// Identifier of the accessory group
	#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                     	// Price of the product
	#eAccessory                       			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           			// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

///////////////////////////////////////////////////////////////////////////
// Frame and cover plate for Multibox
///////////////////////////////////////////////////////////////////////////
new:CDB_Product(ACCTC_MBOX_FRAMECOVER) -> TRVACCESSOR_TAB
{
	{
		{
			0										// isDeleted
			1                                       // isAvailable
			0                                       // isHidden
			1                                       // isFix
			0                                       // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               						// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                 		// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    // Tmax in �C
		2                                       // Tmin in �C
	}
	"9300-00.800"                       	// Reference to the TA Product
	"IDS_MULTIBOX_FRAMECOVER"     			// Name of the product
	ACCTYP_FLOORHCTRL                       // Identifier of the valve type
	ACCFAM_FLOORHCONTROLLER                 // Identifier of the family of the product
	NO_ID                                   // Identifier of the version of the product
	1                                       // Level of priority for selection [1,10]
	"IDS_TCACC_MULTIBOX_FRAMECOVER_DESC"  	// Product comment
	"NO_ID"                                 // Product image ID
	NO_ID                                   // Identifier of the accessory group
	#ePartOfaSetNo                          // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID									// Table ID where are sets if exist for the current product.
	0.0                                     // Price of the product
	#eAccessory                       		// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           		// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               		// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           		// Identifier of the accessory type if #eBoth 
	NO_ID									// Identifier of the accessory family if #eBoth	
}

///////////////////////////////////////////////////////////////////////////
// Thermostat
///////////////////////////////////////////////////////////////////////////

// Room thermostat - 230 V - Without temperature set-back
new:CDB_Product(ACCTC_ROOMTHERM230A) -> TRVACCESSOR_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 1.0e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		90.0                                    	// Tmax in �C
		2                                       	// Tmin in �C
	}
	"1936-00.500"                       		// Reference to the TA Product
	"IDS_TCACC_ROOMTHERMOSTAT_230V"  			// Name of the product
	ACCTYP_FLOORHCTRL                      		// Identifier of the valve type
	ACCFAM_FLOORHMANIFOLD                		// Identifier of the family of the product
	NO_ID                                  		// Identifier of the version of the product
	1                                      		// Level of priority for selection [1,10]
	"IDS_TCACC_ROOMTHERMOSTAT_DESCA"  			// Product comment
	"NO_ID"                                 	// Product image ID
	NO_ID                                   	// Identifier of the accessory group
	#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                     	// Price of the product
	#eAccessory                       			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           			// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

// Room thermostat - 230 V - With temperature set-back
new:CDB_Product(ACCTC_ROOMTHERM230B) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_ROOMTHERM230A)
	{
		CDB_Product::Reference = "1938-00.500"
		CDB_Product::Comment= "IDS_TCACC_ROOMTHERMOSTAT_DESCB"
	}
}

// Room thermostat - 24 V - Without temperature set-back
new:CDB_Product(ACCTC_ROOMTHERM24) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_ROOMTHERM230A)
	{
		CDB_Product::Reference = "1946-00.500"
		CDB_Product::Name = "IDS_TCACC_ROOMTHERMOSTAT_24V"
		CDB_Product::Comment= "IDS_TCACC_ROOMTHERMOSTAT_DESCA"
	}
}

// Thermostat P with analog switch clock
new:CDB_Product(ACCTC_THERMOP230A) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_ROOMTHERM230A)
	{
		CDB_Product::Reference = "1932-00.500"
		CDB_Product::Name = "IDS_TCACC_THERMOSTATP230V"
		CDB_Product::Comment= "IDS_TCACC_THERMOSTATP230V_DESCA"
	}
}

// Thermostat P with digital switch clock
new:CDB_Product(ACCTC_THERMOP230B) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_ROOMTHERM230A)
	{
		CDB_Product::Reference = "1932-01.500"
		CDB_Product::Name = "IDS_TCACC_THERMOSTATP230V"
		CDB_Product::Comment= "IDS_TCACC_THERMOSTATP230V_DESCB"
	}
}

// Distributor strip
new:CDB_Product(ACCTC_DISTRSTRIP) -> TRVACCESSOR_TAB
{ Inherited(ACCTC_ROOMTHERM230A)
	{
		CDB_Product::Reference = "1612-00.000"
		CDB_Product::Name = "IDS_TCACC_DISTRIBUTIONSTRIP"
		CDB_Product::Comment= "IDS_TCACC_DISTRIBUTIONSTRIP_DESC"
	}
}

///////////////////////////////////////////////////////////////////
//
//		Table MEASTOOLSTYPE_TAB : ordered enumeration of the types 
//          Measuring tools
//
///////////////////////////////////////////////////////////////////
// HYS-1938: TA-Smart Dp - 05 - Individual selection: right view
// HYS-1940: TA-Smart Dp - 07 - Add smart DpC in the confirm selection dialog.
//  - Rename MEASTOOLSTYPE to DPSENSORTYPE
new:CDB_StringID(DPSENSORTYPE)->MEASTOOLSTYPE_TAB
{
	{
		"IDS_MT_DPSENSOR_TYPE"	// Dp sensors
	}
	++
	MEASTOOLS_TAB
}

///////////////////////////////////////////////////////////////////////////////////
//
//								CDB_DpSensor
//
//	new:CDB_DpSensor(ID)->tableID	Common CData syntax
//	{
//		{
//			{
//				{
//					0				isDeleted
//					1				isAvailable
//					0				isHidden
//					1				isFix
//					0				Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
//					0				Free integer (bit 0: NotForIndSel, bit 1: NotForDirSel, bit 2: NotForHMCalc)
//					0               Sort integer (Allow to show a group of articles in the order defined with this variable).
//				}
//				Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
//				PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
//				Tmax in °C
//				Tmin in °C
//			}
//			"Reference"				Reference to the product.
//			"Name"					Name of the product
//			TypeID					Identifier of the valve type 
//			FamilyID				Identifier of the family of the product
//			VersionID				Identifier of the version of the product
//			PriorityLevel			Level of priority for selection [1,10]
//			Comment					Product comment
//			ProdImgID				Product image ID
//			AccessGroupID			Identifier of the accessory group
//			PartOfaSet				Boolean indicating if the valve is part of a ActSet
//			TableSetID				ID of the table containing the set
//			Price					Price of the product
//			ProductUseFlag			#eProduct, #eAccessory, #eBoth Integer to indicate if the product is only a product, only accessory or both
//			AccessorySeriesID		Identifier of the series of the accessory (mainly used in DlgDirSel)
//			isAttached				0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
//			AccTypeID				Identifier of the accessory type if #eBoth 
//			AccFamilyID				Identifier of the accessory family if #eBoth
//		}
//		MinMeasurableDp			Minimum differential pressure that the instrument can read.
//		MaxMeasurableDp			Maximum differential pressure that the instrument can read.
//      BurstPressure			Max. differential pressure.
//		OutputSignals			List of accepted output control signals separated by "\".
//	}
//
///////////////////////////////////////////////////////////////////////////////////

// TA-Link 0-10 V [0-40 kPa].
new:CDB_DpSensor(TALINK_0_10V_0_40) -> MEASTOOLS_TAB
{
	{
		{
			{
				0											// isDeleted
				1                                       	// isAvailable
				0                                       	// isHidden
				1                                       	// isFix
				0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
				0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
				0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
			}
			0.6e+6 \ 2.5e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
			NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
			80.0                                    	// Tmax in �C
			-15.0                                      	// Tmin in �C
		}
		"52 010-004"                       			// Reference to the TA Product
		"TA-Link"  									// Name of the product
		DPSENSORTYPE                      			// Identifier of the valve type
		FAM_TALINK                					// Identifier of the family of the product
		NO_ID                                  		// Identifier of the version of the product
		1                                      		// Level of priority for selection [1,10]
		""  										// Product comment
		"PX_TALINK"                                	// Product image ID
		ACCGR_TALINK                                // Identifier of the accessory group
		#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
		NO_ID										// Table ID where are sets if exist for the current product.
		0.0                                     	// Price of the product
		#eBoth                       				// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
		NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
		0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
		NO_ID                           			// Identifier of the accessory type if #eBoth 
		NO_ID										// Identifier of the accessory family if #eBoth	
	}
	0.0											// Minimum differential pressure that the instrument can read.
	4.0e+4										// Maximum differential pressure that the instrument can read.
	5.0e+5										// Max. differential pressure.
	SIG_0-10V									// List of accepted output control signals separated by "\".
}

// TA-Link 0-10 V [0-100 kPa].
new:CDB_DpSensor(TALINK_0_10V_0_100) -> MEASTOOLS_TAB
{ Inherited(TALINK_0_10V_0_40)
	{
		CDB_Product::Reference = "52 010-010"
		CDB_DpSensor::MaxMeasurableDp = 1.0e+5
	}
}

// TA-Link 4-20 mA [0-100 kPa].
new:CDB_DpSensor(TALINK_4_20MA_0_100) -> MEASTOOLS_TAB
{ Inherited(TALINK_0_10V_0_100)
	{
		CDB_Product::Reference = "52 110-010"
		CDB_DpSensor::OutputSignals = SIG_4-20mA
	}
}

///////////////////////////////////////////////////////////////////
//
//		Table ACCTYPE_TAB : ordered enumeration of the types of
//							accessories
//
///////////////////////////////////////////////////////////////////

new:CDB_StringID(ACCTYP_TEMPSENS)->ACCTYPE_TAB
{
	{
		"IDS_ACCTYP_TEMPERATURESENSOR"
	}
	++
	MEASTOOLSACC_TAB
}

///////////////////////////////////////////////////////////////////
//
//		Table ACCFAM_TAB : ordered enumeration of the families of
//							accessories
//
///////////////////////////////////////////////////////////////////

new:CDB_StringID(ACCFAM_SMVTEMPSENS)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SMARTVALVETEMPSENSOR"
	}
	++
	ACCTYP_TEMPSENS
}

///////////////////////////////////////////////////////////////////////////
// Temperature sensor
// Included in TA-Smart (3 m DN 20-50, 5 m DN 65-125).
///////////////////////////////////////////////////////////////////////////

// 3m cable
new:CDB_Product(MTACC_TEMPSENSOR3M) -> MEASTOOLSACC_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 2.5e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		110                                    	    // Tmax in �C
		-10                                       	// Tmin in �C
	}
	"322230-01100"                       		// Reference to the TA Product
	"IDS_MTACC_TEMPSENSOR"  			        // Name of the product
	ACCTYP_TEMPSENS                      		// Identifier of the valve type
	ACCFAM_SMVTEMPSENS                   		// Identifier of the family of the product
	NO_ID                                  		// Identifier of the version of the product
	1                                      		// Level of priority for selection [1,10]
	"IDS_MTACC_TEMPSENSOR3M_DESC"  			    // Product comment
	"NO_ID"                                 	// Product image ID
	NO_ID                                   	// Identifier of the accessory group
	#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                     	// Price of the product
	#eAccessory                       			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           			// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

// 5m cable
new:CDB_Product(MTACC_TEMPSENSOR5M) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSOR3M)
	{
		CDB_Product::Reference = "322230-01101"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSOR5M_DESC"
	}
}

// 10m cable
new:CDB_Product(MTACC_TEMPSENSOR10M) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSOR3M)
	{
		CDB_Product::Reference = "322230-01104"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSOR10M_DESC"
	}
}

///////////////////////////////////////////////////////////////////////////
// Temperature sensor pocket
// Included in TA-Smart DN 65-125.
///////////////////////////////////////////////////////////////////////////

// DN 20-25
new:CDB_Product(MTACC_TEMPSENSPOCKETA) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSOR3M)
	{
		CDB_Product::Reference = "322230-00401"
		CDB_Product::Name = "IDS_MTACC_TEMPSENSORPOCKET_2025"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSORPOCKET_DESC"
	}
}

// DN 32-80
new:CDB_Product(MTACC_TEMPSENSPOCKETB) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSPOCKETA)
	{
		CDB_Product::Reference = "322230-00400"
		CDB_Product::Name = "IDS_MTACC_TEMPSENSORPOCKET_3280"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSORPOCKET_DESC"
	}
}

// DN 100-125
new:CDB_Product(MTACC_TEMPSENSPOCKETC) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSPOCKETA)
	{
		CDB_Product::Reference = "322230-00402"
		CDB_Product::Name = "IDS_MTACC_TEMPSENSORPOCKET_100125"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSORPOCKET_DESC"
	}
}

// NPT thread
// DN 20-25
new:CDB_Product(MTACC_TEMPSENSPOCKETD) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSPOCKETA)
	{
		CDB_Product::Reference = "322230-00501"
		CDB_Product::Name = "IDS_MTACC_TEMPSENSORPOCKET_2025"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSORPOCKET_DESC"
	}
}

// DN 32-80
new:CDB_Product(MTACC_TEMPSENSPOCKETE) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSPOCKETA)
	{
		CDB_Product::Reference = "322230-00500"
		CDB_Product::Name = "IDS_MTACC_TEMPSENSORPOCKET_3280"
		CDB_Product::Comment= "IDS_MTACC_TEMPSENSORPOCKET_DESC"
	}
}

///////////////////////////////////////////////////////////////////////////
// Temperature housing
// Included in TA-Smart DN 20-50
///////////////////////////////////////////////////////////////////////////

// DN 20
new:CDB_Product(MTACC_TEMPHOUSING20) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPSENSPOCKETA)
	{
		CDB_Product::Reference = "322230-00020"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_20"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 25
new:CDB_Product(MTACC_TEMPHOUSING25) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00025"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_25"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 32
new:CDB_Product(MTACC_TEMPHOUSING32) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00032"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_32"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 40
new:CDB_Product(MTACC_TEMPHOUSING40) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00040"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_40"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 50
new:CDB_Product(MTACC_TEMPHOUSING50) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00050"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_50"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// NPT thread
// DN 20
new:CDB_Product(MTACC_TEMPHOUSING20N) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00320"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_20"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 25
new:CDB_Product(MTACC_TEMPHOUSING25N) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00325"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_25"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 32
new:CDB_Product(MTACC_TEMPHOUSING32N) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00332"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_32"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 40
new:CDB_Product(MTACC_TEMPHOUSING40N) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00340"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_40"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// DN 50
new:CDB_Product(MTACC_TEMPHOUSING50N) -> MEASTOOLSACC_TAB
{ Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "322230-00350"
		CDB_Product::Name = "IDS_MTACC_TEMPHOUSING_50"
		CDB_Product::Comment= "IDS_MTACC_TEMPHOUSING_DESC"
	}
}

// 1 m capillary pipes Ø6 mm for TA-Smart-Dp set
new:CDB_Product(MTACC_CAPPIPE06) -> MEASTOOLSACC_TAB
{Inherited(MTACC_TEMPHOUSING20)
	{
		CDB_Product::Reference = "-"
		CDB_Product::Name = "IDS_MTACC_CAPPIPE06"	// Capillary pipe
		CDB_Product::Comment = "IDS_MTACC_CAPPIPE06_DESC"
	}
}

// HYS-2007: Accessory group TA Link alone
// 1 m capillary pipes 
new:CDB_Product(MTACC_CAPPIPE06_A) -> MEASTOOLSACC_TAB
{Inherited(MTACC_CAPPIPE06)
	{
		CDB_Product::Reference = "52 010-901"
		CDB_Product::TypeID = ACCTYP_DPC
		CDB_Product::FamilyID = ACCFAM_TALINK
	}
}

// Measuring point, two way.
new:CDB_Product(ACC_MEASPT_6) -> MEASTOOLSACC_TAB
{
	{
		{
			0											// isDeleted
			1                                       	// isAvailable
			0                                       	// isHidden
			1                                       	// isFix
			0                                       	// Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation )
			0                                       	// Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0.6e+6 \ 2.5e+6                 			// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                   	// PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		110                                    	    // Tmax in �C
		-10                                       	// Tmin in �C
	}
	"52179-100"                       			// Reference to the TA Product
	"IDS_ACC_MEASPT_6"  			        	// Name of the product
	ACCTYP_DPC                      			// Identifier of the valve type
	ACCFAM_TALINK                   			// Identifier of the family of the product
	NO_ID                                  		// Identifier of the version of the product
	1                                      		// Level of priority for selection [1,10]
	"IDS_DESC_ACC_MEASPT_6"  			    	// Product comment
	"NO_ID"                                 	// Product image ID
	NO_ID                                   	// Identifier of the accessory group
	#ePartOfaSetNo                          	// Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                     	// Price of the product
	#eAccessory                       			// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                           			// Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                               			// 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                           			// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth	
}

// HYS-2055: IPI March 2023 - TA-Smart insulation shells.
///////////////////////////////////////////////////////////////////
//
//		Table ACCTYPE_TAB : ordered enumeration of the types of
//							accessories
//
///////////////////////////////////////////////////////////////////

new:CDB_StringID(ACCTYP_INSULATION)->ACCTYPE_TAB
{
	{
		"IDS_ACCTYP_INSULATION"
	}
	++
	VALVEACCESSOR_TAB
}

///////////////////////////////////////////////////////////////////
//
//		Table ACCFAM_TAB : ordered enumeration of the families of
//							accessories
//
///////////////////////////////////////////////////////////////////

new:CDB_StringID(ACCFAM_SMVINSUL)->ACCFAM_TAB
{
	{
		"IDS_ACCFAM_SMARTVALVEINSUL"
	}
	++
	ACCTYP_INSULATION
}
//******************************
// Smart valves accessories - Insulation
//******************************

new:CDB_Product(ACC_SMV_INS20) -> VALVEACCESSOR_TAB
{
	{
		{
			0 											// isDeleted
			1                                           // isAvailable
			0                                           // isHidden
			1                                           // isFix
			0                                           // Integer for flagging b31...b0 (bit 0: InCbi, bit1: available for Hub, bit2: available for HubStation)
			0                                           // Integer to exclude product for selection: 1 (Individual/Batch), 2 (Direct) or 4 (HMCalc).
			0               							// Sort integer (Allow to show a group of articles in the order defined with this variable).
		}
		0 \ DBL_MAX									// Pmaxmin and Pmaxmax in Pa (if Pmaxmin = PN6, Pmaxmin is not used in PN string; a 'd' in front of Pmaxmin enforces it in PN string)
		NO_ID                                       // PNRangeID			Identifier of CDB_RuledTable that contains available PN, could be NO_ID in this case Pmaxmin/max are used
		110                                     	// Tmax in �C
		-10                                     	// Tmin in �C
	}
	"322230-00620"								// Reference to the TA Product
	"IDS_ACC_INSUL20_NAME"                   	// Name of the product (can be an IDS)
	ACCTYP_INSULATION                           // Identifier of the type of the accessory (mainly used in DlgDirSel)
	ACCFAM_SMVINSUL                             // Identifier of the family of the accessory (mainly used in DlgDirSel)
	NO_ID										// Identifier of the version of the product
	1											// Level of priority for selection [1,10]
	"IDS_DESC_ACC_SMV_INSUL"                    // IDS of a more verbose description of the accessory
	"NO_ID"										// Product image ID		
	NO_ID                                       // Identifier of the accessory group
	#ePartOfaSetNo                              // Boolean indicating if product is part of a set. Can be #ePartOfaSetNo, #ePartOfaSetYes, #ePartOfaSetYesBreakOk or #ePartOfaSetYesBreakOnMsg.
	NO_ID										// Table ID where are sets if exist for the current product.
	0.0                                         // Price of the product
	#eAccessory                              	// #eProduct, #eAccessory, #eBoth Integer to indicate if the Product is only Product, only Accessory or both
	NO_ID                                       // Identifier of the series of the accessory (mainly used in DlgDirSel)
	0                                           // 0/1: 1 if accessory cannot be ordered separately (for DlgDirSel)
	NO_ID                                      	// Identifier of the accessory type if #eBoth 
	NO_ID										// Identifier of the accessory family if #eBoth
}

new:CDB_Product(ACC_SMV_INS25) -> VALVEACCESSOR_TAB
{ Inherited(ACC_SMV_INS20)
	{
		CDB_Product::Reference = "322230-00625"
		CDB_Product::Name = "IDS_ACC_INSUL25_NAME"
	}
}

new:CDB_Product(ACC_SMV_INS32) -> VALVEACCESSOR_TAB
{ Inherited(ACC_SMV_INS20)
	{
		CDB_Product::Reference = "322230-00632"
		CDB_Product::Name = "IDS_ACC_INSUL32_NAME"
	}
}

new:CDB_Product(ACC_SMV_INS40) -> VALVEACCESSOR_TAB
{ Inherited(ACC_SMV_INS20)
	{
		CDB_Product::Reference = "322230-00640"
		CDB_Product::Name = "IDS_ACC_INSUL40_NAME"
	}
}

new:CDB_Product(ACC_SMV_INS50) -> VALVEACCESSOR_TAB
{ Inherited(ACC_SMV_INS20)
	{
		CDB_Product::Reference = "322230-00650"
		CDB_Product::Name = "IDS_ACC_INSUL50_NAME"
	}
}

////////////////////////////////////////////////////////////////
//
//		ROOT TABLE identification
//
////////////////////////////////////////////////////////////////

ROOT_TABLE(ROOT_TABLE)
