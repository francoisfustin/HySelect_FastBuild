
.ProjectName  = "STTubeDevice"
.ProjectNames + .ProjectName
                                             
.ProjectSourcesPath  = "../DFU/DFUSe/$ProjectName$"

.ProjectOutputPath  = "$ProjectSourcesPath$/Debug"
.ProjectOutputPaths + .ProjectOutputPath

.ProjectLibraryName  = '$ProjectName$.lib'
.ProjectLibraryNames + .ProjectLibraryName

Using( .WindowsSDK_Executable_Tools )
Using( .WindowsSDK_Include_Directories )

Exec( "$ProjectName$_ResourcesCompiler" )
{        
    .ExecExecutable           = '$WindowsSDK_ResourceCompiler$'
    .ExecOutput               = '$SolutionPath$/$ProjectOutputPath$/$ProjectName$.res'
    .ExecArguments            = '/D "_DEBUG"'
                              + ' /D "_VC80_UPGRADE=0x0600"'
                              + ' /D "_UNICODE"'
                              + ' /D "UNICODE"'
                              + ' /nologo'
                              + ' /i "$VisualStudio_IncludeATLMFCPath$"'
                              + ' $WindowsSDK_Includes_Path_rc$'
                              + ' /fo "$SolutionPath$/$ProjectOutputPath$/$ProjectName$.res"'
                              + ' "$SolutionPath$/$ProjectSourcesPath$/$ProjectName$.rc"'
}
    
Library( '$ProjectName$_Debug' )
{
    Using( .VisualStudio_Include_Directories )
    Using( .WindowsSDK_Include_Directories )
    Using( .VisualStudio_Library_Directories )
    Using( .WindowsSDK_Library_Directories )
    Using( .VisualStudio_Executable_Tools )
    
    .PreBuildDependencies = { "$ProjectName$_ResourcesCompiler" }
    
    ; options for compilation
    .Compiler = 'Compiler-x86'
    .CompilerOptions = '/c '
                     + ' /analyze-'
                     + ' /D WIN32'
                     + ' /D UNICODE'
                     + ' /D _CRT_SECURE_NO_WARNINGS'
                     + ' /D _DEBUG'
                     + ' /D _LIB'
                     + ' /D _UNICODE'
                     + ' /D _VC80_UPGRADE=0x0600'
                     + ' /diagnostics:column'
                     + ' /EHsc'
                     + ' /external:W3'
                     + ' /FC'
                     + ' /Fd"$SolutionPath$/$ProjectOutputPath$/$ProjectName$.PDB"'
                     + ' /Fo%2'
                     + ' /fp:precise'
                     + ' /FS'
                     + ' /Gd'
                     + ' /GS'
                     + ' /I"$SolutionPath$/$ProjectSourcesPath$/../INCLUDES"'
                     + ' /MTd'
                     + ' /nologo'
                     + ' /Od'
                     + ' /Oy-'
                     + ' /RTC1'
                     + ' /TP'
                     + ' /W3'
                     + ' /WX-'
                     + ' /Zc:forScope'
                     + ' /Zc:inline'
                     + ' /Zc:wchar_t'
                     + ' /Zi'                     
                     + ' %1'
    .CompilerOptions + '$VisualStudio_Includes_Path$'
    .CompilerOptions + '$WindowsSDK_Includes_Path_link_cl$'
    .CompilerOutputPath = '$SolutionPath$/$ProjectOutputPath$'
    
    ; Options for librarian
    .Librarian                 = '$VisualStudio_LibraryGenerator$'
    .LibrarianOptions          = ' /OUT:%2'
                               + ' /NOLOGO'
                               + ' /MACHINE:X86'
                               ;+ ' /INCREMENTAL:NO' -> For a static library, lib.exe doesn't recognize this option.
                               + ' $VisualStudio_Librairies_Path$'
                               + ' $WindowsSDK_Librairies_Path_link_cl$'
                               + ' %1'
                               + ' $SolutionPath$/$ProjectOutputPath$/$ProjectName$.res'
    .LibrarianOutput           = '$SolutionPath$/$ProjectOutputPath$/$ProjectLibraryName$'
    .LibrarianType             = 'msvc'
    
    
    ; Specify inputs for compilation
    .CompilerInputPath = '$ProjectSourcesPath$'
}

Alias("$ProjectName$")
{
    .Targets = { "$ProjectName$_Debug" }
}
